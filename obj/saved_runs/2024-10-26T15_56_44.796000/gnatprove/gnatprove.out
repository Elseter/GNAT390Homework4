Summary of SPARK analysis
=========================

------------------------------------------------------------------------------------------
SPARK Analysis results        Total       Flow   CodePeer   Provers   Justified   Unproved
------------------------------------------------------------------------------------------
Data Dependencies                 .          .          .         .           .          .
Flow Dependencies                 .          .          .         .           .          .
Initialization                    6          4          .         .           .          2
Non-Aliasing                      .          .          .         .           .          .
Run-time Checks                   .          .          .         .           .          .
Assertions                        .          .          .         .           .          .
Functional Contracts              .          .          .         .           .          .
LSP Verification                  .          .          .         .           .          .
Termination                       .          .          .         .           .          .
Concurrency                       .          .          .         .           .          .
------------------------------------------------------------------------------------------
Total                             6    4 (67%)          .         .           .    2 (33%)


max steps used for successful proof: 0

Analyzed 2 units
in unit drvr, 6 subprograms and packages out of 6 analyzed
  Drvr at drvr.adb:84 flow analyzed (0 errors, 1 checks and 5 warnings)
  Drvr.Fetch_Safe_Input at drvr.adb:96 flow analyzed (0 errors, 1 checks and 0 warnings)
  Drvr.Fetch_Safe_Input.Is_Digit_String at drvr.adb:102 flow analyzed (0 errors, 0 checks and 0 warnings)
  Drvr.Fetch_Safe_Input.String_To_Integer at drvr.adb:113 flow analyzed (0 errors, 0 checks and 0 warnings)
  Drvr.fetch_array at drvr.adb:145 flow analyzed (0 errors, 0 checks and 0 warnings)
  Drvr.validator at drvr.adb:91 flow analyzed (0 errors, 0 checks and 1 warnings)
in unit sorter, 5 subprograms and packages out of 5 analyzed
  Sorter at sorter.ads:5 flow analyzed (0 errors, 0 checks and 0 warnings)
  Sorter.sort at sorter.ads:18 flow analyzed (0 errors, 0 checks and 0 warnings)
  Sorter.sort_1 at sorter.ads:25 flow analyzed (0 errors, 0 checks and 3 warnings)
  Sorter.sort_2 at sorter.ads:26 flow analyzed (0 errors, 0 checks and 3 warnings)
  Sorter.sort_3 at sorter.ads:27 flow analyzed (0 errors, 0 checks and 3 warnings)
