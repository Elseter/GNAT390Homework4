module Standard__integer
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type integer = <range -2147483648 2147483647>
  
  val function first : int
    ensures { result = ((- 2147483648) : int) }
  
  val function last : int
    ensures { result = (2147483647 : int) }
  
  predicate in_range (x: int) = ((first <= x) /\ (x <= last))
  
  val in_range (x: int) : bool
    ensures { result <-> (in_range (x : int)) }
  
  clone export ada__model.Static_Discrete with
    axiom .,
    type t = integer,
    function first = first,
    function last = last,
    predicate in_range = in_range
  
  type integer__ref = { mutable integer__content : integer }
  
  function integer__ref_integer__content__projection (a: integer__ref) : integer =
    a.integer__content
  
  meta "model_projection" function integer__ref_integer__content__projection
  
  meta "inline:no" function integer__ref_integer__content__projection
  
  val integer__havoc (x: integer__ref) : unit
    writes { x }
end

module Standard__positive
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type positive = <range 1 2147483647>
  
  val function first : int
    ensures { result = (1 : int) }
  
  val function last : int
    ensures { result = (2147483647 : int) }
  
  predicate in_range (x: int) = ((first <= x) /\ (x <= last))
  
  val in_range (x: int) : bool
    ensures { result <-> (in_range (x : int)) }
  
  clone export ada__model.Static_Discrete with
    axiom .,
    type t = positive,
    function first = first,
    function last = last,
    predicate in_range = in_range
  
  type positive__ref = { mutable positive__content : positive }
  
  function positive__ref_positive__content__projection (a: positive__ref) : positive =
    a.positive__content
  
  meta "model_projection" function positive__ref_positive__content__projection
  
  meta "inline:no" function positive__ref_positive__content__projection
  
  val positive__havoc (x: positive__ref) : unit
    writes { x }
end

module Standard__character
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type character
  
  val function first : int
    ensures { result = (0 : int) }
  
  val function last : int
    ensures { result = (255 : int) }
  
  predicate in_range (x: int) = ((first <= x) /\ (x <= last))
  
  val in_range (x: int) : bool
    ensures { result <-> (in_range (x : int)) }
  
  clone export ada__model.Static_Discrete with
    axiom .,
    type t = character,
    function first = first,
    function last = last,
    predicate in_range = in_range
  
  type character__ref = { mutable character__content : character }
  
  function character__ref_character__content__projection (a: character__ref) : character =
    a.character__content
  
  meta "model_projection" function character__ref_character__content__projection
  
  meta "inline:no" function character__ref_character__content__projection
  
  val character__havoc (x: character__ref) : unit
    writes { x }
end

module Standard__character__rep
  use Standard__character as Standard__character
  use _gnatprove_standard.Main
  use int.Int
  clone export ada__model.Rep_Proj_Int with
    axiom .,
    type t = Standard__character.character,
    predicate in_range = Standard__character.in_range
  
  meta "model_projection" function to_rep
  
  meta "inline:no" function to_rep
end

module Array__Int__Standard__character
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  
  function index_I1_one : int = 1 : int
  
  type component_type = Standard__character.character
  
  clone export _gnatprove_standard.Array__1 with
    axiom .,
    type I1.t = int,
    predicate I1.le = Int.( <= ),
    predicate I1.lt = Int.( < ),
    predicate I1.gt = Int.( > ),
    function I1.add = Int.( + ),
    function I1.sub = Int.( - ),
    function I1.one = index_I1_one,
    type component_type = component_type
  
  function bool_eq (a: map) (a__first: int) (a__last: int) (b: map) (b__first: int) (b__last: int) : bool =
    ((if (a__first <= a__last) then
        ((b__first <= b__last) /\
           ((a__last - a__first) = (b__last - b__first)))
      else (b__first > b__last)) /\
       (forall temp___idx_98 : int.
          if ((a__first <= temp___idx_98) /\ (temp___idx_98 <= a__last)) then
            ((Standard__character__rep.to_rep ((get a) temp___idx_98))
               = (Standard__character__rep.to_rep
                    ((get b) ((b__first - a__first) + temp___idx_98))))
          else true))
  
  val bool_eq (a: map) (a__first: int) (a__last: int) (b: map) (b__first: int) (b__last: int) : 
    bool
    ensures { result
      =
      ((((((bool_eq (a : map)) (a__first : int)) (a__last : int)) (b : map))
          (b__first : int))
         (b__last : int)) }
  
  axiom bool_eq_rev:
    forall a : map, b : map.
      forall a__first : int, a__last : int, b__first : int, b__last : int.
        ((((((((bool_eq b) b__first) b__last) a) a__first) a__last) = True) ->
           ((if (a__first <= a__last) then
               ((b__first <= b__last) /\
                  ((a__last - a__first) = (b__last - b__first)))
             else (b__first > b__last)) /\
              (forall temp___idx_98 : int.
                 if ((a__first <= temp___idx_98) /\
                       (temp___idx_98 <= a__last)) then
                   ((Standard__character__rep.to_rep ((get a) temp___idx_98))
                      = (Standard__character__rep.to_rep
                           ((get b) ((b__first - a__first) + temp___idx_98))))
                 else true)))
end

module Standard__integer__rep
  use Standard__integer as Standard__integer
  use _gnatprove_standard.Main
  use int.Int
  
  function to_rep (x: Standard__integer.integer) : int =
    Standard__integer.integer'int x
  
  clone export ada__model.Rep_Proj_Int with
    axiom .,
    type t = Standard__integer.integer,
    predicate in_range = Standard__integer.in_range,
    function to_rep = to_rep
  
  meta "model_projection" function to_rep
  
  meta "inline:no" function to_rep
end

module Standard__string
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__integer as Standard__integer
  use Standard__positive as Standard__positive
  use Standard__character as Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Standard__integer__rep as Standard__integer__rep
  
  type component_type = Standard__character.character
  
  function index_1_id (x: int) : int = x
  
  clone export ada__model.Unconstr_Array with
    axiom .,
    type map = Array__Int__Standard__character.map,
    function array_bool_eq = Array__Int__Standard__character.bool_eq,
    type index_base_type = Standard__integer.integer,
    type index_rep_type = int,
    function to_rep = Standard__integer__rep.to_rep,
    function rep_to_int = index_1_id,
    predicate in_range_base = Standard__integer.in_range,
    predicate index_dynamic_property = Standard__positive.dynamic_property,
    predicate index_rep_le = Int.( <= )
  
  type string__ = __t
  
  meta "model_projection" function to_array
  
  meta "inline:no" function to_array
  
  meta "model_projection" function first
  
  meta "inline:no" function first
  
  meta "model_projection" function last
  
  meta "inline:no" function last
  
  type string____ref = { mutable string____content : string__ }
  
  function string____ref_string____content__projection (a: string____ref) : string__ =
    a.string____content
  
  meta "model_projection" function string____ref_string____content__projection
  
  meta "inline:no" function string____ref_string____content__projection
  
  val string____havoc (x: string____ref) : unit
    writes { x }
end

module Standard_String__Img
  use int.Int
  use Standard__string as Standard__string
  use _gnatprove_standard.Main
  use int.Int
  
  val function to_string (x: Main.__image) (s: int) : Standard__string.string__
  
  val function from_string (x: Standard__string.string__) : Main.__image
  
  axiom to_string__first:
    forall x : Main.__image.
      forall s : int [(to_string x) s].
        ((Standard__string.first ((to_string x) s)) = (1 : int))
  
  axiom to_string__length:
    forall x : Main.__image.
      forall s : int [(to_string x) s].
        ((s >= (0 : int)) ->
           ((Standard__string.length ((to_string x) s)) <= s))
end

module Standard__integer___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__integer as Standard__integer
  
  predicate dynamic_invariant (temp___expr_18: int) (temp___is_init_14: bool) (temp___skip_constant_15: bool) (temp___do_toplevel_16: bool) (temp___do_typ_inv_17: bool) =
    if ((temp___is_init_14 = True) \/
          (Standard__integer.first <= Standard__integer.last)) then
      (((Standard__integer.dynamic_property Standard__integer.first)
          Standard__integer.last)
         temp___expr_18)
    else true
  
  val dynamic_invariant (temp___expr_18: int) (temp___is_init_14: bool) (temp___skip_constant_15: bool) (temp___do_toplevel_16: bool) (temp___do_typ_inv_17: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant (temp___expr_18 : int))
                      (temp___is_init_14 : bool))
                     (temp___skip_constant_15 : bool))
                    (temp___do_toplevel_16 : bool))
                   (temp___do_typ_inv_17 : bool)) }
  
  predicate default_initial_assumption (temp___expr_19: int) (temp___skip_top_level_20: bool) =
    true
  
  val default_initial_assumption (temp___expr_19: int) (temp___skip_top_level_20: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption (temp___expr_19 : int))
                   (temp___skip_top_level_20 : bool)) }
end

module Array__Int__Standard__character__Concat
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  function index_Index_one : int = 1 : int
  
  clone export _gnatprove_standard.Array__1__Concat with
    axiom .,
    type component_type = Array__Int__Standard__character.component_type,
    type map = Array__Int__Standard__character.map,
    type Index.t = int,
    predicate Index.le = Int.( <= ),
    predicate Index.lt = Int.( < ),
    predicate Index.gt = Int.( > ),
    function Index.add = Int.( + ),
    function Index.sub = Int.( - ),
    function Index.one = index_Index_one,
    function get = Array__Int__Standard__character.get
end

module Ada___ada__text_io__file_type__rep
  use _gnatprove_standard.Main
  use int.Int
  
  type __rep
  
  function to_base (a: __rep) : __rep = a
  
  val to_base (a: __rep) : __rep
    ensures { result = (to_base (a : __rep)) }
  
  function of_base (a: __rep) : __rep = a
  
  val of_base (a: __rep) : __rep
    ensures { result = (of_base (a : __rep)) }
  
  val function bool_eq (a: __rep) (b: __rep) : bool
end

module Ada___ada__text_io__file_type
  use export Ada___ada__text_io__file_type__rep
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type file_type = __rep
  
  val function value__size : int
  
  val function object__size : int
  
  val function alignment : int
  
  axiom value__size_axiom: (value__size >= (0 : int))
  
  axiom object__size_axiom: (object__size >= (0 : int))
  
  axiom alignment_axiom: (alignment >= (0 : int))
  
  val function user_eq (a: file_type) (b: file_type) : bool
  
  val function dummy : file_type
  
  type file_type__ref = { mutable file_type__content : file_type }
  
  function file_type__ref_file_type__content__projection (a: file_type__ref) : file_type =
    a.file_type__content
  
  meta "model_projection" function file_type__ref_file_type__content__projection
  
  meta "inline:no" function file_type__ref_file_type__content__projection
  
  val file_type__havoc (x: file_type__ref) : unit
    writes { x }
end

module Drvr__rand_file
  use _gnatprove_standard.Main
  use int.Int
  use Ada___ada__text_io__file_type as Ada___ada__text_io__file_type
  
  val rand_file : Ada___ada__text_io__file_type.file_type__ref
end

module Drvr__max
  use _gnatprove_standard.Main
  use int.Int
  
  val max : int__ref
end

module Drvr__current_array_size
  use _gnatprove_standard.Main
  use int.Int
  
  val current_array_size : int__ref
end

module Array__Int__Standard__integer
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__integer as Standard__integer
  use Standard__integer__rep as Standard__integer__rep
  
  function index_I1_one : int = 1 : int
  
  type component_type = Standard__integer.integer
  
  clone export _gnatprove_standard.Array__1 with
    axiom .,
    type I1.t = int,
    predicate I1.le = Int.( <= ),
    predicate I1.lt = Int.( < ),
    predicate I1.gt = Int.( > ),
    function I1.add = Int.( + ),
    function I1.sub = Int.( - ),
    function I1.one = index_I1_one,
    type component_type = component_type
  
  function bool_eq (a: map) (a__first: int) (a__last: int) (b: map) (b__first: int) (b__last: int) : bool =
    ((if (a__first <= a__last) then
        ((b__first <= b__last) /\
           ((a__last - a__first) = (b__last - b__first)))
      else (b__first > b__last)) /\
       (forall temp___idx_163 : int.
          if ((a__first <= temp___idx_163) /\ (temp___idx_163 <= a__last)) then
            ((Standard__integer__rep.to_rep ((get a) temp___idx_163))
               = (Standard__integer__rep.to_rep
                    ((get b) ((b__first - a__first) + temp___idx_163))))
          else true))
  
  val bool_eq (a: map) (a__first: int) (a__last: int) (b: map) (b__first: int) (b__last: int) : 
    bool
    ensures { result
      =
      ((((((bool_eq (a : map)) (a__first : int)) (a__last : int)) (b : map))
          (b__first : int))
         (b__last : int)) }
  
  axiom bool_eq_rev:
    forall a : map, b : map.
      forall a__first : int, a__last : int, b__first : int, b__last : int.
        ((((((((bool_eq b) b__first) b__last) a) a__first) a__last) = True) ->
           ((if (a__first <= a__last) then
               ((b__first <= b__last) /\
                  ((a__last - a__first) = (b__last - b__first)))
             else (b__first > b__last)) /\
              (forall temp___idx_163 : int.
                 if ((a__first <= temp___idx_163) /\
                       (temp___idx_163 <= a__last)) then
                   ((Standard__integer__rep.to_rep ((get a) temp___idx_163))
                      = (Standard__integer__rep.to_rep
                           ((get b) ((b__first - a__first) + temp___idx_163))))
                 else true)))
end

module Drvr__a
  use _gnatprove_standard.Main
  use int.Int
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  
  val a : Array__Int__Standard__integer.map__ref
end

module Drvr__choice
  use _gnatprove_standard.Main
  use int.Int
  
  val choice : int__ref
end

module Sorter__array_type
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__integer as Standard__integer
  use Standard__integer as Standard__integer
  use Standard__integer__rep as Standard__integer__rep
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  
  type component_type = Standard__integer.integer
  
  function index_1_id (x: int) : int = x
  
  clone export ada__model.Unconstr_Array with
    axiom .,
    type map = Array__Int__Standard__integer.map,
    function array_bool_eq = Array__Int__Standard__integer.bool_eq,
    type index_base_type = Standard__integer.integer,
    type index_rep_type = int,
    function to_rep = Standard__integer__rep.to_rep,
    function rep_to_int = index_1_id,
    predicate in_range_base = Standard__integer.in_range,
    predicate index_dynamic_property = Standard__integer.dynamic_property,
    predicate index_rep_le = Int.( <= )
  
  type array_type = __t
  
  meta "model_projection" function to_array
  
  meta "inline:no" function to_array
  
  meta "model_projection" function first
  
  meta "inline:no" function first
  
  meta "model_projection" function last
  
  meta "inline:no" function last
  
  type array_type__ref = { mutable array_type__content : array_type }
  
  function array_type__ref_array_type__content__projection (a: array_type__ref) : array_type =
    a.array_type__content
  
  meta "model_projection" function array_type__ref_array_type__content__projection
  
  meta "inline:no" function array_type__ref_array_type__content__projection
  
  val array_type__havoc (x: array_type__ref) : unit
    writes { x }
end

module Ada___ada__text_io__file_system
  use _gnatprove_standard.Main
  use int.Int
  
  val file_system : Main.__private__ref
end

module Ada___ada__text_io__standard_in
  use _gnatprove_standard.Main
  use int.Int
  
  val standard_in : Main.__private__ref
end

module Ada___ada__text_io__standard_out
  use _gnatprove_standard.Main
  use int.Int
  
  val standard_out : Main.__private__ref
end

module Ada___ada__text_io__standard_err
  use _gnatprove_standard.Main
  use int.Int
  
  val standard_err : Main.__private__ref
end

module Ada___ada__text_io__current_in
  use _gnatprove_standard.Main
  use int.Int
  
  val current_in : Main.__private__ref
end

module Ada___ada__text_io__current_out
  use _gnatprove_standard.Main
  use int.Int
  
  val current_out : Main.__private__ref
end

module Ada___ada__text_io__current_err
  use _gnatprove_standard.Main
  use int.Int
  
  val current_err : Main.__private__ref
end

module Drvr__fetch_safe_input___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Standard__integer___axiom as Standard__integer___axiom
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  
  val fetch_safe_input (min: int) (max: int) (input: int__ref) : unit
    reads { Ada___ada__text_io__file_system.file_system,
      Ada___ada__text_io__standard_in.standard_in,
      Ada___ada__text_io__standard_out.standard_out,
      Ada___ada__text_io__standard_err.standard_err,
      Ada___ada__text_io__current_in.current_in,
      Ada___ada__text_io__current_out.current_out,
      Ada___ada__text_io__current_err.current_err }
    requires { true }
    writes { Ada___ada__text_io__file_system.file_system, Ada___ada__text_io__standard_in.standard_in, Ada___ada__text_io__standard_out.standard_out, Ada___ada__text_io__standard_err.standard_err, Ada___ada__text_io__current_in.current_in, Ada___ada__text_io__current_out.current_out, Ada___ada__text_io__current_err.current_err, input }
    ensures { ((((Standard__integer___axiom.dynamic_invariant
                    (input.int__content))
                   True)
                  True)
                 True)
                True }
end

module Ada___ada__text_io__is_open
  use _gnatprove_standard.Main
  use int.Int
  use Ada___ada__text_io__file_type as Ada___ada__text_io__file_type
  
  val function is_open (file: Ada___ada__text_io__file_type.file_type) : 
    bool
  
  val predicate is_open__function_guard (temp___result_166: bool) (file: 
    Ada___ada__text_io__file_type.file_type)
end

module Ada___ada__text_io__mode
  use _gnatprove_standard.Main
  use int.Int
  use Ada___ada__text_io__file_type as Ada___ada__text_io__file_type
  
  val function mode (file: Ada___ada__text_io__file_type.file_type) : 
    int
  
  val predicate mode__function_guard (temp___result_167: int) (file: 
    Ada___ada__text_io__file_type.file_type)
end

module Ada___ada__text_io__line_length
  use _gnatprove_standard.Main
  use int.Int
  use _gnatprove_standard.Main as Main
  use Ada___ada__text_io__file_type as Ada___ada__text_io__file_type
  
  val function line_length (file: Ada___ada__text_io__file_type.file_type) (Ada___ada__text_io__file_system___file_system___: 
    Main.__private) (Ada___ada__text_io__standard_in___standard_in___: 
    Main.__private) (Ada___ada__text_io__standard_out___standard_out___: 
    Main.__private) (Ada___ada__text_io__standard_err___standard_err___: 
    Main.__private) (Ada___ada__text_io__current_in___current_in___: 
    Main.__private) (Ada___ada__text_io__current_out___current_out___: 
    Main.__private) (Ada___ada__text_io__current_err___current_err___: 
    Main.__private) : int
  
  val predicate line_length__function_guard (temp___result_168: int) (file: 
    Ada___ada__text_io__file_type.file_type) (Ada___ada__text_io__file_system___file_system___: 
    Main.__private) (Ada___ada__text_io__standard_in___standard_in___: 
    Main.__private) (Ada___ada__text_io__standard_out___standard_out___: 
    Main.__private) (Ada___ada__text_io__standard_err___standard_err___: 
    Main.__private) (Ada___ada__text_io__current_in___current_in___: 
    Main.__private) (Ada___ada__text_io__current_out___current_out___: 
    Main.__private) (Ada___ada__text_io__current_err___current_err___: 
    Main.__private)
end

module Ada___ada__text_io__page_length
  use _gnatprove_standard.Main
  use int.Int
  use _gnatprove_standard.Main as Main
  use Ada___ada__text_io__file_type as Ada___ada__text_io__file_type
  
  val function page_length (file: Ada___ada__text_io__file_type.file_type) (Ada___ada__text_io__file_system___file_system___: 
    Main.__private) (Ada___ada__text_io__standard_in___standard_in___: 
    Main.__private) (Ada___ada__text_io__standard_out___standard_out___: 
    Main.__private) (Ada___ada__text_io__standard_err___standard_err___: 
    Main.__private) (Ada___ada__text_io__current_in___current_in___: 
    Main.__private) (Ada___ada__text_io__current_out___current_out___: 
    Main.__private) (Ada___ada__text_io__current_err___current_err___: 
    Main.__private) : int
  
  val predicate page_length__function_guard (temp___result_169: int) (file: 
    Ada___ada__text_io__file_type.file_type) (Ada___ada__text_io__file_system___file_system___: 
    Main.__private) (Ada___ada__text_io__standard_in___standard_in___: 
    Main.__private) (Ada___ada__text_io__standard_out___standard_out___: 
    Main.__private) (Ada___ada__text_io__standard_err___standard_err___: 
    Main.__private) (Ada___ada__text_io__current_in___current_in___: 
    Main.__private) (Ada___ada__text_io__current_out___current_out___: 
    Main.__private) (Ada___ada__text_io__current_err___current_err___: 
    Main.__private)
end

module Ada___ada__text_io__file_type___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Ada___ada__text_io__file_type as Ada___ada__text_io__file_type
  use Ada___ada__text_io__is_open as Ada___ada__text_io__is_open
  
  predicate dynamic_invariant (temp___expr_202: Ada___ada__text_io__file_type.file_type) (temp___is_init_198: bool) (temp___skip_constant_199: bool) (temp___do_toplevel_200: bool) (temp___do_typ_inv_201: bool) =
    true
  
  val dynamic_invariant (temp___expr_202: Ada___ada__text_io__file_type.file_type) (temp___is_init_198: bool) (temp___skip_constant_199: bool) (temp___do_toplevel_200: bool) (temp___do_typ_inv_201: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant
                       (temp___expr_202 :
                          Ada___ada__text_io__file_type.file_type))
                      (temp___is_init_198 : bool))
                     (temp___skip_constant_199 : bool))
                    (temp___do_toplevel_200 : bool))
                   (temp___do_typ_inv_201 : bool)) }
  
  predicate default_initial_assumption (temp___expr_203: Ada___ada__text_io__file_type.file_type) (temp___skip_top_level_204: bool) =
    if temp___skip_top_level_204 then true
    else
      (let temp___205 = temp___expr_203 in
       not ((Ada___ada__text_io__is_open.is_open temp___205) = True))
  
  val default_initial_assumption (temp___expr_203: Ada___ada__text_io__file_type.file_type) (temp___skip_top_level_204: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption
                    (temp___expr_203 :
                       Ada___ada__text_io__file_type.file_type))
                   (temp___skip_top_level_204 : bool)) }
end

module Ada___ada__text_io__open___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use _gnatprove_standard.Main as Main
  use Standard__string as Standard__string
  use Ada___ada__text_io__file_type as Ada___ada__text_io__file_type
  use Ada___ada__text_io__is_open as Ada___ada__text_io__is_open
  use Ada___ada__text_io__mode as Ada___ada__text_io__mode
  use Ada___ada__text_io__line_length as Ada___ada__text_io__line_length
  use Ada___ada__text_io__page_length as Ada___ada__text_io__page_length
  use Ada___ada__text_io__file_type___axiom as Ada___ada__text_io__file_type___axiom
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  
  val open (file: Ada___ada__text_io__file_type.file_type__ref) (mode: int) (name: 
    Standard__string.string__) (form: Standard__string.string__) : unit
    reads { Ada___ada__text_io__file_system.file_system,
      Ada___ada__text_io__standard_in.standard_in,
      Ada___ada__text_io__standard_out.standard_out,
      Ada___ada__text_io__standard_err.standard_err,
      Ada___ada__text_io__current_in.current_in,
      Ada___ada__text_io__current_out.current_out,
      Ada___ada__text_io__current_err.current_err }
    requires { [@GP_Pretty_Ada:9798]
               (not ((Ada___ada__text_io__is_open.is_open
                        (file.Ada___ada__text_io__file_type.file_type__content))
                       = True))
    }
    writes { Ada___ada__text_io__file_system.file_system, Ada___ada__text_io__standard_in.standard_in, Ada___ada__text_io__standard_out.standard_out, Ada___ada__text_io__standard_err.standard_err, Ada___ada__text_io__current_in.current_in, Ada___ada__text_io__current_out.current_out, Ada___ada__text_io__current_err.current_err, file }
    ensures { (((([@GP_Pretty_Ada:1505]
                  ((Ada___ada__text_io__is_open.is_open
                      (file.Ada___ada__text_io__file_type.file_type__content))
                     = True)) /\
                   ([@GP_Pretty_Ada:1515]
                    ((Ada___ada__text_io__mode.mode
                        (file.Ada___ada__text_io__file_type.file_type__content))
                       = mode))) /\
                  (if (mode <> (0 : int)) then
                     (([@GP_Pretty_Ada:1524]
                       (((((((((Ada___ada__text_io__line_length.line_length
                                  (file.Ada___ada__text_io__file_type.file_type__content))
                                 (Main.__private__content
                                     Ada___ada__text_io__file_system.file_system))
                                (Main.__private__content
                                    Ada___ada__text_io__standard_in.standard_in))
                               (Main.__private__content
                                   Ada___ada__text_io__standard_out.standard_out))
                              (Main.__private__content
                                  Ada___ada__text_io__standard_err.standard_err))
                             (Main.__private__content
                                 Ada___ada__text_io__current_in.current_in))
                            (Main.__private__content
                                Ada___ada__text_io__current_out.current_out))
                           (Main.__private__content
                               Ada___ada__text_io__current_err.current_err))
                          = (0 : int))) /\
                        ([@GP_Pretty_Ada:1530]
                         (((((((((Ada___ada__text_io__page_length.page_length
                                    (file.Ada___ada__text_io__file_type.file_type__content))
                                   (Main.__private__content
                                       Ada___ada__text_io__file_system.file_system))
                                  (Main.__private__content
                                      Ada___ada__text_io__standard_in.standard_in))
                                 (Main.__private__content
                                     Ada___ada__text_io__standard_out.standard_out))
                                (Main.__private__content
                                    Ada___ada__text_io__standard_err.standard_err))
                               (Main.__private__content
                                   Ada___ada__text_io__current_in.current_in))
                              (Main.__private__content
                                  Ada___ada__text_io__current_out.current_out))
                             (Main.__private__content
                                 Ada___ada__text_io__current_err.current_err))
                            = (0 : int))))
                   else ([@GP_Pretty_Ada:11812] true))) /\
                 (((((Ada___ada__text_io__file_type___axiom.dynamic_invariant
                        (file.Ada___ada__text_io__file_type.file_type__content))
                       True)
                      True)
                     True)
                    True)) }
end

module Ada___ada__integer_text_io__get___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__integer___axiom as Standard__integer___axiom
  use Ada___ada__text_io__file_type as Ada___ada__text_io__file_type
  use Ada___ada__text_io__is_open as Ada___ada__text_io__is_open
  use Ada___ada__text_io__mode as Ada___ada__text_io__mode
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  
  val get (file: Ada___ada__text_io__file_type.file_type) (item: int__ref) (width: int) : 
    unit
    reads { Ada___ada__text_io__file_system.file_system,
      Ada___ada__text_io__standard_in.standard_in,
      Ada___ada__text_io__standard_out.standard_out,
      Ada___ada__text_io__standard_err.standard_err,
      Ada___ada__text_io__current_in.current_in,
      Ada___ada__text_io__current_out.current_out,
      Ada___ada__text_io__current_err.current_err }
    requires { (([@GP_Pretty_Ada:12779]
                 ((Ada___ada__text_io__is_open.is_open file) = True)) /\
                  ([@GP_Pretty_Ada:12782]
                   ((Ada___ada__text_io__mode.mode file) = (0 : int))))
    }
    writes { Ada___ada__text_io__file_system.file_system, Ada___ada__text_io__standard_in.standard_in, Ada___ada__text_io__standard_out.standard_out, Ada___ada__text_io__standard_err.standard_err, Ada___ada__text_io__current_in.current_in, Ada___ada__text_io__current_out.current_out, Ada___ada__text_io__current_err.current_err, item }
    ensures { ((((Standard__integer___axiom.dynamic_invariant
                    (item.int__content))
                   True)
                  True)
                 True)
                True }
end

module Ada___ada__text_io__close___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Ada___ada__text_io__file_type as Ada___ada__text_io__file_type
  use Ada___ada__text_io__is_open as Ada___ada__text_io__is_open
  use Ada___ada__text_io__file_type___axiom as Ada___ada__text_io__file_type___axiom
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  
  val close (file: Ada___ada__text_io__file_type.file_type__ref) : unit
    reads { Ada___ada__text_io__file_system.file_system,
      Ada___ada__text_io__standard_in.standard_in,
      Ada___ada__text_io__standard_out.standard_out,
      Ada___ada__text_io__standard_err.standard_err,
      Ada___ada__text_io__current_in.current_in,
      Ada___ada__text_io__current_out.current_out,
      Ada___ada__text_io__current_err.current_err }
    requires { [@GP_Pretty_Ada:9856]
               ((Ada___ada__text_io__is_open.is_open
                   (file.Ada___ada__text_io__file_type.file_type__content))
                  = True)
    }
    writes { Ada___ada__text_io__file_system.file_system, Ada___ada__text_io__standard_in.standard_in, Ada___ada__text_io__standard_out.standard_out, Ada___ada__text_io__standard_err.standard_err, Ada___ada__text_io__current_in.current_in, Ada___ada__text_io__current_out.current_out, Ada___ada__text_io__current_err.current_err, file }
    ensures { (([@GP_Pretty_Ada:9867]
                (not ((Ada___ada__text_io__is_open.is_open
                         (file.Ada___ada__text_io__file_type.file_type__content))
                        = True))) /\
                 (((((Ada___ada__text_io__file_type___axiom.dynamic_invariant
                        (file.Ada___ada__text_io__file_type.file_type__content))
                       True)
                      True)
                     True)
                    True)) }
end

module Drvr__C39b
  use _gnatprove_standard.Main
  use int.Int
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  
  val function c39b : Array__Int__Standard__integer.map
end

module Drvr__C40b
  use _gnatprove_standard.Main
  use int.Int
  
  val function c40b : int
end

module Drvr__B41b__L_4__i
  use _gnatprove_standard.Main
  use int.Int
  
  val i : int__ref
end

module Ada___ada__text_io__line_length__2
  use _gnatprove_standard.Main
  use int.Int
  use _gnatprove_standard.Main as Main
  
  val function line_length (Ada___ada__text_io__file_system___file_system___: 
    Main.__private) (Ada___ada__text_io__standard_in___standard_in___: 
    Main.__private) (Ada___ada__text_io__standard_out___standard_out___: 
    Main.__private) (Ada___ada__text_io__standard_err___standard_err___: 
    Main.__private) (Ada___ada__text_io__current_in___current_in___: 
    Main.__private) (Ada___ada__text_io__current_out___current_out___: 
    Main.__private) (Ada___ada__text_io__current_err___current_err___: 
    Main.__private) : int
  
  val predicate line_length__function_guard (temp___result_161: int) (Ada___ada__text_io__file_system___file_system___: 
    Main.__private) (Ada___ada__text_io__standard_in___standard_in___: 
    Main.__private) (Ada___ada__text_io__standard_out___standard_out___: 
    Main.__private) (Ada___ada__text_io__standard_err___standard_err___: 
    Main.__private) (Ada___ada__text_io__current_in___current_in___: 
    Main.__private) (Ada___ada__text_io__current_out___current_out___: 
    Main.__private) (Ada___ada__text_io__current_err___current_err___: 
    Main.__private)
end

module Ada___ada__text_io__page_length__2
  use _gnatprove_standard.Main
  use int.Int
  use _gnatprove_standard.Main as Main
  
  val function page_length (Ada___ada__text_io__file_system___file_system___: 
    Main.__private) (Ada___ada__text_io__standard_in___standard_in___: 
    Main.__private) (Ada___ada__text_io__standard_out___standard_out___: 
    Main.__private) (Ada___ada__text_io__standard_err___standard_err___: 
    Main.__private) (Ada___ada__text_io__current_in___current_in___: 
    Main.__private) (Ada___ada__text_io__current_out___current_out___: 
    Main.__private) (Ada___ada__text_io__current_err___current_err___: 
    Main.__private) : int
  
  val predicate page_length__function_guard (temp___result_162: int) (Ada___ada__text_io__file_system___file_system___: 
    Main.__private) (Ada___ada__text_io__standard_in___standard_in___: 
    Main.__private) (Ada___ada__text_io__standard_out___standard_out___: 
    Main.__private) (Ada___ada__text_io__standard_err___standard_err___: 
    Main.__private) (Ada___ada__text_io__current_in___current_in___: 
    Main.__private) (Ada___ada__text_io__current_out___current_out___: 
    Main.__private) (Ada___ada__text_io__current_err___current_err___: 
    Main.__private)
end

module Ada___ada__text_io__put__4___axiom
  use _gnatprove_standard.Main
  use int.Int
  use _gnatprove_standard.Main as Main
  use Standard__string as Standard__string
  use Ada___ada__text_io__line_length__2 as Ada___ada__text_io__line_length__2
  use Ada___ada__text_io__page_length__2 as Ada___ada__text_io__page_length__2
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  
  val put (item: Standard__string.string__) : unit
    reads { Ada___ada__text_io__file_system.file_system,
      Ada___ada__text_io__standard_in.standard_in,
      Ada___ada__text_io__standard_out.standard_out,
      Ada___ada__text_io__standard_err.standard_err,
      Ada___ada__text_io__current_in.current_in,
      Ada___ada__text_io__current_out.current_out,
      Ada___ada__text_io__current_err.current_err }
    requires { true }
    writes { Ada___ada__text_io__file_system.file_system, Ada___ada__text_io__standard_in.standard_in, Ada___ada__text_io__standard_out.standard_out, Ada___ada__text_io__standard_err.standard_err, Ada___ada__text_io__current_in.current_in, Ada___ada__text_io__current_out.current_out, Ada___ada__text_io__current_err.current_err }
    ensures { (([@GP_Pretty_Ada:3347]
                ((old (((((((Ada___ada__text_io__line_length__2.line_length
                               (Main.__private__content
                                   Ada___ada__text_io__file_system.file_system))
                              (Main.__private__content
                                  Ada___ada__text_io__standard_in.standard_in))
                             (Main.__private__content
                                 Ada___ada__text_io__standard_out.standard_out))
                            (Main.__private__content
                                Ada___ada__text_io__standard_err.standard_err))
                           (Main.__private__content
                               Ada___ada__text_io__current_in.current_in))
                          (Main.__private__content
                              Ada___ada__text_io__current_out.current_out))
                         (Main.__private__content
                             Ada___ada__text_io__current_err.current_err)))
                   = (((((((Ada___ada__text_io__line_length__2.line_length
                              (Main.__private__content
                                  Ada___ada__text_io__file_system.file_system))
                             (Main.__private__content
                                 Ada___ada__text_io__standard_in.standard_in))
                            (Main.__private__content
                                Ada___ada__text_io__standard_out.standard_out))
                           (Main.__private__content
                               Ada___ada__text_io__standard_err.standard_err))
                          (Main.__private__content
                              Ada___ada__text_io__current_in.current_in))
                         (Main.__private__content
                             Ada___ada__text_io__current_out.current_out))
                        (Main.__private__content
                            Ada___ada__text_io__current_err.current_err)))) /\
                 ([@GP_Pretty_Ada:3353]
                  ((old (((((((Ada___ada__text_io__page_length__2.page_length
                                 (Main.__private__content
                                     Ada___ada__text_io__file_system.file_system))
                                (Main.__private__content
                                    Ada___ada__text_io__standard_in.standard_in))
                               (Main.__private__content
                                   Ada___ada__text_io__standard_out.standard_out))
                              (Main.__private__content
                                  Ada___ada__text_io__standard_err.standard_err))
                             (Main.__private__content
                                 Ada___ada__text_io__current_in.current_in))
                            (Main.__private__content
                                Ada___ada__text_io__current_out.current_out))
                           (Main.__private__content
                               Ada___ada__text_io__current_err.current_err)))
                     = (((((((Ada___ada__text_io__page_length__2.page_length
                                (Main.__private__content
                                    Ada___ada__text_io__file_system.file_system))
                               (Main.__private__content
                                   Ada___ada__text_io__standard_in.standard_in))
                              (Main.__private__content
                                  Ada___ada__text_io__standard_out.standard_out))
                             (Main.__private__content
                                 Ada___ada__text_io__standard_err.standard_err))
                            (Main.__private__content
                                Ada___ada__text_io__current_in.current_in))
                           (Main.__private__content
                               Ada___ada__text_io__current_out.current_out))
                          (Main.__private__content
                              Ada___ada__text_io__current_err.current_err))))) }
end

module Ada___ada__text_io__new_line__2___axiom
  use _gnatprove_standard.Main
  use int.Int
  use _gnatprove_standard.Main as Main
  use Ada___ada__text_io__line_length__2 as Ada___ada__text_io__line_length__2
  use Ada___ada__text_io__page_length__2 as Ada___ada__text_io__page_length__2
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  
  val new_line (spacing: int) : unit
    reads { Ada___ada__text_io__file_system.file_system,
      Ada___ada__text_io__standard_in.standard_in,
      Ada___ada__text_io__standard_out.standard_out,
      Ada___ada__text_io__standard_err.standard_err,
      Ada___ada__text_io__current_in.current_in,
      Ada___ada__text_io__current_out.current_out,
      Ada___ada__text_io__current_err.current_err }
    requires { true }
    writes { Ada___ada__text_io__file_system.file_system, Ada___ada__text_io__standard_in.standard_in, Ada___ada__text_io__standard_out.standard_out, Ada___ada__text_io__standard_err.standard_err, Ada___ada__text_io__current_in.current_in, Ada___ada__text_io__current_out.current_out, Ada___ada__text_io__current_err.current_err }
    ensures { (([@GP_Pretty_Ada:2268]
                ((old (((((((Ada___ada__text_io__line_length__2.line_length
                               (Main.__private__content
                                   Ada___ada__text_io__file_system.file_system))
                              (Main.__private__content
                                  Ada___ada__text_io__standard_in.standard_in))
                             (Main.__private__content
                                 Ada___ada__text_io__standard_out.standard_out))
                            (Main.__private__content
                                Ada___ada__text_io__standard_err.standard_err))
                           (Main.__private__content
                               Ada___ada__text_io__current_in.current_in))
                          (Main.__private__content
                              Ada___ada__text_io__current_out.current_out))
                         (Main.__private__content
                             Ada___ada__text_io__current_err.current_err)))
                   = (((((((Ada___ada__text_io__line_length__2.line_length
                              (Main.__private__content
                                  Ada___ada__text_io__file_system.file_system))
                             (Main.__private__content
                                 Ada___ada__text_io__standard_in.standard_in))
                            (Main.__private__content
                                Ada___ada__text_io__standard_out.standard_out))
                           (Main.__private__content
                               Ada___ada__text_io__standard_err.standard_err))
                          (Main.__private__content
                              Ada___ada__text_io__current_in.current_in))
                         (Main.__private__content
                             Ada___ada__text_io__current_out.current_out))
                        (Main.__private__content
                            Ada___ada__text_io__current_err.current_err)))) /\
                 ([@GP_Pretty_Ada:2274]
                  ((old (((((((Ada___ada__text_io__page_length__2.page_length
                                 (Main.__private__content
                                     Ada___ada__text_io__file_system.file_system))
                                (Main.__private__content
                                    Ada___ada__text_io__standard_in.standard_in))
                               (Main.__private__content
                                   Ada___ada__text_io__standard_out.standard_out))
                              (Main.__private__content
                                  Ada___ada__text_io__standard_err.standard_err))
                             (Main.__private__content
                                 Ada___ada__text_io__current_in.current_in))
                            (Main.__private__content
                                Ada___ada__text_io__current_out.current_out))
                           (Main.__private__content
                               Ada___ada__text_io__current_err.current_err)))
                     = (((((((Ada___ada__text_io__page_length__2.page_length
                                (Main.__private__content
                                    Ada___ada__text_io__file_system.file_system))
                               (Main.__private__content
                                   Ada___ada__text_io__standard_in.standard_in))
                              (Main.__private__content
                                  Ada___ada__text_io__standard_out.standard_out))
                             (Main.__private__content
                                 Ada___ada__text_io__standard_err.standard_err))
                            (Main.__private__content
                                Ada___ada__text_io__current_in.current_in))
                           (Main.__private__content
                               Ada___ada__text_io__current_out.current_out))
                          (Main.__private__content
                              Ada___ada__text_io__current_err.current_err))))) }
end

module Drvr__L_5__C55b
  use _gnatprove_standard.Main
  use int.Int
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  
  val function c55b : Array__Int__Standard__integer.map
end

module Drvr__L_5__C56b
  use _gnatprove_standard.Main
  use int.Int
  
  val function c56b : int
end

module Drvr__L_5__B57b__L_4__i
  use _gnatprove_standard.Main
  use int.Int
  
  val i : int__ref
end

module Sorter__count
  use _gnatprove_standard.Main
  use int.Int
  
  val count : int__ref
end

module Sorter__array_type___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Standard__integer as Standard__integer
  use Sorter__array_type as Sorter__array_type
  
  predicate dynamic_invariant (temp___expr_210: Sorter__array_type.array_type) (temp___is_init_206: bool) (temp___skip_constant_207: bool) (temp___do_toplevel_208: bool) (temp___do_typ_inv_209: bool) =
    if temp___skip_constant_207 then true
    else
      ((((Sorter__array_type.dynamic_property Standard__integer.first)
           Standard__integer.last)
          (Sorter__array_type.first temp___expr_210))
         (Sorter__array_type.last temp___expr_210))
  
  val dynamic_invariant (temp___expr_210: Sorter__array_type.array_type) (temp___is_init_206: bool) (temp___skip_constant_207: bool) (temp___do_toplevel_208: bool) (temp___do_typ_inv_209: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant
                       (temp___expr_210 : Sorter__array_type.array_type))
                      (temp___is_init_206 : bool))
                     (temp___skip_constant_207 : bool))
                    (temp___do_toplevel_208 : bool))
                   (temp___do_typ_inv_209 : bool)) }
end

module Sorter__sort___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Standard__integer as Standard__integer
  use Standard__integer__rep as Standard__integer__rep
  use Sorter__array_type as Sorter__array_type
  use Sorter__array_type___axiom as Sorter__array_type___axiom
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  
  val sort (a: Array__Int__Standard__integer.map__ref) (a__first: Standard__integer.integer) (a__last: 
    Standard__integer.integer) (count: int) : unit
    requires { true }
    writes { a }
    ensures { ((((Sorter__array_type___axiom.dynamic_invariant
                    (((Sorter__array_type.of_array
                         (a.Array__Int__Standard__integer.map__content))
                        (Standard__integer__rep.to_rep a__first))
                       (Standard__integer__rep.to_rep a__last)))
                   True)
                  True)
                 True)
                True }
end

module Drvr__L_5__C71b
  use _gnatprove_standard.Main
  use int.Int
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  
  val function c71b : Array__Int__Standard__integer.map
end

module Drvr__L_5__C72b
  use _gnatprove_standard.Main
  use int.Int
  
  val function c72b : int
end

module Drvr__TTaSP1
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type tTaSP1 = <range 1 10000>
  
  val function first : int
    ensures { result = (1 : int) }
  
  val function last : int
    ensures { result = (10000 : int) }
  
  predicate in_range (x: int) = ((first <= x) /\ (x <= last))
  
  val in_range (x: int) : bool
    ensures { result <-> (in_range (x : int)) }
  
  clone export ada__model.Static_Discrete with
    axiom .,
    type t = tTaSP1,
    function first = first,
    function last = last,
    predicate in_range = in_range
  
  type tTaSP1__ref = { mutable tTaSP1__content : tTaSP1 }
  
  function tTaSP1__ref_tTaSP1__content__projection (a: tTaSP1__ref) : tTaSP1 =
    a.tTaSP1__content
  
  meta "model_projection" function tTaSP1__ref_tTaSP1__content__projection
  
  meta "inline:no" function tTaSP1__ref_tTaSP1__content__projection
  
  val tTaSP1__havoc (x: tTaSP1__ref) : unit
    writes { x }
end

module Drvr__TaS___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  
  predicate dynamic_invariant (temp___expr_216: Array__Int__Standard__integer.map) (temp___is_init_212: bool) (temp___skip_constant_213: bool) (temp___do_toplevel_214: bool) (temp___do_typ_inv_215: bool) =
    true
  
  val dynamic_invariant (temp___expr_216: Array__Int__Standard__integer.map) (temp___is_init_212: bool) (temp___skip_constant_213: bool) (temp___do_toplevel_214: bool) (temp___do_typ_inv_215: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant
                       (temp___expr_216 : Array__Int__Standard__integer.map))
                      (temp___is_init_212 : bool))
                     (temp___skip_constant_213 : bool))
                    (temp___do_toplevel_214 : bool))
                   (temp___do_typ_inv_215 : bool)) }
  
  predicate default_initial_assumption (temp___expr_218: Array__Int__Standard__integer.map) (temp___skip_top_level_219: bool) =
    true
  
  val default_initial_assumption (temp___expr_218: Array__Int__Standard__integer.map) (temp___skip_top_level_219: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption
                    (temp___expr_218 : Array__Int__Standard__integer.map))
                   (temp___skip_top_level_219 : bool)) }
end

module Drvr__B41b__L_4
  use _gnatprove_standard.Main
  use int.Int
  
  exception L_4
end

module Drvr__L_5
  use _gnatprove_standard.Main
  use int.Int
  
  exception L_5
end

module Drvr__L_5__B57b__L_4
  use _gnatprove_standard.Main
  use int.Int
  
  exception L_4
end

module Drvr__a__aggregate_def
  use _gnatprove_standard.Main
  use int.Int
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  
  val function drvr__a__aggregate_def (temp___302: int) : Array__Int__Standard__integer.map
end

module Temp___String_Literal_306
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_306 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_306__def_axiom:
    forall __void_param : unit [temp___String_Literal_306 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_306 __void_param))
               (1 : int)))
           = (46 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_306 __void_param))
                 (2 : int)))
             = (92 : int))) /\
         (((((((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_306 __void_param))
                     (3 : int)))
                 = (115 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_306 __void_param))
                       (4 : int)))
                   = (114 : int))) /\
               ((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_306 __void_param))
                      (5 : int)))
                  = (99 : int))) /\
              (((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_306 __void_param))
                      (6 : int)))
                  = (92 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_306 __void_param))
                        (7 : int)))
                    = (114 : int)))) /\
             ((((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_306 __void_param))
                      (8 : int)))
                  = (97 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_306 __void_param))
                        (9 : int)))
                    = (110 : int))) /\
                (((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_306 __void_param))
                        (10 : int)))
                    = (100 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_306 __void_param))
                          (11 : int)))
                      = (111 : int))))) /\
            (((((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_306 __void_param))
                      (12 : int)))
                  = (109 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_306 __void_param))
                        (13 : int)))
                    = (49 : int))) /\
                (((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_306 __void_param))
                        (14 : int)))
                    = (48 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_306 __void_param))
                          (15 : int)))
                      = (107 : int)))) /\
               ((((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_306 __void_param))
                        (16 : int)))
                    = (46 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_306 __void_param))
                          (17 : int)))
                      = (116 : int))) /\
                  (((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_306 __void_param))
                          (18 : int)))
                      = (120 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_306 __void_param))
                            (19 : int)))
                        = (116 : int)))))))
end

module Temp___String_Literal_308
  use _gnatprove_standard.Main
  use int.Int
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_308 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_308__def_axiom:
    forall __void_param : unit [temp___String_Literal_308 __void_param]. true
end

module Temp___String_Literal_316
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_316 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_316__def_axiom:
    forall __void_param : unit [temp___String_Literal_316 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_316 __void_param))
               (1 : int)))
           = (87 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_316 __void_param))
                 (2 : int)))
             = (101 : int))) /\
         ((((((((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_316 __void_param))
                      (3 : int)))
                  = (108 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_316 __void_param))
                        (4 : int)))
                    = (99 : int))) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_316 __void_param))
                       (5 : int)))
                   = (111 : int))) /\
               (((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_316 __void_param))
                       (6 : int)))
                   = (109 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_316 __void_param))
                         (7 : int)))
                     = (101 : int)))) /\
              ((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_316 __void_param))
                       (8 : int)))
                   = (32 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_316 __void_param))
                         (9 : int)))
                     = (116 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_316 __void_param))
                         (10 : int)))
                     = (111 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_316 __void_param))
                           (11 : int)))
                       = (32 : int))))) /\
             (((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_316 __void_param))
                       (12 : int)))
                   = (116 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_316 __void_param))
                         (13 : int)))
                     = (104 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_316 __void_param))
                         (14 : int)))
                     = (101 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_316 __void_param))
                           (15 : int)))
                       = (32 : int)))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_316 __void_param))
                         (16 : int)))
                     = (97 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_316 __void_param))
                           (17 : int)))
                       = (114 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_316 __void_param))
                           (18 : int)))
                       = (114 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_316 __void_param))
                             (19 : int)))
                         = (97 : int)))))) /\
            (((((((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_316 __void_param))
                        (20 : int)))
                    = (121 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_316 __void_param))
                          (21 : int)))
                      = (32 : int))) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_316 __void_param))
                         (22 : int)))
                     = (115 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_316 __void_param))
                         (23 : int)))
                     = (111 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_316 __void_param))
                           (24 : int)))
                       = (114 : int)))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_316 __void_param))
                         (25 : int)))
                     = (116 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_316 __void_param))
                           (26 : int)))
                       = (101 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_316 __void_param))
                           (27 : int)))
                       = (114 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_316 __void_param))
                             (28 : int)))
                         = (32 : int))))) /\
               (((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_316 __void_param))
                         (29 : int)))
                     = (112 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_316 __void_param))
                           (30 : int)))
                       = (114 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_316 __void_param))
                           (31 : int)))
                       = (111 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_316 __void_param))
                             (32 : int)))
                         = (103 : int)))) /\
                  ((((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_316 __void_param))
                           (33 : int)))
                       = (114 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_316 __void_param))
                             (34 : int)))
                         = (97 : int))) /\
                     (((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_316 __void_param))
                             (35 : int)))
                         = (109 : int)) /\
                        ((Standard__character__rep.to_rep
                            ((Array__Int__Standard__character.get
                                (temp___String_Literal_316 __void_param))
                               (36 : int)))
                           = (46 : int))))))))
end

module Temp___String_Literal_318
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_318 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_318__def_axiom:
    forall __void_param : unit [temp___String_Literal_318 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_318 __void_param))
               (1 : int)))
           = (84 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_318 __void_param))
                 (2 : int)))
             = (104 : int))) /\
         (((((((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_318 __void_param))
                     (3 : int)))
                 = (101 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_318 __void_param))
                       (4 : int)))
                   = (32 : int))) /\
               ((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_318 __void_param))
                      (5 : int)))
                  = (115 : int))) /\
              ((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_318 __void_param))
                       (6 : int)))
                   = (105 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_318 __void_param))
                         (7 : int)))
                     = (122 : int))) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_318 __void_param))
                        (8 : int)))
                    = (101 : int)))) /\
             (((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_318 __void_param))
                       (9 : int)))
                   = (32 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_318 __void_param))
                         (10 : int)))
                     = (111 : int))) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_318 __void_param))
                        (11 : int)))
                    = (102 : int))) /\
                (((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_318 __void_param))
                        (12 : int)))
                    = (32 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_318 __void_param))
                          (13 : int)))
                      = (116 : int))))) /\
            ((((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_318 __void_param))
                       (14 : int)))
                   = (104 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_318 __void_param))
                         (15 : int)))
                     = (101 : int))) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_318 __void_param))
                        (16 : int)))
                    = (32 : int))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_318 __void_param))
                         (17 : int)))
                     = (65 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_318 __void_param))
                           (18 : int)))
                       = (114 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_318 __void_param))
                          (19 : int)))
                      = (114 : int)))) /\
               (((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_318 __void_param))
                         (20 : int)))
                     = (97 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_318 __void_param))
                           (21 : int)))
                       = (121 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_318 __void_param))
                          (22 : int)))
                      = (32 : int))) /\
                  (((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_318 __void_param))
                          (23 : int)))
                      = (105 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_318 __void_param))
                            (24 : int)))
                        = (115 : int)))))))
end

module Temp___String_Literal_321
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_321 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_321__def_axiom:
    forall __void_param : unit [temp___String_Literal_321 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_321 __void_param))
               (1 : int)))
           = (65 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_321 __void_param))
                 (2 : int)))
             = (114 : int))) /\
         ((((((Standard__character__rep.to_rep
                 ((Array__Int__Standard__character.get
                     (temp___String_Literal_321 __void_param))
                    (3 : int)))
                = (114 : int)) /\
               ((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_321 __void_param))
                      (4 : int)))
                  = (97 : int))) /\
              (((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_321 __void_param))
                      (5 : int)))
                  = (121 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_321 __void_param))
                        (6 : int)))
                    = (32 : int)))) /\
             ((((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_321 __void_param))
                      (7 : int)))
                  = (83 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_321 __void_param))
                        (8 : int)))
                    = (111 : int))) /\
                (((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_321 __void_param))
                        (9 : int)))
                    = (114 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_321 __void_param))
                          (10 : int)))
                      = (116 : int))))) /\
            (((((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_321 __void_param))
                      (11 : int)))
                  = (101 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_321 __void_param))
                        (12 : int)))
                    = (114 : int))) /\
                (((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_321 __void_param))
                        (13 : int)))
                    = (32 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_321 __void_param))
                          (14 : int)))
                      = (77 : int)))) /\
               ((((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_321 __void_param))
                        (15 : int)))
                    = (101 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_321 __void_param))
                          (16 : int)))
                      = (110 : int))) /\
                  (((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_321 __void_param))
                          (17 : int)))
                      = (117 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_321 __void_param))
                            (18 : int)))
                        = (58 : int)))))))
end

module Temp___String_Literal_323
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_323 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_323__def_axiom:
    forall __void_param : unit [temp___String_Literal_323 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_323 __void_param))
               (1 : int)))
           = (49 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_323 __void_param))
                 (2 : int)))
             = (46 : int))) /\
         ((((((((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_323 __void_param))
                      (3 : int)))
                  = (32 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_323 __void_param))
                        (4 : int)))
                    = (67 : int))) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_323 __void_param))
                       (5 : int)))
                   = (114 : int))) /\
               (((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_323 __void_param))
                       (6 : int)))
                   = (101 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_323 __void_param))
                         (7 : int)))
                     = (97 : int)))) /\
              ((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_323 __void_param))
                       (8 : int)))
                   = (116 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_323 __void_param))
                         (9 : int)))
                     = (101 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_323 __void_param))
                         (10 : int)))
                     = (32 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_323 __void_param))
                           (11 : int)))
                       = (97 : int))))) /\
             ((((((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_323 __void_param))
                        (12 : int)))
                    = (32 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_323 __void_param))
                          (13 : int)))
                      = (110 : int))) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_323 __void_param))
                         (14 : int)))
                     = (101 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_323 __void_param))
                         (15 : int)))
                     = (119 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_323 __void_param))
                           (16 : int)))
                       = (32 : int)))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_323 __void_param))
                         (17 : int)))
                     = (97 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_323 __void_param))
                           (18 : int)))
                       = (114 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_323 __void_param))
                           (19 : int)))
                       = (114 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_323 __void_param))
                             (20 : int)))
                         = (97 : int)))))) /\
            (((((((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_323 __void_param))
                        (21 : int)))
                    = (121 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_323 __void_param))
                          (22 : int)))
                      = (32 : int))) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_323 __void_param))
                         (23 : int)))
                     = (111 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_323 __void_param))
                         (24 : int)))
                     = (102 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_323 __void_param))
                           (25 : int)))
                       = (32 : int)))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_323 __void_param))
                         (26 : int)))
                     = (99 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_323 __void_param))
                           (27 : int)))
                       = (104 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_323 __void_param))
                           (28 : int)))
                       = (111 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_323 __void_param))
                             (29 : int)))
                         = (111 : int))))) /\
               ((((((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_323 __void_param))
                          (30 : int)))
                      = (115 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_323 __void_param))
                            (31 : int)))
                        = (101 : int))) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_323 __void_param))
                           (32 : int)))
                       = (110 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_323 __void_param))
                           (33 : int)))
                       = (32 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_323 __void_param))
                             (34 : int)))
                         = (115 : int)))) /\
                  ((((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_323 __void_param))
                           (35 : int)))
                       = (105 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_323 __void_param))
                             (36 : int)))
                         = (122 : int))) /\
                     (((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_323 __void_param))
                             (37 : int)))
                         = (101 : int)) /\
                        ((Standard__character__rep.to_rep
                            ((Array__Int__Standard__character.get
                                (temp___String_Literal_323 __void_param))
                               (38 : int)))
                           = (58 : int))))))))
end

module Temp___String_Literal_325
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_325 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_325__def_axiom:
    forall __void_param : unit [temp___String_Literal_325 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_325 __void_param))
               (1 : int)))
           = (50 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_325 __void_param))
                 (2 : int)))
             = (46 : int))) /\
         (((((((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_325 __void_param))
                     (3 : int)))
                 = (32 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_325 __void_param))
                       (4 : int)))
                   = (83 : int))) /\
               (((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_325 __void_param))
                       (5 : int)))
                   = (111 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_325 __void_param))
                         (6 : int)))
                     = (114 : int)))) /\
              ((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_325 __void_param))
                       (7 : int)))
                   = (116 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_325 __void_param))
                         (8 : int)))
                     = (32 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_325 __void_param))
                         (9 : int)))
                     = (116 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_325 __void_param))
                           (10 : int)))
                       = (104 : int))))) /\
             (((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_325 __void_param))
                       (11 : int)))
                   = (101 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_325 __void_param))
                         (12 : int)))
                     = (32 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_325 __void_param))
                         (13 : int)))
                     = (97 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_325 __void_param))
                           (14 : int)))
                       = (114 : int)))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_325 __void_param))
                         (15 : int)))
                     = (114 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_325 __void_param))
                           (16 : int)))
                       = (97 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_325 __void_param))
                          (17 : int)))
                      = (121 : int))))) /\
            ((((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_325 __void_param))
                       (18 : int)))
                   = (32 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_325 __void_param))
                         (19 : int)))
                     = (119 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_325 __void_param))
                         (20 : int)))
                     = (105 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_325 __void_param))
                           (21 : int)))
                       = (116 : int)))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_325 __void_param))
                         (22 : int)))
                     = (104 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_325 __void_param))
                           (23 : int)))
                       = (32 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_325 __void_param))
                          (24 : int)))
                      = (97 : int)))) /\
               (((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_325 __void_param))
                         (25 : int)))
                     = (32 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_325 __void_param))
                           (26 : int)))
                       = (99 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_325 __void_param))
                           (27 : int)))
                       = (111 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_325 __void_param))
                             (28 : int)))
                         = (117 : int)))) /\
                  ((((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_325 __void_param))
                           (29 : int)))
                       = (110 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_325 __void_param))
                             (30 : int)))
                         = (116 : int))) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_325 __void_param))
                            (31 : int)))
                        = (58 : int)))))))
end

module Temp___String_Literal_327
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_327 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_327__def_axiom:
    forall __void_param : unit [temp___String_Literal_327 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_327 __void_param))
               (1 : int)))
           = (51 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_327 __void_param))
                 (2 : int)))
             = (46 : int))) /\
         ((((((((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_327 __void_param))
                      (3 : int)))
                  = (32 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_327 __void_param))
                        (4 : int)))
                    = (86 : int))) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_327 __void_param))
                       (5 : int)))
                   = (97 : int))) /\
               (((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_327 __void_param))
                       (6 : int)))
                   = (108 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_327 __void_param))
                         (7 : int)))
                     = (105 : int)))) /\
              ((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_327 __void_param))
                       (8 : int)))
                   = (100 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_327 __void_param))
                         (9 : int)))
                     = (97 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_327 __void_param))
                         (10 : int)))
                     = (116 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_327 __void_param))
                           (11 : int)))
                       = (101 : int))))) /\
             (((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_327 __void_param))
                       (12 : int)))
                   = (32 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_327 __void_param))
                         (13 : int)))
                     = (116 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_327 __void_param))
                         (14 : int)))
                     = (104 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_327 __void_param))
                           (15 : int)))
                       = (101 : int)))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_327 __void_param))
                         (16 : int)))
                     = (32 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_327 __void_param))
                           (17 : int)))
                       = (97 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_327 __void_param))
                           (18 : int)))
                       = (114 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_327 __void_param))
                             (19 : int)))
                         = (114 : int)))))) /\
            ((((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_327 __void_param))
                       (20 : int)))
                   = (97 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_327 __void_param))
                         (21 : int)))
                     = (121 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_327 __void_param))
                         (22 : int)))
                     = (32 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_327 __void_param))
                           (23 : int)))
                       = (119 : int)))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_327 __void_param))
                         (24 : int)))
                     = (105 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_327 __void_param))
                           (25 : int)))
                       = (116 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_327 __void_param))
                           (26 : int)))
                       = (104 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_327 __void_param))
                             (27 : int)))
                         = (32 : int))))) /\
               (((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_327 __void_param))
                         (28 : int)))
                     = (97 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_327 __void_param))
                           (29 : int)))
                       = (32 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_327 __void_param))
                           (30 : int)))
                       = (99 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_327 __void_param))
                             (31 : int)))
                         = (111 : int)))) /\
                  ((((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_327 __void_param))
                           (32 : int)))
                       = (117 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_327 __void_param))
                             (33 : int)))
                         = (110 : int))) /\
                     (((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_327 __void_param))
                             (34 : int)))
                         = (116 : int)) /\
                        ((Standard__character__rep.to_rep
                            ((Array__Int__Standard__character.get
                                (temp___String_Literal_327 __void_param))
                               (35 : int)))
                           = (58 : int))))))))
end

module Temp___String_Literal_329
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_329 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_329__def_axiom:
    forall __void_param : unit [temp___String_Literal_329 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_329 __void_param))
               (1 : int)))
           = (52 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_329 __void_param))
                 (2 : int)))
             = (46 : int))) /\
         (((((((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_329 __void_param))
                     (3 : int)))
                 = (32 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_329 __void_param))
                       (4 : int)))
                   = (69 : int))) /\
               ((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_329 __void_param))
                      (5 : int)))
                  = (120 : int))) /\
              (((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_329 __void_param))
                      (6 : int)))
                  = (105 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_329 __void_param))
                        (7 : int)))
                    = (116 : int)))) /\
             ((((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_329 __void_param))
                      (8 : int)))
                  = (32 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_329 __void_param))
                        (9 : int)))
                    = (116 : int))) /\
                (((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_329 __void_param))
                        (10 : int)))
                    = (104 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_329 __void_param))
                          (11 : int)))
                      = (101 : int))))) /\
            ((((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_329 __void_param))
                       (12 : int)))
                   = (32 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_329 __void_param))
                         (13 : int)))
                     = (112 : int))) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_329 __void_param))
                        (14 : int)))
                    = (114 : int))) /\
                (((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_329 __void_param))
                        (15 : int)))
                    = (111 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_329 __void_param))
                          (16 : int)))
                      = (103 : int)))) /\
               ((((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_329 __void_param))
                        (17 : int)))
                    = (114 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_329 __void_param))
                          (18 : int)))
                      = (97 : int))) /\
                  (((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_329 __void_param))
                          (19 : int)))
                      = (109 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_329 __void_param))
                            (20 : int)))
                        = (46 : int)))))))
end

module Temp___String_Literal_331
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_331 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_331__def_axiom:
    forall __void_param : unit [temp___String_Literal_331 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_331 __void_param))
               (1 : int)))
           = (69 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_331 __void_param))
                 (2 : int)))
             = (110 : int))) /\
         (((((((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_331 __void_param))
                     (3 : int)))
                 = (116 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_331 __void_param))
                       (4 : int)))
                   = (101 : int))) /\
               ((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_331 __void_param))
                      (5 : int)))
                  = (114 : int))) /\
              (((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_331 __void_param))
                      (6 : int)))
                  = (32 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_331 __void_param))
                        (7 : int)))
                    = (121 : int)))) /\
             ((((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_331 __void_param))
                      (8 : int)))
                  = (111 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_331 __void_param))
                        (9 : int)))
                    = (117 : int))) /\
                (((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_331 __void_param))
                        (10 : int)))
                    = (114 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_331 __void_param))
                          (11 : int)))
                      = (32 : int))))) /\
            (((((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_331 __void_param))
                      (12 : int)))
                  = (99 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_331 __void_param))
                        (13 : int)))
                    = (104 : int))) /\
                (((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_331 __void_param))
                        (14 : int)))
                    = (111 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_331 __void_param))
                          (15 : int)))
                      = (105 : int)))) /\
               ((((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_331 __void_param))
                        (16 : int)))
                    = (99 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_331 __void_param))
                          (17 : int)))
                      = (101 : int))) /\
                  (((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_331 __void_param))
                          (18 : int)))
                      = (58 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_331 __void_param))
                            (19 : int)))
                        = (32 : int)))))))
end

module Temp___String_Literal_334
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_334 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_334__def_axiom:
    forall __void_param : unit [temp___String_Literal_334 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_334 __void_param))
               (1 : int)))
           = (69 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_334 __void_param))
                 (2 : int)))
             = (110 : int))) /\
         (((((((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_334 __void_param))
                     (3 : int)))
                 = (116 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_334 __void_param))
                       (4 : int)))
                   = (101 : int))) /\
               (((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_334 __void_param))
                       (5 : int)))
                   = (114 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_334 __void_param))
                         (6 : int)))
                     = (32 : int)))) /\
              ((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_334 __void_param))
                       (7 : int)))
                   = (116 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_334 __void_param))
                         (8 : int)))
                     = (104 : int))) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_334 __void_param))
                        (9 : int)))
                    = (101 : int)))) /\
             (((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_334 __void_param))
                       (10 : int)))
                   = (32 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_334 __void_param))
                         (11 : int)))
                     = (115 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_334 __void_param))
                         (12 : int)))
                     = (105 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_334 __void_param))
                           (13 : int)))
                       = (122 : int)))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_334 __void_param))
                         (14 : int)))
                     = (101 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_334 __void_param))
                           (15 : int)))
                       = (32 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_334 __void_param))
                          (16 : int)))
                      = (111 : int))))) /\
            ((((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_334 __void_param))
                       (17 : int)))
                   = (102 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_334 __void_param))
                         (18 : int)))
                     = (32 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_334 __void_param))
                         (19 : int)))
                     = (116 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_334 __void_param))
                           (20 : int)))
                       = (104 : int)))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_334 __void_param))
                         (21 : int)))
                     = (101 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_334 __void_param))
                           (22 : int)))
                       = (32 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_334 __void_param))
                          (23 : int)))
                      = (97 : int)))) /\
               (((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_334 __void_param))
                         (24 : int)))
                     = (114 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_334 __void_param))
                           (25 : int)))
                       = (114 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_334 __void_param))
                          (26 : int)))
                      = (97 : int))) /\
                  ((((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_334 __void_param))
                           (27 : int)))
                       = (121 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_334 __void_param))
                             (28 : int)))
                         = (58 : int))) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_334 __void_param))
                            (29 : int)))
                        = (32 : int)))))))
end

module Temp___String_Literal_338
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_338 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_338__def_axiom:
    forall __void_param : unit [temp___String_Literal_338 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_338 __void_param))
               (1 : int)))
           = (46 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_338 __void_param))
                 (2 : int)))
             = (92 : int))) /\
         (((((((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_338 __void_param))
                     (3 : int)))
                 = (115 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_338 __void_param))
                       (4 : int)))
                   = (114 : int))) /\
               ((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_338 __void_param))
                      (5 : int)))
                  = (99 : int))) /\
              (((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_338 __void_param))
                      (6 : int)))
                  = (92 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_338 __void_param))
                        (7 : int)))
                    = (114 : int)))) /\
             ((((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_338 __void_param))
                      (8 : int)))
                  = (97 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_338 __void_param))
                        (9 : int)))
                    = (110 : int))) /\
                (((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_338 __void_param))
                        (10 : int)))
                    = (100 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_338 __void_param))
                          (11 : int)))
                      = (111 : int))))) /\
            (((((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_338 __void_param))
                      (12 : int)))
                  = (109 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_338 __void_param))
                        (13 : int)))
                    = (49 : int))) /\
                (((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_338 __void_param))
                        (14 : int)))
                    = (48 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_338 __void_param))
                          (15 : int)))
                      = (107 : int)))) /\
               ((((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_338 __void_param))
                        (16 : int)))
                    = (46 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_338 __void_param))
                          (17 : int)))
                      = (116 : int))) /\
                  (((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_338 __void_param))
                          (18 : int)))
                      = (120 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_338 __void_param))
                            (19 : int)))
                        = (116 : int)))))))
end

module Temp___String_Literal_340
  use _gnatprove_standard.Main
  use int.Int
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_340 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_340__def_axiom:
    forall __void_param : unit [temp___String_Literal_340 __void_param]. true
end

module Temp___String_Literal_348
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_348 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_348__def_axiom:
    forall __void_param : unit [temp___String_Literal_348 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_348 __void_param))
               (1 : int)))
           = (84 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_348 __void_param))
                 (2 : int)))
             = (104 : int))) /\
         (((((((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_348 __void_param))
                     (3 : int)))
                 = (101 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_348 __void_param))
                       (4 : int)))
                   = (32 : int))) /\
               ((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_348 __void_param))
                      (5 : int)))
                  = (115 : int))) /\
              ((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_348 __void_param))
                       (6 : int)))
                   = (105 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_348 __void_param))
                         (7 : int)))
                     = (122 : int))) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_348 __void_param))
                        (8 : int)))
                    = (101 : int)))) /\
             (((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_348 __void_param))
                       (9 : int)))
                   = (32 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_348 __void_param))
                         (10 : int)))
                     = (111 : int))) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_348 __void_param))
                        (11 : int)))
                    = (102 : int))) /\
                (((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_348 __void_param))
                        (12 : int)))
                    = (32 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_348 __void_param))
                          (13 : int)))
                      = (116 : int))))) /\
            ((((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_348 __void_param))
                       (14 : int)))
                   = (104 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_348 __void_param))
                         (15 : int)))
                     = (101 : int))) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_348 __void_param))
                        (16 : int)))
                    = (32 : int))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_348 __void_param))
                         (17 : int)))
                     = (65 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_348 __void_param))
                           (18 : int)))
                       = (114 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_348 __void_param))
                          (19 : int)))
                      = (114 : int)))) /\
               (((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_348 __void_param))
                         (20 : int)))
                     = (97 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_348 __void_param))
                           (21 : int)))
                       = (121 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_348 __void_param))
                          (22 : int)))
                      = (32 : int))) /\
                  (((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_348 __void_param))
                          (23 : int)))
                      = (105 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_348 __void_param))
                            (24 : int)))
                        = (115 : int)))))))
end

module Temp___String_Literal_351
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_351 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_351__def_axiom:
    forall __void_param : unit [temp___String_Literal_351 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_351 __void_param))
               (1 : int)))
           = (69 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_351 __void_param))
                 (2 : int)))
             = (110 : int))) /\
         ((((((((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_351 __void_param))
                      (3 : int)))
                  = (116 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_351 __void_param))
                        (4 : int)))
                    = (101 : int))) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_351 __void_param))
                       (5 : int)))
                   = (114 : int))) /\
               (((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_351 __void_param))
                       (6 : int)))
                   = (32 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_351 __void_param))
                         (7 : int)))
                     = (116 : int)))) /\
              ((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_351 __void_param))
                       (8 : int)))
                   = (104 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_351 __void_param))
                         (9 : int)))
                     = (101 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_351 __void_param))
                         (10 : int)))
                     = (32 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_351 __void_param))
                           (11 : int)))
                       = (110 : int))))) /\
             (((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_351 __void_param))
                       (12 : int)))
                   = (117 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_351 __void_param))
                         (13 : int)))
                     = (109 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_351 __void_param))
                         (14 : int)))
                     = (98 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_351 __void_param))
                           (15 : int)))
                       = (101 : int)))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_351 __void_param))
                         (16 : int)))
                     = (114 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_351 __void_param))
                           (17 : int)))
                       = (32 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_351 __void_param))
                           (18 : int)))
                       = (111 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_351 __void_param))
                             (19 : int)))
                         = (102 : int)))))) /\
            ((((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_351 __void_param))
                       (20 : int)))
                   = (32 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_351 __void_param))
                         (21 : int)))
                     = (118 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_351 __void_param))
                         (22 : int)))
                     = (97 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_351 __void_param))
                           (23 : int)))
                       = (108 : int)))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_351 __void_param))
                         (24 : int)))
                     = (105 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_351 __void_param))
                           (25 : int)))
                       = (100 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_351 __void_param))
                           (26 : int)))
                       = (32 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_351 __void_param))
                             (27 : int)))
                         = (101 : int))))) /\
               (((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_351 __void_param))
                         (28 : int)))
                     = (110 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_351 __void_param))
                           (29 : int)))
                       = (116 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_351 __void_param))
                           (30 : int)))
                       = (114 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_351 __void_param))
                             (31 : int)))
                         = (105 : int)))) /\
                  ((((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_351 __void_param))
                           (32 : int)))
                       = (101 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_351 __void_param))
                             (33 : int)))
                         = (115 : int))) /\
                     (((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_351 __void_param))
                             (34 : int)))
                         = (58 : int)) /\
                        ((Standard__character__rep.to_rep
                            ((Array__Int__Standard__character.get
                                (temp___String_Literal_351 __void_param))
                               (35 : int)))
                           = (32 : int))))))))
end

module Temp___String_Literal_354
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_354 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_354__def_axiom:
    forall __void_param : unit [temp___String_Literal_354 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_354 __void_param))
               (1 : int)))
           = (32 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_354 __void_param))
                 (2 : int)))
             = (97 : int))) /\
         ((((((Standard__character__rep.to_rep
                 ((Array__Int__Standard__character.get
                     (temp___String_Literal_354 __void_param))
                    (3 : int)))
                = (114 : int)) /\
               ((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_354 __void_param))
                      (4 : int)))
                  = (101 : int))) /\
              ((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_354 __void_param))
                     (5 : int)))
                 = (32 : int))) /\
             (((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_354 __void_param))
                     (6 : int)))
                 = (115 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_354 __void_param))
                       (7 : int)))
                   = (111 : int)))) /\
            (((((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_354 __void_param))
                      (8 : int)))
                  = (114 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_354 __void_param))
                        (9 : int)))
                    = (116 : int))) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_354 __void_param))
                       (10 : int)))
                   = (101 : int))) /\
               (((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_354 __void_param))
                       (11 : int)))
                   = (100 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_354 __void_param))
                         (12 : int)))
                     = (46 : int))))))
end

module Temp___String_Literal_355
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_355 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_355__def_axiom:
    forall __void_param : unit [temp___String_Literal_355 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_355 __void_param))
               (1 : int)))
           = (32 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_355 __void_param))
                 (2 : int)))
             = (111 : int))) /\
         (((((Standard__character__rep.to_rep
                ((Array__Int__Standard__character.get
                    (temp___String_Literal_355 __void_param))
                   (3 : int)))
               = (102 : int)) /\
              ((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_355 __void_param))
                     (4 : int)))
                 = (32 : int))) /\
             (((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_355 __void_param))
                     (5 : int)))
                 = (119 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_355 __void_param))
                       (6 : int)))
                   = (104 : int)))) /\
            ((((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_355 __void_param))
                     (7 : int)))
                 = (105 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_355 __void_param))
                       (8 : int)))
                   = (99 : int))) /\
               ((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_355 __void_param))
                      (9 : int)))
                  = (104 : int)))))
end

module Temp___String_Literal_356
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_356 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_356__def_axiom:
    forall __void_param : unit [temp___String_Literal_356 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_356 __void_param))
               (1 : int)))
           = (84 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_356 __void_param))
                 (2 : int)))
             = (104 : int))) /\
         (((((((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_356 __void_param))
                     (3 : int)))
                 = (101 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_356 __void_param))
                       (4 : int)))
                   = (32 : int))) /\
               ((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_356 __void_param))
                      (5 : int)))
                  = (115 : int))) /\
              ((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_356 __void_param))
                       (6 : int)))
                   = (105 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_356 __void_param))
                         (7 : int)))
                     = (122 : int))) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_356 __void_param))
                        (8 : int)))
                    = (101 : int)))) /\
             (((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_356 __void_param))
                       (9 : int)))
                   = (32 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_356 __void_param))
                         (10 : int)))
                     = (111 : int))) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_356 __void_param))
                        (11 : int)))
                    = (102 : int))) /\
                (((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_356 __void_param))
                        (12 : int)))
                    = (32 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_356 __void_param))
                          (13 : int)))
                      = (116 : int))))) /\
            ((((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_356 __void_param))
                       (14 : int)))
                   = (104 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_356 __void_param))
                         (15 : int)))
                     = (101 : int))) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_356 __void_param))
                        (16 : int)))
                    = (32 : int))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_356 __void_param))
                         (17 : int)))
                     = (65 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_356 __void_param))
                           (18 : int)))
                       = (114 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_356 __void_param))
                          (19 : int)))
                      = (114 : int)))) /\
               (((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_356 __void_param))
                         (20 : int)))
                     = (97 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_356 __void_param))
                           (21 : int)))
                       = (121 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_356 __void_param))
                          (22 : int)))
                      = (32 : int))) /\
                  (((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_356 __void_param))
                          (23 : int)))
                      = (105 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_356 __void_param))
                            (24 : int)))
                        = (115 : int)))))))
end

module Temp___String_Literal_369
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_369 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_369__def_axiom:
    forall __void_param : unit [temp___String_Literal_369 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_369 __void_param))
               (1 : int)))
           = (69 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_369 __void_param))
                 (2 : int)))
             = (110 : int))) /\
         ((((((((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_369 __void_param))
                      (3 : int)))
                  = (116 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_369 __void_param))
                        (4 : int)))
                    = (101 : int))) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_369 __void_param))
                       (5 : int)))
                   = (114 : int))) /\
               (((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_369 __void_param))
                       (6 : int)))
                   = (32 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_369 __void_param))
                         (7 : int)))
                     = (116 : int)))) /\
              ((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_369 __void_param))
                       (8 : int)))
                   = (104 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_369 __void_param))
                         (9 : int)))
                     = (101 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_369 __void_param))
                         (10 : int)))
                     = (32 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_369 __void_param))
                           (11 : int)))
                       = (110 : int))))) /\
             (((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_369 __void_param))
                       (12 : int)))
                   = (117 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_369 __void_param))
                         (13 : int)))
                     = (109 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_369 __void_param))
                         (14 : int)))
                     = (98 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_369 __void_param))
                           (15 : int)))
                       = (101 : int)))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_369 __void_param))
                         (16 : int)))
                     = (114 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_369 __void_param))
                           (17 : int)))
                       = (32 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_369 __void_param))
                           (18 : int)))
                       = (111 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_369 __void_param))
                             (19 : int)))
                         = (102 : int)))))) /\
            ((((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_369 __void_param))
                       (20 : int)))
                   = (32 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_369 __void_param))
                         (21 : int)))
                     = (118 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_369 __void_param))
                         (22 : int)))
                     = (97 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_369 __void_param))
                           (23 : int)))
                       = (108 : int)))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_369 __void_param))
                         (24 : int)))
                     = (105 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_369 __void_param))
                           (25 : int)))
                       = (100 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_369 __void_param))
                           (26 : int)))
                       = (32 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_369 __void_param))
                             (27 : int)))
                         = (101 : int))))) /\
               (((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_369 __void_param))
                         (28 : int)))
                     = (110 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_369 __void_param))
                           (29 : int)))
                       = (116 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_369 __void_param))
                           (30 : int)))
                       = (114 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_369 __void_param))
                             (31 : int)))
                         = (105 : int)))) /\
                  ((((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_369 __void_param))
                           (32 : int)))
                       = (101 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_369 __void_param))
                             (33 : int)))
                         = (115 : int))) /\
                     (((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_369 __void_param))
                             (34 : int)))
                         = (58 : int)) /\
                        ((Standard__character__rep.to_rep
                            ((Array__Int__Standard__character.get
                                (temp___String_Literal_369 __void_param))
                               (35 : int)))
                           = (32 : int))))))))
end

module Temp___String_Literal_372
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_372 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_372__def_axiom:
    forall __void_param : unit [temp___String_Literal_372 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_372 __void_param))
               (1 : int)))
           = (32 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_372 __void_param))
                 (2 : int)))
             = (97 : int))) /\
         ((((((Standard__character__rep.to_rep
                 ((Array__Int__Standard__character.get
                     (temp___String_Literal_372 __void_param))
                    (3 : int)))
                = (114 : int)) /\
               ((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_372 __void_param))
                      (4 : int)))
                  = (101 : int))) /\
              ((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_372 __void_param))
                     (5 : int)))
                 = (32 : int))) /\
             (((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_372 __void_param))
                     (6 : int)))
                 = (118 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_372 __void_param))
                       (7 : int)))
                   = (97 : int)))) /\
            ((((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_372 __void_param))
                     (8 : int)))
                 = (108 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_372 __void_param))
                       (9 : int)))
                   = (105 : int))) /\
               (((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_372 __void_param))
                       (10 : int)))
                   = (100 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_372 __void_param))
                         (11 : int)))
                     = (46 : int))))))
end

module Temp___String_Literal_373
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_373 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_373__def_axiom:
    forall __void_param : unit [temp___String_Literal_373 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_373 __void_param))
               (1 : int)))
           = (32 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_373 __void_param))
                 (2 : int)))
             = (111 : int))) /\
         (((((Standard__character__rep.to_rep
                ((Array__Int__Standard__character.get
                    (temp___String_Literal_373 __void_param))
                   (3 : int)))
               = (102 : int)) /\
              ((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_373 __void_param))
                     (4 : int)))
                 = (32 : int))) /\
             (((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_373 __void_param))
                     (5 : int)))
                 = (119 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_373 __void_param))
                       (6 : int)))
                   = (104 : int)))) /\
            ((((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_373 __void_param))
                     (7 : int)))
                 = (105 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_373 __void_param))
                       (8 : int)))
                   = (99 : int))) /\
               ((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_373 __void_param))
                      (9 : int)))
                  = (104 : int)))))
end

module Temp___String_Literal_374
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_374 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_374__def_axiom:
    forall __void_param : unit [temp___String_Literal_374 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_374 __void_param))
               (1 : int)))
           = (84 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_374 __void_param))
                 (2 : int)))
             = (104 : int))) /\
         (((((((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_374 __void_param))
                     (3 : int)))
                 = (101 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_374 __void_param))
                       (4 : int)))
                   = (32 : int))) /\
               ((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_374 __void_param))
                      (5 : int)))
                  = (115 : int))) /\
              ((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_374 __void_param))
                       (6 : int)))
                   = (105 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_374 __void_param))
                         (7 : int)))
                     = (122 : int))) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_374 __void_param))
                        (8 : int)))
                    = (101 : int)))) /\
             (((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_374 __void_param))
                       (9 : int)))
                   = (32 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_374 __void_param))
                         (10 : int)))
                     = (111 : int))) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_374 __void_param))
                        (11 : int)))
                    = (102 : int))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_374 __void_param))
                         (12 : int)))
                     = (32 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_374 __void_param))
                           (13 : int)))
                       = (116 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_374 __void_param))
                          (14 : int)))
                      = (104 : int))))) /\
            ((((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_374 __void_param))
                       (15 : int)))
                   = (101 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_374 __void_param))
                         (16 : int)))
                     = (32 : int))) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_374 __void_param))
                        (17 : int)))
                    = (65 : int))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_374 __void_param))
                         (18 : int)))
                     = (114 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_374 __void_param))
                           (19 : int)))
                       = (114 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_374 __void_param))
                          (20 : int)))
                      = (97 : int)))) /\
               (((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_374 __void_param))
                         (21 : int)))
                     = (121 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_374 __void_param))
                           (22 : int)))
                       = (32 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_374 __void_param))
                          (23 : int)))
                      = (105 : int))) /\
                  (((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_374 __void_param))
                          (24 : int)))
                      = (115 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_374 __void_param))
                            (25 : int)))
                        = (32 : int)))))))
end

module Temp___String_Literal_383
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_383 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_383__def_axiom:
    forall __void_param : unit [temp___String_Literal_383 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_383 __void_param))
               (1 : int)))
           = (73 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_383 __void_param))
                 (2 : int)))
             = (110 : int))) /\
         ((((((((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_383 __void_param))
                      (3 : int)))
                  = (118 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_383 __void_param))
                        (4 : int)))
                    = (97 : int))) /\
                (((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_383 __void_param))
                        (5 : int)))
                    = (108 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_383 __void_param))
                          (6 : int)))
                      = (105 : int)))) /\
               ((((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_383 __void_param))
                        (7 : int)))
                    = (100 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_383 __void_param))
                          (8 : int)))
                      = (32 : int))) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_383 __void_param))
                         (9 : int)))
                     = (99 : int)))) /\
              (((((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_383 __void_param))
                        (10 : int)))
                    = (104 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_383 __void_param))
                          (11 : int)))
                      = (111 : int))) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_383 __void_param))
                         (12 : int)))
                     = (105 : int))) /\
                 ((((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_383 __void_param))
                          (13 : int)))
                      = (99 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_383 __void_param))
                            (14 : int)))
                        = (101 : int))) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_383 __void_param))
                           (15 : int)))
                       = (46 : int))))) /\
             ((((((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_383 __void_param))
                        (16 : int)))
                    = (32 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_383 __void_param))
                          (17 : int)))
                      = (80 : int))) /\
                  (((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_383 __void_param))
                          (18 : int)))
                      = (108 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_383 __void_param))
                            (19 : int)))
                        = (101 : int)))) /\
                 ((((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_383 __void_param))
                          (20 : int)))
                      = (97 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_383 __void_param))
                            (21 : int)))
                        = (115 : int))) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_383 __void_param))
                           (22 : int)))
                       = (101 : int)))) /\
                (((((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_383 __void_param))
                          (23 : int)))
                      = (32 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_383 __void_param))
                            (24 : int)))
                        = (101 : int))) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_383 __void_param))
                           (25 : int)))
                       = (110 : int))) /\
                   ((((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_383 __void_param))
                            (26 : int)))
                        = (116 : int)) /\
                       ((Standard__character__rep.to_rep
                           ((Array__Int__Standard__character.get
                               (temp___String_Literal_383 __void_param))
                              (27 : int)))
                          = (101 : int))) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_383 __void_param))
                             (28 : int)))
                         = (114 : int)))))) /\
            (((((((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_383 __void_param))
                        (29 : int)))
                    = (32 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_383 __void_param))
                          (30 : int)))
                      = (97 : int))) /\
                  (((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_383 __void_param))
                          (31 : int)))
                      = (32 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_383 __void_param))
                            (32 : int)))
                        = (118 : int)))) /\
                 ((((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_383 __void_param))
                          (33 : int)))
                      = (97 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_383 __void_param))
                            (34 : int)))
                        = (108 : int))) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_383 __void_param))
                           (35 : int)))
                       = (117 : int)))) /\
                (((((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_383 __void_param))
                          (36 : int)))
                      = (101 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_383 __void_param))
                            (37 : int)))
                        = (32 : int))) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_383 __void_param))
                           (38 : int)))
                       = (98 : int))) /\
                   ((((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_383 __void_param))
                            (39 : int)))
                        = (101 : int)) /\
                       ((Standard__character__rep.to_rep
                           ((Array__Int__Standard__character.get
                               (temp___String_Literal_383 __void_param))
                              (40 : int)))
                          = (116 : int))) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_383 __void_param))
                             (41 : int)))
                         = (119 : int))))) /\
               ((((((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_383 __void_param))
                          (42 : int)))
                      = (101 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_383 __void_param))
                            (43 : int)))
                        = (101 : int))) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_383 __void_param))
                           (44 : int)))
                       = (110 : int))) /\
                   ((((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_383 __void_param))
                            (45 : int)))
                        = (32 : int)) /\
                       ((Standard__character__rep.to_rep
                           ((Array__Int__Standard__character.get
                               (temp___String_Literal_383 __void_param))
                              (46 : int)))
                          = (49 : int))) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_383 __void_param))
                             (47 : int)))
                         = (32 : int)))) /\
                  (((((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_383 __void_param))
                            (48 : int)))
                        = (97 : int)) /\
                       ((Standard__character__rep.to_rep
                           ((Array__Int__Standard__character.get
                               (temp___String_Literal_383 __void_param))
                              (49 : int)))
                          = (110 : int))) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_383 __void_param))
                             (50 : int)))
                         = (100 : int))) /\
                     ((((Standard__character__rep.to_rep
                           ((Array__Int__Standard__character.get
                               (temp___String_Literal_383 __void_param))
                              (51 : int)))
                          = (32 : int)) /\
                         ((Standard__character__rep.to_rep
                             ((Array__Int__Standard__character.get
                                 (temp___String_Literal_383 __void_param))
                                (52 : int)))
                            = (52 : int))) /\
                        ((Standard__character__rep.to_rep
                            ((Array__Int__Standard__character.get
                                (temp___String_Literal_383 __void_param))
                               (53 : int)))
                           = (46 : int))))))))
end

module Standard__positive___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__positive as Standard__positive
  
  predicate dynamic_invariant (temp___expr_53: int) (temp___is_init_49: bool) (temp___skip_constant_50: bool) (temp___do_toplevel_51: bool) (temp___do_typ_inv_52: bool) =
    if ((temp___is_init_49 = True) \/
          (Standard__positive.first <= Standard__positive.last)) then
      (((Standard__positive.dynamic_property Standard__positive.first)
          Standard__positive.last)
         temp___expr_53)
    else true
  
  val dynamic_invariant (temp___expr_53: int) (temp___is_init_49: bool) (temp___skip_constant_50: bool) (temp___do_toplevel_51: bool) (temp___do_typ_inv_52: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant (temp___expr_53 : int))
                      (temp___is_init_49 : bool))
                     (temp___skip_constant_50 : bool))
                    (temp___do_toplevel_51 : bool))
                   (temp___do_typ_inv_52 : bool)) }
  
  predicate default_initial_assumption (temp___expr_54: int) (temp___skip_top_level_55: bool) =
    true
  
  val default_initial_assumption (temp___expr_54: int) (temp___skip_top_level_55: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption (temp___expr_54 : int))
                   (temp___skip_top_level_55 : bool)) }
end

module Standard__character___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  
  predicate dynamic_invariant (temp___expr_81: int) (temp___is_init_77: bool) (temp___skip_constant_78: bool) (temp___do_toplevel_79: bool) (temp___do_typ_inv_80: bool) =
    if ((temp___is_init_77 = True) \/
          (Standard__character.first <= Standard__character.last)) then
      (((Standard__character.dynamic_property Standard__character.first)
          Standard__character.last)
         temp___expr_81)
    else true
  
  val dynamic_invariant (temp___expr_81: int) (temp___is_init_77: bool) (temp___skip_constant_78: bool) (temp___do_toplevel_79: bool) (temp___do_typ_inv_80: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant (temp___expr_81 : int))
                      (temp___is_init_77 : bool))
                     (temp___skip_constant_78 : bool))
                    (temp___do_toplevel_79 : bool))
                   (temp___do_typ_inv_80 : bool)) }
  
  predicate default_initial_assumption (temp___expr_82: int) (temp___skip_top_level_83: bool) =
    true
  
  val default_initial_assumption (temp___expr_82: int) (temp___skip_top_level_83: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption (temp___expr_82 : int))
                   (temp___skip_top_level_83 : bool)) }
end

module Standard__string___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Standard__positive as Standard__positive
  use Standard__string as Standard__string
  
  predicate dynamic_invariant (temp___expr_103: Standard__string.string__) (temp___is_init_99: bool) (temp___skip_constant_100: bool) (temp___do_toplevel_101: bool) (temp___do_typ_inv_102: bool) =
    if temp___skip_constant_100 then true
    else
      ((((Standard__string.dynamic_property Standard__positive.first)
           Standard__positive.last)
          (Standard__string.first temp___expr_103))
         (Standard__string.last temp___expr_103))
  
  val dynamic_invariant (temp___expr_103: Standard__string.string__) (temp___is_init_99: bool) (temp___skip_constant_100: bool) (temp___do_toplevel_101: bool) (temp___do_typ_inv_102: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant
                       (temp___expr_103 : Standard__string.string__))
                      (temp___is_init_99 : bool))
                     (temp___skip_constant_100 : bool))
                    (temp___do_toplevel_101 : bool))
                   (temp___do_typ_inv_102 : bool)) }
end

module Drvr__rand_file___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Drvr__max___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Drvr__current_array_size___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Drvr__a___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Drvr__a__aggregate_def___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Standard__integer as Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Drvr__a__aggregate_def as Drvr__a__aggregate_def
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  
  axiom def_axiom:
    forall temp___302 : int.
      let temp___301 =
        Drvr__a__aggregate_def.drvr__a__aggregate_def temp___302 in
      forall temp___303 : int.
        (((Array__Int__Standard__integer.get temp___301) temp___303)
           = (0 : Standard__integer.integer))
end

module Drvr__choice___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Drvr__L_5___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Ada___ada__text_io__file_mode
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type file_mode
  
  function pos_to_rep (x: int) : int =
    if (x = (1 : int)) then (2 : int)
    else (if (x = (2 : int)) then (3 : int)
          else (0 : int))
  
  val pos_to_rep (x: int) : int
    ensures { result = (pos_to_rep (x : int)) }
  
  function rep_to_pos (x: int) : int =
    if (x = (2 : int)) then (1 : int)
    else (if (x = (3 : int)) then (2 : int)
          else (0 : int))
  
  val rep_to_pos (x: int) : int
    ensures { result = (rep_to_pos (x : int)) }
  
  val rep_to_pos_ (x: int) : int
    requires { (((x = (0 : int)) \/ (x = (2 : int))) \/ (x = (3 : int))) }
    ensures { (result = (rep_to_pos x)) }
  
  val function first : int
    ensures { result = (0 : int) }
  
  val function last : int
    ensures { result = (2 : int) }
  
  predicate in_range (x: int) = ((first <= x) /\ (x <= last))
  
  val in_range (x: int) : bool
    ensures { result <-> (in_range (x : int)) }
  
  clone export ada__model.Static_Discrete with
    axiom .,
    type t = file_mode,
    function first = first,
    function last = last,
    predicate in_range = in_range
  
  type file_mode__ref = { mutable file_mode__content : file_mode }
  
  function file_mode__ref_file_mode__content__projection (a: file_mode__ref) : file_mode =
    a.file_mode__content
  
  meta "model_projection" function file_mode__ref_file_mode__content__projection
  
  meta "inline:no" function file_mode__ref_file_mode__content__projection
  
  val file_mode__havoc (x: file_mode__ref) : unit
    writes { x }
end

module Ada___ada__text_io__file_mode___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Ada___ada__text_io__file_mode as Ada___ada__text_io__file_mode
  
  predicate dynamic_invariant (temp___expr_278: int) (temp___is_init_274: bool) (temp___skip_constant_275: bool) (temp___do_toplevel_276: bool) (temp___do_typ_inv_277: bool) =
    if ((temp___is_init_274 = True) \/
          (Ada___ada__text_io__file_mode.first
             <= Ada___ada__text_io__file_mode.last)) then
      (((Ada___ada__text_io__file_mode.dynamic_property
           Ada___ada__text_io__file_mode.first)
          Ada___ada__text_io__file_mode.last)
         temp___expr_278)
    else true
  
  val dynamic_invariant (temp___expr_278: int) (temp___is_init_274: bool) (temp___skip_constant_275: bool) (temp___do_toplevel_276: bool) (temp___do_typ_inv_277: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant (temp___expr_278 : int))
                      (temp___is_init_274 : bool))
                     (temp___skip_constant_275 : bool))
                    (temp___do_toplevel_276 : bool))
                   (temp___do_typ_inv_277 : bool)) }
  
  predicate default_initial_assumption (temp___expr_279: int) (temp___skip_top_level_280: bool) =
    true
  
  val default_initial_assumption (temp___expr_279: int) (temp___skip_top_level_280: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption (temp___expr_279 : int))
                   (temp___skip_top_level_280 : bool)) }
end

module Ada___ada__text_io__count
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type count = <range 0 2147483647>
  
  val function first : int
    ensures { result = (0 : int) }
  
  val function last : int
    ensures { result = (2147483647 : int) }
  
  predicate in_range (x: int) = ((first <= x) /\ (x <= last))
  
  val in_range (x: int) : bool
    ensures { result <-> (in_range (x : int)) }
  
  clone export ada__model.Static_Discrete with
    axiom .,
    type t = count,
    function first = first,
    function last = last,
    predicate in_range = in_range
  
  type count__ref = { mutable count__content : count }
  
  function count__ref_count__content__projection (a: count__ref) : count =
    a.count__content
  
  meta "model_projection" function count__ref_count__content__projection
  
  meta "inline:no" function count__ref_count__content__projection
  
  val count__havoc (x: count__ref) : unit
    writes { x }
end

module Ada___ada__text_io__count___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Ada___ada__text_io__count as Ada___ada__text_io__count
  
  predicate dynamic_invariant (temp___expr_174: int) (temp___is_init_170: bool) (temp___skip_constant_171: bool) (temp___do_toplevel_172: bool) (temp___do_typ_inv_173: bool) =
    if ((temp___is_init_170 = True) \/
          (Ada___ada__text_io__count.first <= Ada___ada__text_io__count.last)) then
      (((Ada___ada__text_io__count.dynamic_property
           Ada___ada__text_io__count.first)
          Ada___ada__text_io__count.last)
         temp___expr_174)
    else true
  
  val dynamic_invariant (temp___expr_174: int) (temp___is_init_170: bool) (temp___skip_constant_171: bool) (temp___do_toplevel_172: bool) (temp___do_typ_inv_173: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant (temp___expr_174 : int))
                      (temp___is_init_170 : bool))
                     (temp___skip_constant_171 : bool))
                    (temp___do_toplevel_172 : bool))
                   (temp___do_typ_inv_173 : bool)) }
  
  predicate default_initial_assumption (temp___expr_175: int) (temp___skip_top_level_176: bool) =
    true
  
  val default_initial_assumption (temp___expr_175: int) (temp___skip_top_level_176: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption (temp___expr_175 : int))
                   (temp___skip_top_level_176 : bool)) }
end

module Ada___ada__text_io__mode___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Ada___ada__text_io__file_type as Ada___ada__text_io__file_type
  use Ada___ada__text_io__is_open as Ada___ada__text_io__is_open
  use Ada___ada__text_io__mode as Ada___ada__text_io__mode
  use Ada___ada__text_io__file_type___axiom as Ada___ada__text_io__file_type___axiom
  use Ada___ada__text_io__file_mode___axiom as Ada___ada__text_io__file_mode___axiom
  
  val mode (file: Ada___ada__text_io__file_type.file_type) : int
    requires { [@GP_Pretty_Ada:10039]
               ((Ada___ada__text_io__is_open.is_open file) = True)
    }
    ensures { (((result = (Ada___ada__text_io__mode.mode file)) /\ true) /\
                 (((((Ada___ada__text_io__file_mode___axiom.dynamic_invariant
                        result)
                       True)
                      False)
                     True)
                    True)) }
  
  axiom mode__post_axiom:
    forall file : Ada___ada__text_io__file_type.file_type
          [Ada___ada__text_io__mode.mode file].
      (((((((Ada___ada__text_io__file_type___axiom.dynamic_invariant file)
              True)
             True)
            True)
           True) /\
          ([@GP_Pretty_Ada:10039]
           ((Ada___ada__text_io__is_open.is_open file) = True))) ->
         (let result = Ada___ada__text_io__mode.mode file in
          ((true /\
              (((((Ada___ada__text_io__file_mode___axiom.dynamic_invariant
                     result)
                    True)
                   False)
                  True)
                 True)) /\
             true)))
end

module Ada___ada__text_io__is_open___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Ada___ada__text_io__file_type as Ada___ada__text_io__file_type
  use Ada___ada__text_io__is_open as Ada___ada__text_io__is_open
  use Ada___ada__text_io__file_type___axiom as Ada___ada__text_io__file_type___axiom
  
  val is_open (file: Ada___ada__text_io__file_type.file_type) : bool
    requires { true }
    ensures { (((result = (Ada___ada__text_io__is_open.is_open file)) /\
                  true) /\
                 true) }
  
  axiom is_open__post_axiom:
    forall file : Ada___ada__text_io__file_type.file_type
          [Ada___ada__text_io__is_open.is_open file].
      ((((((Ada___ada__text_io__file_type___axiom.dynamic_invariant file)
             True)
            True)
           True)
          True) ->
         (let result = Ada___ada__text_io__is_open.is_open file in
          ((true /\ true) /\ true)))
end

module Ada___ada__text_io__line_length___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use _gnatprove_standard.Main as Main
  use Ada___ada__text_io__file_type as Ada___ada__text_io__file_type
  use Ada___ada__text_io__is_open as Ada___ada__text_io__is_open
  use Ada___ada__text_io__mode as Ada___ada__text_io__mode
  use Ada___ada__text_io__line_length as Ada___ada__text_io__line_length
  use Ada___ada__text_io__count___axiom as Ada___ada__text_io__count___axiom
  use Ada___ada__text_io__file_type___axiom as Ada___ada__text_io__file_type___axiom
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  
  val line_length (file: Ada___ada__text_io__file_type.file_type) : int
    reads { Ada___ada__text_io__file_system.file_system,
      Ada___ada__text_io__standard_in.standard_in,
      Ada___ada__text_io__standard_out.standard_out,
      Ada___ada__text_io__standard_err.standard_err,
      Ada___ada__text_io__current_in.current_in,
      Ada___ada__text_io__current_out.current_out,
      Ada___ada__text_io__current_err.current_err }
    requires { (([@GP_Pretty_Ada:2136]
                 ((Ada___ada__text_io__is_open.is_open file) = True)) /\
                  ([@GP_Pretty_Ada:2142]
                   ((Ada___ada__text_io__mode.mode file) <> (0 : int))))
    }
    writes {  }
    ensures { (((result
                   = ((((((((Ada___ada__text_io__line_length.line_length file)
                              (Main.__private__content
                                  Ada___ada__text_io__file_system.file_system))
                             (Main.__private__content
                                 Ada___ada__text_io__standard_in.standard_in))
                            (Main.__private__content
                                Ada___ada__text_io__standard_out.standard_out))
                           (Main.__private__content
                               Ada___ada__text_io__standard_err.standard_err))
                          (Main.__private__content
                              Ada___ada__text_io__current_in.current_in))
                         (Main.__private__content
                             Ada___ada__text_io__current_out.current_out))
                        (Main.__private__content
                            Ada___ada__text_io__current_err.current_err))) /\
                  true) /\
                 (((((Ada___ada__text_io__count___axiom.dynamic_invariant
                        result)
                       True)
                      False)
                     True)
                    True)) }
  
  axiom line_length__post_axiom:
    forall file : Ada___ada__text_io__file_type.file_type.
      forall Ada___ada__text_io__file_system___file_system___ : Main.__private, Ada___ada__text_io__standard_in___standard_in___ : 
            Main.__private, Ada___ada__text_io__standard_out___standard_out___ : 
            Main.__private, Ada___ada__text_io__standard_err___standard_err___ : 
            Main.__private, Ada___ada__text_io__current_in___current_in___ : 
            Main.__private, Ada___ada__text_io__current_out___current_out___ : 
            Main.__private, Ada___ada__text_io__current_err___current_err___ : 
            Main.__private
            [(((((((Ada___ada__text_io__line_length.line_length file)
                     Ada___ada__text_io__file_system___file_system___)
                    Ada___ada__text_io__standard_in___standard_in___)
                   Ada___ada__text_io__standard_out___standard_out___)
                  Ada___ada__text_io__standard_err___standard_err___)
                 Ada___ada__text_io__current_in___current_in___)
                Ada___ada__text_io__current_out___current_out___)
               Ada___ada__text_io__current_err___current_err___].
        (((((((Ada___ada__text_io__file_type___axiom.dynamic_invariant file)
                True)
               True)
              True)
             True) /\
            (([@GP_Pretty_Ada:2136]
              ((Ada___ada__text_io__is_open.is_open file) = True)) /\
               ([@GP_Pretty_Ada:2142]
                ((Ada___ada__text_io__mode.mode file) <> (0 : int))))) ->
           (let result =
              (((((((Ada___ada__text_io__line_length.line_length file)
                      Ada___ada__text_io__file_system___file_system___)
                     Ada___ada__text_io__standard_in___standard_in___)
                    Ada___ada__text_io__standard_out___standard_out___)
                   Ada___ada__text_io__standard_err___standard_err___)
                  Ada___ada__text_io__current_in___current_in___)
                 Ada___ada__text_io__current_out___current_out___)
                Ada___ada__text_io__current_err___current_err___ in
            ((true /\
                (((((Ada___ada__text_io__count___axiom.dynamic_invariant
                       result)
                      True)
                     False)
                    True)
                   True)) /\
               true)))
end

module Ada___ada__text_io__line_length__2___axiom
  use _gnatprove_standard.Main
  use int.Int
  use _gnatprove_standard.Main as Main
  use Ada___ada__text_io__line_length__2 as Ada___ada__text_io__line_length__2
  use Ada___ada__text_io__count___axiom as Ada___ada__text_io__count___axiom
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  
  val line_length (__void_param: unit) : int
    reads { Ada___ada__text_io__file_system.file_system,
      Ada___ada__text_io__standard_in.standard_in,
      Ada___ada__text_io__standard_out.standard_out,
      Ada___ada__text_io__standard_err.standard_err,
      Ada___ada__text_io__current_in.current_in,
      Ada___ada__text_io__current_out.current_out,
      Ada___ada__text_io__current_err.current_err }
    requires { true }
    writes {  }
    ensures { (((result
                   = (((((((Ada___ada__text_io__line_length__2.line_length
                              (Main.__private__content
                                  Ada___ada__text_io__file_system.file_system))
                             (Main.__private__content
                                 Ada___ada__text_io__standard_in.standard_in))
                            (Main.__private__content
                                Ada___ada__text_io__standard_out.standard_out))
                           (Main.__private__content
                               Ada___ada__text_io__standard_err.standard_err))
                          (Main.__private__content
                              Ada___ada__text_io__current_in.current_in))
                         (Main.__private__content
                             Ada___ada__text_io__current_out.current_out))
                        (Main.__private__content
                            Ada___ada__text_io__current_err.current_err))) /\
                  true) /\
                 (((((Ada___ada__text_io__count___axiom.dynamic_invariant
                        result)
                       True)
                      False)
                     True)
                    True)) }
  
  axiom line_length__post_axiom:
    forall Ada___ada__text_io__file_system___file_system___ : Main.__private, Ada___ada__text_io__standard_in___standard_in___ : 
          Main.__private, Ada___ada__text_io__standard_out___standard_out___ : 
          Main.__private, Ada___ada__text_io__standard_err___standard_err___ : 
          Main.__private, Ada___ada__text_io__current_in___current_in___ : 
          Main.__private, Ada___ada__text_io__current_out___current_out___ : 
          Main.__private, Ada___ada__text_io__current_err___current_err___ : 
          Main.__private
          [((((((Ada___ada__text_io__line_length__2.line_length
                   Ada___ada__text_io__file_system___file_system___)
                  Ada___ada__text_io__standard_in___standard_in___)
                 Ada___ada__text_io__standard_out___standard_out___)
                Ada___ada__text_io__standard_err___standard_err___)
               Ada___ada__text_io__current_in___current_in___)
              Ada___ada__text_io__current_out___current_out___)
             Ada___ada__text_io__current_err___current_err___].
      let result =
        ((((((Ada___ada__text_io__line_length__2.line_length
                Ada___ada__text_io__file_system___file_system___)
               Ada___ada__text_io__standard_in___standard_in___)
              Ada___ada__text_io__standard_out___standard_out___)
             Ada___ada__text_io__standard_err___standard_err___)
            Ada___ada__text_io__current_in___current_in___)
           Ada___ada__text_io__current_out___current_out___)
          Ada___ada__text_io__current_err___current_err___ in
      ((true /\
          (((((Ada___ada__text_io__count___axiom.dynamic_invariant result)
                True)
               False)
              True)
             True)) /\
         true)
end

module Ada___ada__text_io__page_length___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use _gnatprove_standard.Main as Main
  use Ada___ada__text_io__file_type as Ada___ada__text_io__file_type
  use Ada___ada__text_io__is_open as Ada___ada__text_io__is_open
  use Ada___ada__text_io__mode as Ada___ada__text_io__mode
  use Ada___ada__text_io__page_length as Ada___ada__text_io__page_length
  use Ada___ada__text_io__count___axiom as Ada___ada__text_io__count___axiom
  use Ada___ada__text_io__file_type___axiom as Ada___ada__text_io__file_type___axiom
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  
  val page_length (file: Ada___ada__text_io__file_type.file_type) : int
    reads { Ada___ada__text_io__file_system.file_system,
      Ada___ada__text_io__standard_in.standard_in,
      Ada___ada__text_io__standard_out.standard_out,
      Ada___ada__text_io__standard_err.standard_err,
      Ada___ada__text_io__current_in.current_in,
      Ada___ada__text_io__current_out.current_out,
      Ada___ada__text_io__current_err.current_err }
    requires { (([@GP_Pretty_Ada:2175]
                 ((Ada___ada__text_io__is_open.is_open file) = True)) /\
                  ([@GP_Pretty_Ada:2181]
                   ((Ada___ada__text_io__mode.mode file) <> (0 : int))))
    }
    writes {  }
    ensures { (((result
                   = ((((((((Ada___ada__text_io__page_length.page_length file)
                              (Main.__private__content
                                  Ada___ada__text_io__file_system.file_system))
                             (Main.__private__content
                                 Ada___ada__text_io__standard_in.standard_in))
                            (Main.__private__content
                                Ada___ada__text_io__standard_out.standard_out))
                           (Main.__private__content
                               Ada___ada__text_io__standard_err.standard_err))
                          (Main.__private__content
                              Ada___ada__text_io__current_in.current_in))
                         (Main.__private__content
                             Ada___ada__text_io__current_out.current_out))
                        (Main.__private__content
                            Ada___ada__text_io__current_err.current_err))) /\
                  true) /\
                 (((((Ada___ada__text_io__count___axiom.dynamic_invariant
                        result)
                       True)
                      False)
                     True)
                    True)) }
  
  axiom page_length__post_axiom:
    forall file : Ada___ada__text_io__file_type.file_type.
      forall Ada___ada__text_io__file_system___file_system___ : Main.__private, Ada___ada__text_io__standard_in___standard_in___ : 
            Main.__private, Ada___ada__text_io__standard_out___standard_out___ : 
            Main.__private, Ada___ada__text_io__standard_err___standard_err___ : 
            Main.__private, Ada___ada__text_io__current_in___current_in___ : 
            Main.__private, Ada___ada__text_io__current_out___current_out___ : 
            Main.__private, Ada___ada__text_io__current_err___current_err___ : 
            Main.__private
            [(((((((Ada___ada__text_io__page_length.page_length file)
                     Ada___ada__text_io__file_system___file_system___)
                    Ada___ada__text_io__standard_in___standard_in___)
                   Ada___ada__text_io__standard_out___standard_out___)
                  Ada___ada__text_io__standard_err___standard_err___)
                 Ada___ada__text_io__current_in___current_in___)
                Ada___ada__text_io__current_out___current_out___)
               Ada___ada__text_io__current_err___current_err___].
        (((((((Ada___ada__text_io__file_type___axiom.dynamic_invariant file)
                True)
               True)
              True)
             True) /\
            (([@GP_Pretty_Ada:2175]
              ((Ada___ada__text_io__is_open.is_open file) = True)) /\
               ([@GP_Pretty_Ada:2181]
                ((Ada___ada__text_io__mode.mode file) <> (0 : int))))) ->
           (let result =
              (((((((Ada___ada__text_io__page_length.page_length file)
                      Ada___ada__text_io__file_system___file_system___)
                     Ada___ada__text_io__standard_in___standard_in___)
                    Ada___ada__text_io__standard_out___standard_out___)
                   Ada___ada__text_io__standard_err___standard_err___)
                  Ada___ada__text_io__current_in___current_in___)
                 Ada___ada__text_io__current_out___current_out___)
                Ada___ada__text_io__current_err___current_err___ in
            ((true /\
                (((((Ada___ada__text_io__count___axiom.dynamic_invariant
                       result)
                      True)
                     False)
                    True)
                   True)) /\
               true)))
end

module Ada___ada__text_io__page_length__2___axiom
  use _gnatprove_standard.Main
  use int.Int
  use _gnatprove_standard.Main as Main
  use Ada___ada__text_io__page_length__2 as Ada___ada__text_io__page_length__2
  use Ada___ada__text_io__count___axiom as Ada___ada__text_io__count___axiom
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  
  val page_length (__void_param: unit) : int
    reads { Ada___ada__text_io__file_system.file_system,
      Ada___ada__text_io__standard_in.standard_in,
      Ada___ada__text_io__standard_out.standard_out,
      Ada___ada__text_io__standard_err.standard_err,
      Ada___ada__text_io__current_in.current_in,
      Ada___ada__text_io__current_out.current_out,
      Ada___ada__text_io__current_err.current_err }
    requires { true }
    writes {  }
    ensures { (((result
                   = (((((((Ada___ada__text_io__page_length__2.page_length
                              (Main.__private__content
                                  Ada___ada__text_io__file_system.file_system))
                             (Main.__private__content
                                 Ada___ada__text_io__standard_in.standard_in))
                            (Main.__private__content
                                Ada___ada__text_io__standard_out.standard_out))
                           (Main.__private__content
                               Ada___ada__text_io__standard_err.standard_err))
                          (Main.__private__content
                              Ada___ada__text_io__current_in.current_in))
                         (Main.__private__content
                             Ada___ada__text_io__current_out.current_out))
                        (Main.__private__content
                            Ada___ada__text_io__current_err.current_err))) /\
                  true) /\
                 (((((Ada___ada__text_io__count___axiom.dynamic_invariant
                        result)
                       True)
                      False)
                     True)
                    True)) }
  
  axiom page_length__post_axiom:
    forall Ada___ada__text_io__file_system___file_system___ : Main.__private, Ada___ada__text_io__standard_in___standard_in___ : 
          Main.__private, Ada___ada__text_io__standard_out___standard_out___ : 
          Main.__private, Ada___ada__text_io__standard_err___standard_err___ : 
          Main.__private, Ada___ada__text_io__current_in___current_in___ : 
          Main.__private, Ada___ada__text_io__current_out___current_out___ : 
          Main.__private, Ada___ada__text_io__current_err___current_err___ : 
          Main.__private
          [((((((Ada___ada__text_io__page_length__2.page_length
                   Ada___ada__text_io__file_system___file_system___)
                  Ada___ada__text_io__standard_in___standard_in___)
                 Ada___ada__text_io__standard_out___standard_out___)
                Ada___ada__text_io__standard_err___standard_err___)
               Ada___ada__text_io__current_in___current_in___)
              Ada___ada__text_io__current_out___current_out___)
             Ada___ada__text_io__current_err___current_err___].
      let result =
        ((((((Ada___ada__text_io__page_length__2.page_length
                Ada___ada__text_io__file_system___file_system___)
               Ada___ada__text_io__standard_in___standard_in___)
              Ada___ada__text_io__standard_out___standard_out___)
             Ada___ada__text_io__standard_err___standard_err___)
            Ada___ada__text_io__current_in___current_in___)
           Ada___ada__text_io__current_out___current_out___)
          Ada___ada__text_io__current_err___current_err___ in
      ((true /\
          (((((Ada___ada__text_io__count___axiom.dynamic_invariant result)
                True)
               False)
              True)
             True)) /\
         true)
end

module Sorter__count___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Drvr__TTaSP1___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Drvr__B41b__L_4___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Drvr__B41b__L_4__i___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Drvr__C39b___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Drvr__C40b___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Drvr__L_5__B57b__L_4___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Drvr__L_5__B57b__L_4__i___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Drvr__L_5__C55b___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Drvr__L_5__C56b___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Drvr__L_5__C71b___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Drvr__L_5__C72b___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Drvr__subprogram_def
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use _gnatprove_standard.Main as Main
  use _gnatprove_standard.Integer as Integer
  use _gnatprove_standard.Boolean as Boolean
  use Standard_String__Img as Standard_String__Img
  use Standard__integer as Standard__integer
  use Standard__integer as Standard__integer
  use Standard__integer___axiom as Standard__integer___axiom
  use Standard__integer__rep as Standard__integer__rep
  use Standard__positive as Standard__positive
  use Array__Int__Standard__character__Concat as Array__Int__Standard__character__Concat
  use Standard__string as Standard__string
  use Standard__integer__rep as Standard__integer__rep
  use Ada___ada__text_io__file_type as Ada___ada__text_io__file_type
  use Drvr__rand_file as Drvr__rand_file
  use Drvr__max as Drvr__max
  use Drvr__current_array_size as Drvr__current_array_size
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Drvr__a as Drvr__a
  use Drvr__choice as Drvr__choice
  use Sorter__array_type as Sorter__array_type
  use Drvr__fetch_safe_input___axiom as Drvr__fetch_safe_input___axiom
  use Ada___ada__text_io__open___axiom as Ada___ada__text_io__open___axiom
  use Ada___ada__integer_text_io__get___axiom as Ada___ada__integer_text_io__get___axiom
  use Ada___ada__text_io__close___axiom as Ada___ada__text_io__close___axiom
  use Drvr__C39b as Drvr__C39b
  use Drvr__C40b as Drvr__C40b
  use Drvr__B41b__L_4__i as Drvr__B41b__L_4__i
  use Ada___ada__text_io__put__4___axiom as Ada___ada__text_io__put__4___axiom
  use Ada___ada__text_io__new_line__2___axiom as Ada___ada__text_io__new_line__2___axiom
  use Drvr__L_5__C55b as Drvr__L_5__C55b
  use Drvr__L_5__C56b as Drvr__L_5__C56b
  use Drvr__L_5__B57b__L_4__i as Drvr__L_5__B57b__L_4__i
  use Sorter__count as Sorter__count
  use Sorter__sort___axiom as Sorter__sort___axiom
  use Drvr__L_5__C71b as Drvr__L_5__C71b
  use Drvr__L_5__C72b as Drvr__L_5__C72b
  use Ada___ada__text_io__file_type___axiom as Ada___ada__text_io__file_type___axiom
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Drvr__TTaSP1 as Drvr__TTaSP1
  use Drvr__TaS___axiom as Drvr__TaS___axiom
  use Drvr__B41b__L_4 as Drvr__B41b__L_4
  use Drvr__L_5 as Drvr__L_5
  use Drvr__L_5__B57b__L_4 as Drvr__L_5__B57b__L_4
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Drvr__a__aggregate_def as Drvr__a__aggregate_def
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Temp___String_Literal_306 as Temp___String_Literal_306
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_308 as Temp___String_Literal_308
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_316 as Temp___String_Literal_316
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_318 as Temp___String_Literal_318
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_321 as Temp___String_Literal_321
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_323 as Temp___String_Literal_323
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_325 as Temp___String_Literal_325
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_327 as Temp___String_Literal_327
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_329 as Temp___String_Literal_329
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_331 as Temp___String_Literal_331
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_334 as Temp___String_Literal_334
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_338 as Temp___String_Literal_338
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_340 as Temp___String_Literal_340
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_348 as Temp___String_Literal_348
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_351 as Temp___String_Literal_351
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_354 as Temp___String_Literal_354
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_355 as Temp___String_Literal_355
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_356 as Temp___String_Literal_356
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Array__Int__Standard__integer as Array__Int__Standard__integer
  use Temp___String_Literal_369 as Temp___String_Literal_369
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_372 as Temp___String_Literal_372
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_373 as Temp___String_Literal_373
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_374 as Temp___String_Literal_374
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_383 as Temp___String_Literal_383
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Standard__integer___axiom as Standard__integer___axiom
  use Standard__positive___axiom as Standard__positive___axiom
  use Standard__character___axiom as Standard__character___axiom
  use Standard__string___axiom as Standard__string___axiom
  use Standard__integer___axiom as Standard__integer___axiom
  use Drvr__rand_file___axiom as Drvr__rand_file___axiom
  use Drvr__max___axiom as Drvr__max___axiom
  use Drvr__current_array_size___axiom as Drvr__current_array_size___axiom
  use Drvr__a___axiom as Drvr__a___axiom
  use Drvr__a__aggregate_def___axiom as Drvr__a__aggregate_def___axiom
  use Drvr__choice___axiom as Drvr__choice___axiom
  use Drvr__L_5___axiom as Drvr__L_5___axiom
  use Ada___ada__text_io__file_type___axiom as Ada___ada__text_io__file_type___axiom
  use Ada___ada__text_io__file_mode___axiom as Ada___ada__text_io__file_mode___axiom
  use Ada___ada__text_io__count___axiom as Ada___ada__text_io__count___axiom
  use Ada___ada__text_io__open___axiom as Ada___ada__text_io__open___axiom
  use Ada___ada__text_io__close___axiom as Ada___ada__text_io__close___axiom
  use Ada___ada__text_io__mode___axiom as Ada___ada__text_io__mode___axiom
  use Ada___ada__text_io__is_open___axiom as Ada___ada__text_io__is_open___axiom
  use Ada___ada__text_io__line_length___axiom as Ada___ada__text_io__line_length___axiom
  use Ada___ada__text_io__line_length__2___axiom as Ada___ada__text_io__line_length__2___axiom
  use Ada___ada__text_io__page_length___axiom as Ada___ada__text_io__page_length___axiom
  use Ada___ada__text_io__page_length__2___axiom as Ada___ada__text_io__page_length__2___axiom
  use Ada___ada__text_io__new_line__2___axiom as Ada___ada__text_io__new_line__2___axiom
  use Ada___ada__text_io__put__4___axiom as Ada___ada__text_io__put__4___axiom
  use Sorter__array_type___axiom as Sorter__array_type___axiom
  use Sorter__count___axiom as Sorter__count___axiom
  use Sorter__sort___axiom as Sorter__sort___axiom
  use Ada___ada__integer_text_io__get___axiom as Ada___ada__integer_text_io__get___axiom
  use Drvr__TaS___axiom as Drvr__TaS___axiom
  use Drvr__TTaSP1___axiom as Drvr__TTaSP1___axiom
  use Drvr__fetch_safe_input___axiom as Drvr__fetch_safe_input___axiom
  use Drvr__B41b__L_4___axiom as Drvr__B41b__L_4___axiom
  use Drvr__B41b__L_4__i___axiom as Drvr__B41b__L_4__i___axiom
  use Drvr__C39b___axiom as Drvr__C39b___axiom
  use Drvr__C40b___axiom as Drvr__C40b___axiom
  use Drvr__L_5__B57b__L_4___axiom as Drvr__L_5__B57b__L_4___axiom
  use Drvr__L_5__B57b__L_4__i___axiom as Drvr__L_5__B57b__L_4__i___axiom
  use Drvr__L_5__C55b___axiom as Drvr__L_5__C55b___axiom
  use Drvr__L_5__C56b___axiom as Drvr__L_5__C56b___axiom
  use Drvr__L_5__C71b___axiom as Drvr__L_5__C71b___axiom
  use Drvr__L_5__C72b___axiom as Drvr__L_5__C72b___axiom
  
  let def (__void_param : unit)
    requires { [#"drvr.adb" 84 0 0] true }
  = [@vc:divergent]
    (([@GNAT-comment:Assume dynamic invariants of inputs of the subprogram drvr.adb:84]
      ());
     ([#"drvr.adb" 84 0 0]
      assume {
        [#"drvr.adb" 84 0 0]
        (((((Standard__integer___axiom.dynamic_invariant
               (Sorter__count.count.int__content))
              True)
             False)
            True)
           True) });
     ([@GNAT-comment:Assume moved pointers in outputs of the subprogram drvr.adb:84]
      ());
     ([@GNAT-comment:Check for RTE in the Pre of the subprogram drvr.adb:84]
      ());
     ([#"drvr.adb" 84 0 0] ());
     ([@GNAT-comment:Assume Pre of the subprogram drvr.adb:84] ());
     ([#"drvr.adb" 84 0 0]
      (try
         ([#"drvr.adb" 85 0 0] ());
         ([#"drvr.adb" 85 0 0]
          (([#"drvr.adb" 85 0 0]
            assume {
              [#"drvr.adb" 85 0 0]
              ((Ada___ada__text_io__file_type___axiom.default_initial_assumption
                  (Drvr__rand_file.rand_file.Ada___ada__text_io__file_type.file_type__content))
                 False) });
           ([#"drvr.adb" 85 0 0]
            assume {
              [#"drvr.adb" 85 0 0]
              (((((Ada___ada__text_io__file_type___axiom.dynamic_invariant
                     (Drvr__rand_file.rand_file.Ada___ada__text_io__file_type.file_type__content))
                    False)
                   False)
                  True)
                 True) })));
         ([#"drvr.adb" 86 0 0]
          (([#"drvr.adb" 86 0 0]
            (Drvr__max.max.int__content <- (10000 : int)));
           ([#"drvr.adb" 86 0 0]
            assume {
              [#"drvr.adb" 86 0 0]
              (((((Standard__integer___axiom.dynamic_invariant
                     (Drvr__max.max.int__content))
                    True)
                   False)
                  True)
                 True) })));
         ([#"drvr.adb" 87 0 0] ());
         ([#"drvr.adb" 87 0 0]
          (([#"drvr.adb" 87 0 0]
            (Drvr__current_array_size.current_array_size.int__content <-
               (Drvr__max.max.int__content)));
           ([#"drvr.adb" 87 0 0]
            assume {
              [#"drvr.adb" 87 0 0]
              (((((Standard__integer___axiom.dynamic_invariant
                     (Drvr__current_array_size.current_array_size.int__content))
                    True)
                   False)
                  True)
                 True) })));
         ([#"drvr.adb" 88 0 0] ());
         ([#"drvr.adb" 88 0 0]
          (([#"drvr.adb" 88 0 0]
            (Drvr__a.a.Array__Int__Standard__integer.map__content <-
               (let temp___304 =
                  Drvr__a__aggregate_def.drvr__a__aggregate_def (0 : int) in
                temp___304)));
           ([#"drvr.adb" 88 0 0]
            assume {
              [#"drvr.adb" 88 0 0]
              (((((Drvr__TaS___axiom.dynamic_invariant
                     (Drvr__a.a.Array__Int__Standard__integer.map__content))
                    True)
                   False)
                  True)
                 True) })));
         ([#"drvr.adb" 89 0 0]
          (([#"drvr.adb" 89 0 0]
            assume {
              [#"drvr.adb" 89 0 0]
              ((Standard__integer___axiom.default_initial_assumption
                  (Drvr__choice.choice.int__content))
                 False) });
           ([#"drvr.adb" 89 0 0]
            assume {
              [#"drvr.adb" 89 0 0]
              (((((Standard__integer___axiom.dynamic_invariant
                     (Drvr__choice.choice.int__content))
                    False)
                   False)
                  True)
                 True) })));
         ([#"drvr.adb" 94 0 0] ());
         ([#"drvr.adb" 94 0 0] ());
         ([#"drvr.adb" 94 0 0] ());
         ([#"drvr.adb" 99 0 0] ());
         ([#"drvr.adb" 99 0 0] ());
         ([#"drvr.adb" 99 0 0] ());
         ([#"drvr.adb" 148 0 0] ());
         ([#"drvr.adb" 148 0 0] ());
         ([#"drvr.adb" 148 0 0] ());
         ([#"drvr.adb" 168 0 0] ());
         ([@GP_Sloc:drvr.adb:163:16] [#"drvr.adb" 163 0 0] ());
         ([@GP_Sloc:drvr.adb:163:19] [#"drvr.adb" 163 0 0] ());
         ([@GP_Sloc:drvr.adb:163:4] [#"drvr.adb" 163 0 0] ());
         ([@GP_Sloc:drvr.adb:163:4]
          [#"drvr.adb" 163 0 0]
          [#"drvr.adb" 163 0 0]
          ((let drvr__C39b__assume =
              Drvr__a.a.Array__Int__Standard__integer.map__content in
            [#"drvr.adb" 163 0 0]
            assume {
              [#"drvr.adb" 163 0 0] (drvr__C39b__assume = Drvr__C39b.c39b) });
           ([#"drvr.adb" 163 0 0]
            assume {
              [#"drvr.adb" 163 0 0]
              (((((Drvr__TaS___axiom.dynamic_invariant Drvr__C39b.c39b) True)
                   False)
                  True)
                 True) })));
         ([@GP_Sloc:drvr.adb:163:4]
          [#"drvr.adb" 163 0 0]
          [#"drvr.adb" 163 0 0]
          [#"drvr.adb" 163 0 0]
          (begin
             ensures { true }
             let _ =
               let _ = Drvr__a.a.Array__Int__Standard__integer.map__content in
               () in
             ()
           end));
         ([@GP_Sloc:drvr.adb:163:4]
          [#"drvr.adb" 163 0 0]
          [#"drvr.adb" 163 0 0]
          ((let drvr__C40b__assume = Drvr__max.max.int__content in
            [#"drvr.adb" 163 0 0]
            assume {
              [#"drvr.adb" 163 0 0] (drvr__C40b__assume = Drvr__C40b.c40b) });
           ([#"drvr.adb" 163 0 0]
            assume {
              [#"drvr.adb" 163 0 0]
              (((((Standard__integer___axiom.dynamic_invariant
                     Drvr__C40b.c40b)
                    True)
                   False)
                  True)
                 True) })));
         ([@GP_Sloc:drvr.adb:163:4]
          [#"drvr.adb" 163 0 0]
          (([#"drvr.adb" 152 0 0] ());
           ([@GP_Sloc:drvr.adb:151:10:inlined:drvr.adb:163:4]
            [#"drvr.adb" 151 0 0] ());
           ([@GP_Sloc:drvr.adb:151:10:inlined:drvr.adb:163:4]
            [#"drvr.adb" 151 0 0]
            (let temp___compl_305 =
               Drvr__rand_file.rand_file.Ada___ada__text_io__file_type.file_type__content in
             ([#"drvr.adb" 151 0 0] (val _f : unit in
                                     _f));
             ([#"drvr.adb" 151 0 0]
              [@GP_Reason:VC_PRECONDITION]
              [@GP_Shape:B41b_declblk__call_open]
              [@vc:annotation]
              [@GP_Sloc:drvr.adb:151:10:inlined:drvr.adb:163:4]
              [@comment:         open(rand_file, In_File, ".\\src\\random10k.txt");-- opens a 10,000 element data file in the src directory          ^ drvr.adb:151:10:inlined:drvr.adb:163:4:VC_PRECONDITION]
              [@GP_Id:0]
              ((((Ada___ada__text_io__open___axiom.open
                    Drvr__rand_file.rand_file)
                   (0 : int))
                  (let temp___307 =
                     Temp___String_Literal_306.temp___String_Literal_306 () in
                   ((Standard__string.of_array temp___307) (1 : int))
                     (19 : int)))
                 (let temp___309 =
                    Temp___String_Literal_308.temp___String_Literal_308 () in
                  ((Standard__string.of_array temp___309) (1 : int))
                    (0 : int))))));
           ([@GP_Sloc:drvr.adb:152:27:inlined:drvr.adb:163:4]
            [#"drvr.adb" 152 0 0]
            (let temp___310 = 1 : int in
             let temp___311 = Drvr__C40b.c40b in
             ([#"drvr.adb" 152 0 0]
              (Drvr__B41b__L_4__i.i.int__content <- temp___310));
             ([@GNAT-comment:Translation of an Ada loop from drvr.adb:152 instantiated at drvr.adb:163]
              ());
             (if ((Boolean.andb
                     (temp___310 <= (Drvr__B41b__L_4__i.i.int__content)))
                    ((Drvr__B41b__L_4__i.i.int__content) <= temp___311)) then
                ([#"drvr.adb" 152 0 0]
                 (try
                    let temp___loop_entry_313 =
                      Drvr__a.a.Array__Int__Standard__integer.map__content in
                    ([@GNAT-comment:While loop translating the Ada loop from drvr.adb:152 instantiated at drvr.adb:163]
                     ());
                    ([#"drvr.adb" 152 0 0]
                     [#"drvr.adb" 152 0 0]
                     (([@GNAT-comment:Check for absence of RTE in the loop invariant and variant]
                       ());
                      while True do
                        ([@GNAT-comment:gnat_ast_to_ptree: code after the loop invariant]
                         (([@GNAT-comment:Assume implicit invariants from the loop drvr.adb:152 instantiated at drvr.adb:163]
                           ());
                          ([#"drvr.adb" 152 0 0]
                           assume {
                             [#"drvr.adb" 152 0 0]
                             ((Boolean.andb
                                 ((true /\
                                     (((((Drvr__TaS___axiom.dynamic_invariant
                                            (Drvr__a.a.Array__Int__Standard__integer.map__content))
                                           True)
                                          True)
                                         True)
                                        True)) /\
                                    (true /\
                                       (forall temp___314 : int.
                                          if ((Drvr__TTaSP1.first
                                                 <= temp___314) /\
                                                (temp___314
                                                   <= Drvr__TTaSP1.last)) then
                                            (if ((temp___311 < temp___314) \/
                                                   ((temp___314 < temp___310) \/
                                                      ((Drvr__B41b__L_4__i.i.int__content)
                                                         <= temp___314))) then
                                               (((Array__Int__Standard__integer.get
                                                    (Drvr__a.a.Array__Int__Standard__integer.map__content))
                                                   temp___314)
                                                  = ((Array__Int__Standard__integer.get
                                                        temp___loop_entry_313)
                                                       temp___314))
                                             else true)
                                          else true))))
                                (((1 : int)
                                    <= (Drvr__B41b__L_4__i.i.int__content)) /\
                                   ((Drvr__B41b__L_4__i.i.int__content)
                                      <= Drvr__C40b.c40b))) });
                          ([@GNAT-comment:Continuation of loop after loop invariant and variant]
                           ());
                          ([@GP_Sloc:drvr.adb:153:13:inlined:drvr.adb:163:4]
                           [#"drvr.adb" 153 0 0] ());
                          ([@GP_Sloc:drvr.adb:153:13:inlined:drvr.adb:163:4]
                           [#"drvr.adb" 153 0 0]
                           (let temp___compl_312 =
                              Standard__integer__rep.to_rep
                                ((Array__Int__Standard__integer.get
                                    (Drvr__a.a.Array__Int__Standard__integer.map__content))
                                   (([#"drvr.adb" 153 0 0]
                                     assert {
                                       [#"drvr.adb" 153 0 0]
                                       [#"drvr.adb" 153 0 0]
                                       [@vc:annotation]
                                       [@GP_Shape:B41b_declblk__L_4_while__call_get__ixdcomp]
                                       [@comment:            get(rand_file,A(i)); -- reads data from a text file                             ^ drvr.adb:153:29:inlined:drvr.adb:163:4:VC_INDEX_CHECK]
                                       [@GP_Reason:VC_INDEX_CHECK]
                                       [@GP_Id:1]
                                       [@GP_Sloc:drvr.adb:153:29:inlined:drvr.adb:163:4]
                                       ((Drvr__TTaSP1.first
                                           <= (Drvr__B41b__L_4__i.i.int__content)) /\
                                          ((Drvr__B41b__L_4__i.i.int__content)
                                             <= Drvr__TTaSP1.last)) });
                                    (Drvr__B41b__L_4__i.i.int__content))) in
                            let item = { int__content = temp___compl_312 } in
                            (val _f : unit in
                             _f);
                            ([#"drvr.adb" 153 0 0]
                             [@GP_Reason:VC_PRECONDITION]
                             [@GP_Shape:B41b_declblk__L_4_while__call_get]
                             [@vc:annotation]
                             [@comment:            get(rand_file,A(i)); -- reads data from a text file             ^ drvr.adb:153:13:inlined:drvr.adb:163:4:VC_PRECONDITION]
                             [@GP_Sloc:drvr.adb:153:13:inlined:drvr.adb:163:4]
                             [@GP_Id:3]
                             (((Ada___ada__integer_text_io__get___axiom.get
                                  (Drvr__rand_file.rand_file.Ada___ada__text_io__file_type.file_type__content))
                                 item)
                                (0 : int)));
                            (Drvr__a.a.Array__Int__Standard__integer.map__content <-
                               (((Array__Int__Standard__integer.set
                                    (Drvr__a.a.Array__Int__Standard__integer.map__content))
                                   (assert {
                                      [#"drvr.adb" 153 0 0]
                                      [@vc:annotation]
                                      [@GP_Shape:B41b_declblk__L_4_while__call_get__ixdcomp]
                                      [@comment:            get(rand_file,A(i)); -- reads data from a text file                             ^ drvr.adb:153:29:inlined:drvr.adb:163:4:VC_INDEX_CHECK]
                                      [@GP_Reason:VC_INDEX_CHECK]
                                      [@GP_Id:2]
                                      [@GP_Sloc:drvr.adb:153:29:inlined:drvr.adb:163:4]
                                      ((Drvr__TTaSP1.first
                                          <= (Drvr__B41b__L_4__i.i.int__content)) /\
                                         ((Drvr__B41b__L_4__i.i.int__content)
                                            <= Drvr__TTaSP1.last)) };
                                    (Drvr__B41b__L_4__i.i.int__content)))
                                  (Standard__integer__rep.of_rep
                                     (item.int__content))))));
                          ([@GNAT-comment:Check for the exit condition and loop statements appearing before the loop invariant of loop drvr.adb:152 instantiated at drvr.adb:163]
                           ());
                          (if ((Drvr__B41b__L_4__i.i.int__content)
                                 = temp___311) then
                             (raise Drvr__B41b__L_4.L_4)
                           else ());
                          ([#"drvr.adb" 152 0 0]
                           [#"drvr.adb" 152 0 0]
                           (Drvr__B41b__L_4__i.i.int__content <-
                              ((Drvr__B41b__L_4__i.i.int__content)
                                 + (1 : int))))));
                        ([@GNAT-comment:gnat_ast_to_ptree: code before the loop invariant]
                         [@GNAT-comment:Check for absence of RTE in the loop invariant and variant]
                         ());
                        ([@GNAT-comment:gnat_ast_to_ptree: code checking the variants]
                         ())
                      done))
                  with Drvr__B41b__L_4.L_4 -> ()
                  end))
              else ())));
           ([@GP_Sloc:drvr.adb:155:10:inlined:drvr.adb:163:4]
            [#"drvr.adb" 155 0 0] ());
           ([@GP_Sloc:drvr.adb:155:10:inlined:drvr.adb:163:4]
            [#"drvr.adb" 155 0 0]
            (let temp___compl_315 =
               Drvr__rand_file.rand_file.Ada___ada__text_io__file_type.file_type__content in
             ([#"drvr.adb" 155 0 0] (val _f : unit in
                                     _f));
             ([#"drvr.adb" 155 0 0]
              [@GP_Reason:VC_PRECONDITION]
              [@GP_Shape:B41b_declblk__call_close]
              [@vc:annotation]
              [@comment:         close(rand_file); -- close the file (often forgotten)          ^ drvr.adb:155:10:inlined:drvr.adb:163:4:VC_PRECONDITION]
              [@GP_Sloc:drvr.adb:155:10:inlined:drvr.adb:163:4]
              [@GP_Id:4]
              (Ada___ada__text_io__close___axiom.close
                 Drvr__rand_file.rand_file))))));
         ([@GP_Sloc:drvr.adb:165:4] [#"drvr.adb" 165 0 0] ());
         ([@GP_Sloc:drvr.adb:165:4]
          [#"drvr.adb" 165 0 0]
          (([#"drvr.adb" 165 0 0] (val _f : unit in
                                   _f));
           (Ada___ada__text_io__put__4___axiom.put
              (let temp___317 =
                 Temp___String_Literal_316.temp___String_Literal_316 () in
               ((Standard__string.of_array temp___317) (1 : int)) (36 : int)))));
         ([@GP_Sloc:drvr.adb:165:49] [#"drvr.adb" 165 0 0] ());
         ([@GP_Sloc:drvr.adb:165:49]
          [#"drvr.adb" 165 0 0]
          (([#"drvr.adb" 165 0 0] (val _f : unit in
                                   _f));
           (Ada___ada__text_io__new_line__2___axiom.new_line (1 : int))));
         ([@GP_Sloc:drvr.adb:166:4] [#"drvr.adb" 166 0 0] ());
         ([@GP_Sloc:drvr.adb:166:4]
          [#"drvr.adb" 166 0 0]
          (([#"drvr.adb" 166 0 0] (val _f : unit in
                                   _f));
           (Ada___ada__text_io__put__4___axiom.put
              (let temp___320 =
                 (Standard_String__Img.to_string
                    (Standard__integer.attr__ATTRIBUTE_IMAGE
                       (Drvr__max.max.int__content)))
                   (12 : int) in
               let temp___319 =
                 Temp___String_Literal_318.temp___String_Literal_318 () in
               ((Standard__string.of_array
                   ((((((Array__Int__Standard__character__Concat.concat
                           temp___319)
                          (1 : int))
                         (24 : int))
                        (Standard__string.to_array temp___320))
                       (Standard__string.first temp___320))
                      (Standard__string.last temp___320)))
                  (1 : int))
                 ([#"drvr.adb" 166 0 0]
                  [@comment:   Put("The size of the Array is" & Integer'Image(Max)); New_Line;                                   ^ drvr.adb:166:35:VC_RANGE_CHECK]
                  [@vc:annotation]
                  [@GP_Reason:VC_RANGE_CHECK]
                  [@GP_Shape:call_put__concat]
                  [@GP_Sloc:drvr.adb:166:35]
                  [@GP_Id:5]
                  (Standard__positive.range_check_
                     (((1 : int)
                         + (((Integer.length (1 : int)) (24 : int))
                              + ((Integer.length
                                    (Standard__string.first temp___320))
                                   (Standard__string.last temp___320))))
                        - (1 : int))))))));
         ([@GP_Sloc:drvr.adb:166:58] [#"drvr.adb" 166 0 0] ());
         ([@GP_Sloc:drvr.adb:166:58]
          [#"drvr.adb" 166 0 0]
          (([#"drvr.adb" 166 0 0] (val _f : unit in
                                   _f));
           (Ada___ada__text_io__new_line__2___axiom.new_line (1 : int))));
         ([@GP_Sloc:drvr.adb:168:4]
          [#"drvr.adb" 168 0 0]
          (([@GNAT-comment:Translation of an Ada loop from drvr.adb:168] ());
           (if True then
              ([#"drvr.adb" 168 0 0]
               (try
                  let temp___loop_entry_386 =
                    Drvr__rand_file.rand_file.Ada___ada__text_io__file_type.file_type__content in
                  let temp___loop_entry_385 =
                    Drvr__a.a.Array__Int__Standard__integer.map__content in
                  ([@GNAT-comment:While loop translating the Ada loop from drvr.adb:168]
                   ());
                  ([#"drvr.adb" 168 0 0]
                   [#"drvr.adb" 168 0 0]
                   (([@GNAT-comment:Check for absence of RTE in the loop invariant and variant]
                     ());
                    while True do
                      ([@GNAT-comment:gnat_ast_to_ptree: code after the loop invariant]
                       (([@GNAT-comment:Assume implicit invariants from the loop drvr.adb:168]
                         ());
                        ([#"drvr.adb" 168 0 0]
                         assume {
                           [#"drvr.adb" 168 0 0]
                           ((((((((((true /\
                                       (((((Standard__integer___axiom.dynamic_invariant
                                              (Sorter__count.count.int__content))
                                             True)
                                            True)
                                           True)
                                          True)) /\
                                      (true /\ true)) /\
                                     (((((Standard__integer___axiom.dynamic_invariant
                                            (Drvr__current_array_size.current_array_size.int__content))
                                           True)
                                          True)
                                         True)
                                        True)) /\
                                    (true /\ true)) /\
                                   (((((Drvr__TaS___axiom.dynamic_invariant
                                          (Drvr__a.a.Array__Int__Standard__integer.map__content))
                                         True)
                                        True)
                                       True)
                                      True)) /\
                                  (true /\ true)) /\
                                 (((((Standard__integer___axiom.dynamic_invariant
                                        (Drvr__choice.choice.int__content))
                                       False)
                                      True)
                                     True)
                                    True)) /\
                                (true /\ true)) /\
                               (((((Ada___ada__text_io__file_type___axiom.dynamic_invariant
                                      (Drvr__rand_file.rand_file.Ada___ada__text_io__file_type.file_type__content))
                                     False)
                                    True)
                                   True)
                                  True)) /\
                              (true /\ true)) });
                        ([@GNAT-comment:Continuation of loop after loop invariant and variant]
                         ());
                        ([@GP_Sloc:drvr.adb:169:7] [#"drvr.adb" 169 0 0] ());
                        ([@GP_Sloc:drvr.adb:169:7]
                         [#"drvr.adb" 169 0 0]
                         (([#"drvr.adb" 169 0 0] (val _f : unit in
                                                  _f));
                          (Ada___ada__text_io__new_line__2___axiom.new_line
                             (1 : int))));
                        ([@GP_Sloc:drvr.adb:170:7] [#"drvr.adb" 170 0 0] ());
                        ([@GP_Sloc:drvr.adb:170:7]
                         [#"drvr.adb" 170 0 0]
                         (([#"drvr.adb" 170 0 0] (val _f : unit in
                                                  _f));
                          (Ada___ada__text_io__put__4___axiom.put
                             (let temp___322 =
                                Temp___String_Literal_321.temp___String_Literal_321
                                  () in
                              ((Standard__string.of_array temp___322)
                                 (1 : int))
                                (18 : int)))));
                        ([@GP_Sloc:drvr.adb:170:34] [#"drvr.adb" 170 0 0] ());
                        ([@GP_Sloc:drvr.adb:170:34]
                         [#"drvr.adb" 170 0 0]
                         (([#"drvr.adb" 170 0 0] (val _f : unit in
                                                  _f));
                          (Ada___ada__text_io__new_line__2___axiom.new_line
                             (1 : int))));
                        ([@GP_Sloc:drvr.adb:171:7] [#"drvr.adb" 171 0 0] ());
                        ([@GP_Sloc:drvr.adb:171:7]
                         [#"drvr.adb" 171 0 0]
                         (([#"drvr.adb" 171 0 0] (val _f : unit in
                                                  _f));
                          (Ada___ada__text_io__put__4___axiom.put
                             (let temp___324 =
                                Temp___String_Literal_323.temp___String_Literal_323
                                  () in
                              ((Standard__string.of_array temp___324)
                                 (1 : int))
                                (38 : int)))));
                        ([@GP_Sloc:drvr.adb:171:54] [#"drvr.adb" 171 0 0] ());
                        ([@GP_Sloc:drvr.adb:171:54]
                         [#"drvr.adb" 171 0 0]
                         (([#"drvr.adb" 171 0 0] (val _f : unit in
                                                  _f));
                          (Ada___ada__text_io__new_line__2___axiom.new_line
                             (1 : int))));
                        ([@GP_Sloc:drvr.adb:172:7] [#"drvr.adb" 172 0 0] ());
                        ([@GP_Sloc:drvr.adb:172:7]
                         [#"drvr.adb" 172 0 0]
                         (([#"drvr.adb" 172 0 0] (val _f : unit in
                                                  _f));
                          (Ada___ada__text_io__put__4___axiom.put
                             (let temp___326 =
                                Temp___String_Literal_325.temp___String_Literal_325
                                  () in
                              ((Standard__string.of_array temp___326)
                                 (1 : int))
                                (31 : int)))));
                        ([@GP_Sloc:drvr.adb:172:47] [#"drvr.adb" 172 0 0] ());
                        ([@GP_Sloc:drvr.adb:172:47]
                         [#"drvr.adb" 172 0 0]
                         (([#"drvr.adb" 172 0 0] (val _f : unit in
                                                  _f));
                          (Ada___ada__text_io__new_line__2___axiom.new_line
                             (1 : int))));
                        ([@GP_Sloc:drvr.adb:173:7] [#"drvr.adb" 173 0 0] ());
                        ([@GP_Sloc:drvr.adb:173:7]
                         [#"drvr.adb" 173 0 0]
                         (([#"drvr.adb" 173 0 0] (val _f : unit in
                                                  _f));
                          (Ada___ada__text_io__put__4___axiom.put
                             (let temp___328 =
                                Temp___String_Literal_327.temp___String_Literal_327
                                  () in
                              ((Standard__string.of_array temp___328)
                                 (1 : int))
                                (35 : int)))));
                        ([@GP_Sloc:drvr.adb:173:51] [#"drvr.adb" 173 0 0] ());
                        ([@GP_Sloc:drvr.adb:173:51]
                         [#"drvr.adb" 173 0 0]
                         (([#"drvr.adb" 173 0 0] (val _f : unit in
                                                  _f));
                          (Ada___ada__text_io__new_line__2___axiom.new_line
                             (1 : int))));
                        ([@GP_Sloc:drvr.adb:174:7] [#"drvr.adb" 174 0 0] ());
                        ([@GP_Sloc:drvr.adb:174:7]
                         [#"drvr.adb" 174 0 0]
                         (([#"drvr.adb" 174 0 0] (val _f : unit in
                                                  _f));
                          (Ada___ada__text_io__put__4___axiom.put
                             (let temp___330 =
                                Temp___String_Literal_329.temp___String_Literal_329
                                  () in
                              ((Standard__string.of_array temp___330)
                                 (1 : int))
                                (20 : int)))));
                        ([@GP_Sloc:drvr.adb:174:36] [#"drvr.adb" 174 0 0] ());
                        ([@GP_Sloc:drvr.adb:174:36]
                         [#"drvr.adb" 174 0 0]
                         (([#"drvr.adb" 174 0 0] (val _f : unit in
                                                  _f));
                          (Ada___ada__text_io__new_line__2___axiom.new_line
                             (1 : int))));
                        ([@GP_Sloc:drvr.adb:177:7] [#"drvr.adb" 177 0 0] ());
                        ([@GP_Sloc:drvr.adb:177:7]
                         [#"drvr.adb" 177 0 0]
                         (([#"drvr.adb" 177 0 0] (val _f : unit in
                                                  _f));
                          (Ada___ada__text_io__put__4___axiom.put
                             (let temp___332 =
                                Temp___String_Literal_331.temp___String_Literal_331
                                  () in
                              ((Standard__string.of_array temp___332)
                                 (1 : int))
                                (19 : int)))));
                        ([@GP_Sloc:drvr.adb:178:30] [#"drvr.adb" 178 0 0] ());
                        ([@GP_Sloc:drvr.adb:178:7] [#"drvr.adb" 178 0 0] ());
                        ([@GP_Sloc:drvr.adb:178:7]
                         [#"drvr.adb" 178 0 0]
                         (let temp___compl_333 =
                            Drvr__choice.choice.int__content in
                          ([#"drvr.adb" 178 0 0] (val _f : unit in
                                                  _f));
                          (((Drvr__fetch_safe_input___axiom.fetch_safe_input
                               (1 : int))
                              (4 : int))
                             Drvr__choice.choice)));
                        ([@GP_Sloc:drvr.adb:181:12] [#"drvr.adb" 181 0 0] ());
                        ([@GP_Sloc:drvr.adb:181:7]
                         [#"drvr.adb" 181 0 0]
                         (if (([#"drvr.adb" 182 0 0]
                               [#"drvr.adb" 182 0 0]
                               (([@branch_id=1149] Main.spark__branch).bool__content <-
                                  ((Drvr__choice.choice.int__content)
                                     = (1 : int))));
                              (([@branch_id=1149] Main.spark__branch).bool__content)) then
                            (([@GP_Sloc:drvr.adb:183:13]
                              [#"drvr.adb" 183 0 0] ());
                             ([@GP_Sloc:drvr.adb:183:13]
                              [#"drvr.adb" 183 0 0]
                              (([#"drvr.adb" 183 0 0] (val _f : unit in
                                                       _f));
                               (Ada___ada__text_io__put__4___axiom.put
                                  (let temp___335 =
                                     Temp___String_Literal_334.temp___String_Literal_334
                                       () in
                                   ((Standard__string.of_array temp___335)
                                      (1 : int))
                                     (29 : int)))));
                             ([@GP_Sloc:drvr.adb:184:33]
                              [#"drvr.adb" 184 0 0] ());
                             ([@GP_Sloc:drvr.adb:184:38]
                              [#"drvr.adb" 184 0 0] ());
                             ([@GP_Sloc:drvr.adb:184:13]
                              [#"drvr.adb" 184 0 0] ());
                             ([@GP_Sloc:drvr.adb:184:13]
                              [#"drvr.adb" 184 0 0]
                              (let temp___compl_336 =
                                 Drvr__current_array_size.current_array_size.int__content in
                               ([#"drvr.adb" 184 0 0] (val _f : unit in
                                                       _f));
                               (((Drvr__fetch_safe_input___axiom.fetch_safe_input
                                    (1 : int))
                                   (Drvr__max.max.int__content))
                                  Drvr__current_array_size.current_array_size)));
                             ([@GP_Sloc:drvr.adb:185:25]
                              [#"drvr.adb" 185 0 0] ());
                             ([@GP_Sloc:drvr.adb:185:28]
                              [#"drvr.adb" 185 0 0] ());
                             ([@GP_Sloc:drvr.adb:185:13]
                              [#"drvr.adb" 185 0 0] ());
                             ([@GP_Sloc:drvr.adb:185:13]
                              [#"drvr.adb" 185 0 0]
                              [#"drvr.adb" 185 0 0]
                              ((let drvr__L_5__C55b__assume =
                                  Drvr__a.a.Array__Int__Standard__integer.map__content in
                                [#"drvr.adb" 185 0 0]
                                assume {
                                  [#"drvr.adb" 185 0 0]
                                  (drvr__L_5__C55b__assume
                                     = Drvr__L_5__C55b.c55b) });
                               ([#"drvr.adb" 185 0 0]
                                assume {
                                  [#"drvr.adb" 185 0 0]
                                  (((((Drvr__TaS___axiom.dynamic_invariant
                                         Drvr__L_5__C55b.c55b)
                                        True)
                                       False)
                                      True)
                                     True) })));
                             ([@GP_Sloc:drvr.adb:185:13]
                              [#"drvr.adb" 185 0 0]
                              [#"drvr.adb" 185 0 0]
                              [#"drvr.adb" 185 0 0]
                              (begin
                                 ensures { true }
                                 let _ =
                                   let _ =
                                     Drvr__a.a.Array__Int__Standard__integer.map__content in
                                   () in
                                 ()
                               end));
                             ([@GP_Sloc:drvr.adb:185:13]
                              [#"drvr.adb" 185 0 0]
                              [#"drvr.adb" 185 0 0]
                              ((let drvr__L_5__C56b__assume =
                                  Drvr__max.max.int__content in
                                [#"drvr.adb" 185 0 0]
                                assume {
                                  [#"drvr.adb" 185 0 0]
                                  (drvr__L_5__C56b__assume
                                     = Drvr__L_5__C56b.c56b) });
                               ([#"drvr.adb" 185 0 0]
                                assume {
                                  [#"drvr.adb" 185 0 0]
                                  (((((Standard__integer___axiom.dynamic_invariant
                                         Drvr__L_5__C56b.c56b)
                                        True)
                                       False)
                                      True)
                                     True) })));
                             ([@GP_Sloc:drvr.adb:185:13]
                              [#"drvr.adb" 185 0 0]
                              (([#"drvr.adb" 152 0 0] ());
                               ([@GP_Sloc:drvr.adb:151:10:inlined:drvr.adb:185:13]
                                [#"drvr.adb" 151 0 0] ());
                               ([@GP_Sloc:drvr.adb:151:10:inlined:drvr.adb:185:13]
                                [#"drvr.adb" 151 0 0]
                                (let temp___compl_337 =
                                   Drvr__rand_file.rand_file.Ada___ada__text_io__file_type.file_type__content in
                                 ([#"drvr.adb" 151 0 0] (val _f : unit in
                                                         _f));
                                 ([#"drvr.adb" 151 0 0]
                                  [@GP_Reason:VC_PRECONDITION]
                                  [@GP_Shape:L_5_loop__case__B57b_declblk__call_open]
                                  [@vc:annotation]
                                  [@comment:         open(rand_file, In_File, ".\\src\\random10k.txt");-- opens a 10,000 element data file in the src directory          ^ drvr.adb:151:10:inlined:drvr.adb:185:13:VC_PRECONDITION]
                                  [@GP_Sloc:drvr.adb:151:10:inlined:drvr.adb:185:13]
                                  [@GP_Id:6]
                                  ((((Ada___ada__text_io__open___axiom.open
                                        Drvr__rand_file.rand_file)
                                       (0 : int))
                                      (let temp___339 =
                                         Temp___String_Literal_338.temp___String_Literal_338
                                           () in
                                       ((Standard__string.of_array temp___339)
                                          (1 : int))
                                         (19 : int)))
                                     (let temp___341 =
                                        Temp___String_Literal_340.temp___String_Literal_340
                                          () in
                                      ((Standard__string.of_array temp___341)
                                         (1 : int))
                                        (0 : int))))));
                               ([@GP_Sloc:drvr.adb:152:27:inlined:drvr.adb:185:13]
                                [#"drvr.adb" 152 0 0]
                                (let temp___342 = 1 : int in
                                 let temp___343 = Drvr__L_5__C56b.c56b in
                                 ([#"drvr.adb" 152 0 0]
                                  (Drvr__L_5__B57b__L_4__i.i.int__content <-
                                     temp___342));
                                 ([@GNAT-comment:Translation of an Ada loop from drvr.adb:152 instantiated at drvr.adb:185]
                                  ());
                                 (if ((Boolean.andb
                                         (temp___342
                                            <= (Drvr__L_5__B57b__L_4__i.i.int__content)))
                                        ((Drvr__L_5__B57b__L_4__i.i.int__content)
                                           <= temp___343)) then
                                    ([#"drvr.adb" 152 0 0]
                                     (try
                                        let temp___loop_entry_345 =
                                          Drvr__a.a.Array__Int__Standard__integer.map__content in
                                        ([@GNAT-comment:While loop translating the Ada loop from drvr.adb:152 instantiated at drvr.adb:185]
                                         ());
                                        ([#"drvr.adb" 152 0 0]
                                         [#"drvr.adb" 152 0 0]
                                         (([@GNAT-comment:Check for absence of RTE in the loop invariant and variant]
                                           ());
                                          while True do
                                            ([@GNAT-comment:gnat_ast_to_ptree: code after the loop invariant]
                                             (([@GNAT-comment:Assume implicit invariants from the loop drvr.adb:152 instantiated at drvr.adb:185]
                                               ());
                                              ([#"drvr.adb" 152 0 0]
                                               assume {
                                                 [#"drvr.adb" 152 0 0]
                                                 ((Boolean.andb
                                                     ((true /\
                                                         (((((Drvr__TaS___axiom.dynamic_invariant
                                                                (Drvr__a.a.
                                                                   Array__Int__Standard__integer.map__content))
                                                               True)
                                                              True)
                                                             True)
                                                            True)) /\
                                                        (true /\
                                                           (forall temp___346 : int.
                                                              if ((Drvr__TTaSP1.first
                                                                    <= temp___346) /\
                                                                    (temp___346
                                                                    <= Drvr__TTaSP1.last)) then
                                                                (if ((temp___343
                                                                    < temp___346) \/
                                                                    ((temp___346
                                                                    < temp___342) \/
                                                                    ((Drvr__L_5__B57b__L_4__i.i.int__content)
                                                                    <= temp___346))) then
                                                                   (((Array__Int__Standard__integer.get
                                                                    (Drvr__a.a.
                                                                    Array__Int__Standard__integer.map__content))
                                                                    temp___346)
                                                                    = ((Array__Int__Standard__integer.get
                                                                    temp___loop_entry_345)
                                                                    temp___346))
                                                                 else true)
                                                              else true))))
                                                    (((1 : int)
                                                        <= (Drvr__L_5__B57b__L_4__i.i.int__content)) /\
                                                       ((Drvr__L_5__B57b__L_4__i.i.int__content)
                                                          <= Drvr__L_5__C56b.c56b))) });
                                              ([@GNAT-comment:Continuation of loop after loop invariant and variant]
                                               ());
                                              ([@GP_Sloc:drvr.adb:153:13:inlined:drvr.adb:185:13]
                                               [#"drvr.adb" 153 0 0] ());
                                              ([@GP_Sloc:drvr.adb:153:13:inlined:drvr.adb:185:13]
                                               [#"drvr.adb" 153 0 0]
                                               (let temp___compl_344 =
                                                  Standard__integer__rep.to_rep
                                                    ((Array__Int__Standard__integer.get
                                                        (Drvr__a.a.Array__Int__Standard__integer.map__content))
                                                       (([#"drvr.adb" 153 0 0]
                                                         assert {
                                                           [#"drvr.adb" 153 0 0]
                                                           [#"drvr.adb" 153 0 0]
                                                           [@GP_Shape:L_5_loop__case__B57b_declblk__L_4_while__call_get__ixdcomp]
                                                           [@vc:annotation]
                                                           [@comment:            get(rand_file,A(i)); -- reads data from a text file                             ^ drvr.adb:153:29:inlined:drvr.adb:185:13:VC_INDEX_CHECK]
                                                           [@GP_Reason:VC_INDEX_CHECK]
                                                           [@GP_Sloc:drvr.adb:153:29:inlined:drvr.adb:185:13]
                                                           [@GP_Id:7]
                                                           ((Drvr__TTaSP1.first
                                                               <= (Drvr__L_5__B57b__L_4__i.i.int__content)) /\
                                                              ((Drvr__L_5__B57b__L_4__i.i.int__content)
                                                                 <= Drvr__TTaSP1.last)) });
                                                        (Drvr__L_5__B57b__L_4__i.i.int__content))) in
                                                let item =
                                                  { int__content =
                                                      temp___compl_344 } in
                                                (val _f : unit in
                                                 _f);
                                                ([#"drvr.adb" 153 0 0]
                                                 [@GP_Reason:VC_PRECONDITION]
                                                 [@GP_Sloc:drvr.adb:153:13:inlined:drvr.adb:185:13]
                                                 [@vc:annotation]
                                                 [@comment:            get(rand_file,A(i)); -- reads data from a text file             ^ drvr.adb:153:13:inlined:drvr.adb:185:13:VC_PRECONDITION]
                                                 [@GP_Shape:L_5_loop__case__B57b_declblk__L_4_while__call_get]
                                                 [@GP_Id:9]
                                                 (((Ada___ada__integer_text_io__get___axiom.get
                                                      (Drvr__rand_file.rand_file.
                                                         Ada___ada__text_io__file_type.file_type__content))
                                                     item)
                                                    (0 : int)));
                                                (Drvr__a.a.Array__Int__Standard__integer.map__content <-
                                                   (((Array__Int__Standard__integer.set
                                                        (Drvr__a.a.Array__Int__Standard__integer.map__content))
                                                       (assert {
                                                          [#"drvr.adb" 153 0 0]
                                                          [@GP_Shape:L_5_loop__case__B57b_declblk__L_4_while__call_get__ixdcomp]
                                                          [@vc:annotation]
                                                          [@comment:            get(rand_file,A(i)); -- reads data from a text file                             ^ drvr.adb:153:29:inlined:drvr.adb:185:13:VC_INDEX_CHECK]
                                                          [@GP_Reason:VC_INDEX_CHECK]
                                                          [@GP_Sloc:drvr.adb:153:29:inlined:drvr.adb:185:13]
                                                          [@GP_Id:8]
                                                          ((Drvr__TTaSP1.first
                                                              <= (Drvr__L_5__B57b__L_4__i.i.int__content)) /\
                                                             ((Drvr__L_5__B57b__L_4__i.i.int__content)
                                                                <= Drvr__TTaSP1.last)) };
                                                        (Drvr__L_5__B57b__L_4__i.i.int__content)))
                                                      (Standard__integer__rep.of_rep
                                                         (item.int__content))))));
                                              ([@GNAT-comment:Check for the exit condition and loop statements appearing before the loop invariant of loop drvr.adb:152 instantiated at drvr.adb:185]
                                               ());
                                              (if ((Drvr__L_5__B57b__L_4__i.i.int__content)
                                                     = temp___343) then
                                                 (raise Drvr__L_5__B57b__L_4.L_4)
                                               else ());
                                              ([#"drvr.adb" 152 0 0]
                                               [#"drvr.adb" 152 0 0]
                                               (Drvr__L_5__B57b__L_4__i.i.int__content <-
                                                  ((Drvr__L_5__B57b__L_4__i.i.int__content)
                                                     + (1 : int))))));
                                            ([@GNAT-comment:gnat_ast_to_ptree: code before the loop invariant]
                                             [@GNAT-comment:Check for absence of RTE in the loop invariant and variant]
                                             ());
                                            ([@GNAT-comment:gnat_ast_to_ptree: code checking the variants]
                                             ())
                                          done))
                                      with Drvr__L_5__B57b__L_4.L_4 -> ()
                                      end))
                                  else ())));
                               ([@GP_Sloc:drvr.adb:155:10:inlined:drvr.adb:185:13]
                                [#"drvr.adb" 155 0 0] ());
                               ([@GP_Sloc:drvr.adb:155:10:inlined:drvr.adb:185:13]
                                [#"drvr.adb" 155 0 0]
                                (let temp___compl_347 =
                                   Drvr__rand_file.rand_file.Ada___ada__text_io__file_type.file_type__content in
                                 ([#"drvr.adb" 155 0 0] (val _f : unit in
                                                         _f));
                                 ([#"drvr.adb" 155 0 0]
                                  [@GP_Id:10]
                                  [@GP_Reason:VC_PRECONDITION]
                                  [@GP_Sloc:drvr.adb:155:10:inlined:drvr.adb:185:13]
                                  [@GP_Shape:L_5_loop__case__B57b_declblk__call_close]
                                  [@comment:         close(rand_file); -- close the file (often forgotten)          ^ drvr.adb:155:10:inlined:drvr.adb:185:13:VC_PRECONDITION]
                                  [@vc:annotation]
                                  (Ada___ada__text_io__close___axiom.close
                                     Drvr__rand_file.rand_file))))));
                             ([@GP_Sloc:drvr.adb:186:13]
                              [#"drvr.adb" 186 0 0] ());
                             ([@GP_Sloc:drvr.adb:186:13]
                              [#"drvr.adb" 186 0 0]
                              (([#"drvr.adb" 186 0 0] (val _f : unit in
                                                       _f));
                               (Ada___ada__text_io__put__4___axiom.put
                                  (let temp___350 =
                                     (Standard_String__Img.to_string
                                        (Standard__integer.attr__ATTRIBUTE_IMAGE
                                           (Drvr__current_array_size.current_array_size.int__content)))
                                       (12 : int) in
                                   let temp___349 =
                                     Temp___String_Literal_348.temp___String_Literal_348
                                       () in
                                   ((Standard__string.of_array
                                       ((((((Array__Int__Standard__character__Concat.concat
                                               temp___349)
                                              (1 : int))
                                             (24 : int))
                                            (Standard__string.to_array
                                               temp___350))
                                           (Standard__string.first temp___350))
                                          (Standard__string.last temp___350)))
                                      (1 : int))
                                     ([#"drvr.adb" 186 0 0]
                                      [@GP_Id:11]
                                      [@GP_Shape:L_5_loop__case__call_put__concat]
                                      [@vc:annotation]
                                      [@GP_Sloc:drvr.adb:186:44]
                                      [@GP_Reason:VC_RANGE_CHECK]
                                      [@comment:            Put("The size of the Array is" & Integer'Image(Current_array_size)); New_Line;                                            ^ drvr.adb:186:44:VC_RANGE_CHECK]
                                      (Standard__positive.range_check_
                                         (((1 : int)
                                             + (((Integer.length (1 : int))
                                                   (24 : int))
                                                  + ((Integer.length
                                                        (Standard__string.first
                                                           temp___350))
                                                       (Standard__string.last
                                                          temp___350))))
                                            - (1 : int))))))));
                             ([@GP_Sloc:drvr.adb:186:82]
                              [#"drvr.adb" 186 0 0] ());
                             ([@GP_Sloc:drvr.adb:186:82]
                              [#"drvr.adb" 186 0 0]
                              (([#"drvr.adb" 186 0 0] (val _f : unit in
                                                       _f));
                               (Ada___ada__text_io__new_line__2___axiom.new_line
                                  (1 : int)))))
                          else
                            (if (([#"drvr.adb" 187 0 0]
                                  [#"drvr.adb" 187 0 0]
                                  (([@branch_id=1173] Main.spark__branch).bool__content <-
                                     ((Drvr__choice.choice.int__content)
                                        = (2 : int))));
                                 (([@branch_id=1173] Main.spark__branch).bool__content)) then
                               (([@GP_Sloc:drvr.adb:188:13]
                                 [#"drvr.adb" 188 0 0] ());
                                ([@GP_Sloc:drvr.adb:188:13]
                                 [#"drvr.adb" 188 0 0]
                                 (([#"drvr.adb" 188 0 0]
                                   (val _f : unit in
                                    _f));
                                  (Ada___ada__text_io__put__4___axiom.put
                                     (let temp___352 =
                                        Temp___String_Literal_351.temp___String_Literal_351
                                          () in
                                      ((Standard__string.of_array temp___352)
                                         (1 : int))
                                        (35 : int)))));
                                ([@GP_Sloc:drvr.adb:189:33]
                                 [#"drvr.adb" 189 0 0] ());
                                ([@GP_Sloc:drvr.adb:189:59]
                                 [#"drvr.adb" 189 0 0] ());
                                ([@GP_Sloc:drvr.adb:189:13]
                                 [#"drvr.adb" 189 0 0] ());
                                ([@GP_Sloc:drvr.adb:189:13]
                                 [#"drvr.adb" 189 0 0]
                                 (let temp___compl_353 =
                                    Sorter__count.count.int__content in
                                  ([#"drvr.adb" 189 0 0]
                                   (val _f : unit in
                                    _f));
                                  (((Drvr__fetch_safe_input___axiom.fetch_safe_input
                                       (0 : int))
                                      (Drvr__current_array_size.current_array_size.int__content))
                                     Sorter__count.count)));
                                ([@GP_Sloc:drvr.adb:190:13]
                                 [#"drvr.adb" 190 0 0] ());
                                ([@GP_Sloc:drvr.adb:190:13]
                                 [#"drvr.adb" 190 0 0]
                                 (([#"drvr.adb" 190 0 0]
                                   (val _f : unit in
                                    _f));
                                  (Ada___ada__text_io__put__4___axiom.put
                                     (let temp___364 =
                                        Temp___String_Literal_354.temp___String_Literal_354
                                          () in
                                      let temp___363 =
                                        let temp___362 =
                                          (Standard_String__Img.to_string
                                             (Standard__integer.attr__ATTRIBUTE_IMAGE
                                                (Sorter__count.count.int__content)))
                                            (12 : int) in
                                        let temp___361 =
                                          let temp___360 =
                                            Temp___String_Literal_355.temp___String_Literal_355
                                              () in
                                          let temp___359 =
                                            let temp___358 =
                                              (Standard_String__Img.to_string
                                                 (Standard__integer.attr__ATTRIBUTE_IMAGE
                                                    (Drvr__current_array_size.current_array_size.int__content)))
                                                (12 : int) in
                                            let temp___357 =
                                              Temp___String_Literal_356.temp___String_Literal_356
                                                () in
                                            ((Standard__string.of_array
                                                ((((((Array__Int__Standard__character__Concat.concat
                                                        temp___357)
                                                       (1 : int))
                                                      (24 : int))
                                                     (Standard__string.to_array
                                                        temp___358))
                                                    (Standard__string.first
                                                       temp___358))
                                                   (Standard__string.last
                                                      temp___358)))
                                               (1 : int))
                                              ([#"drvr.adb" 190 0 0]
                                               [@GP_Id:12]
                                               [@GP_Sloc:drvr.adb:190:44]
                                               [@GP_Shape:L_5_loop__case__call_put__concat__concat__concat__concat]
                                               [@vc:annotation]
                                               [@GP_Reason:VC_RANGE_CHECK]
                                               [@comment:            Put("The size of the Array is" & Integer'Image(Current_array_size) & " of which" & Integer'Image(Sorter.Count) & " are sorted."); New_Line;                                            ^ drvr.adb:190:44:VC_RANGE_CHECK]
                                               (Standard__positive.range_check_
                                                  (((1 : int)
                                                      + (((Integer.length
                                                             (1 : int))
                                                            (24 : int))
                                                           + ((Integer.length
                                                                 (Standard__string.first
                                                                    temp___358))
                                                                (Standard__string.last
                                                                   temp___358))))
                                                     - (1 : int)))) in
                                          if ((Standard__string.length
                                                 temp___359)
                                                = (0 : int)) then
                                            (((Standard__string.of_array
                                                 temp___360)
                                                (1 : int))
                                               (9 : int))
                                          else
                                            (((Standard__string.of_array
                                                 ((((((Array__Int__Standard__character__Concat.concat
                                                         (Standard__string.to_array
                                                            temp___359))
                                                        (Standard__string.first
                                                           temp___359))
                                                       (Standard__string.last
                                                          temp___359))
                                                      temp___360)
                                                     (1 : int))
                                                    (9 : int)))
                                                (Standard__string.first
                                                   temp___359))
                                               ([#"drvr.adb" 190 0 0]
                                                [@GP_Id:13]
                                                [@GP_Shape:L_5_loop__case__call_put__concat__concat__concat]
                                                [@vc:annotation]
                                                [@GP_Reason:VC_RANGE_CHECK]
                                                [@comment:            Put("The size of the Array is" & Integer'Image(Current_array_size) & " of which" & Integer'Image(Sorter.Count) & " are sorted."); New_Line;                                                                                ^ drvr.adb:190:80:VC_RANGE_CHECK]
                                                [@GP_Sloc:drvr.adb:190:80]
                                                (Standard__positive.range_check_
                                                   (((Standard__string.first
                                                        temp___359)
                                                       + (((Integer.length
                                                              (Standard__string.first
                                                                 temp___359))
                                                             (Standard__string.last
                                                                temp___359))
                                                            + ((Integer.length
                                                                  (1 : int))
                                                                 (9 : int))))
                                                      - (1 : int))))) in
                                        if ((Standard__string.length
                                               temp___361)
                                              = (0 : int)) then
                                          (((Standard__string.of_array
                                               (Standard__string.to_array
                                                  temp___362))
                                              (Standard__string.first
                                                 temp___362))
                                             (Standard__string.last
                                                temp___362))
                                        else
                                          (((Standard__string.of_array
                                               ((((((Array__Int__Standard__character__Concat.concat
                                                       (Standard__string.to_array
                                                          temp___361))
                                                      (Standard__string.first
                                                         temp___361))
                                                     (Standard__string.last
                                                        temp___361))
                                                    (Standard__string.to_array
                                                       temp___362))
                                                   (Standard__string.first
                                                      temp___362))
                                                  (Standard__string.last
                                                     temp___362)))
                                              (Standard__string.first
                                                 temp___361))
                                             ([#"drvr.adb" 190 0 0]
                                              [@GP_Shape:L_5_loop__case__call_put__concat__concat]
                                              [@GP_Id:14]
                                              [@comment:            Put("The size of the Array is" & Integer'Image(Current_array_size) & " of which" & Integer'Image(Sorter.Count) & " are sorted."); New_Line;                                                                                              ^ drvr.adb:190:94:VC_RANGE_CHECK]
                                              [@vc:annotation]
                                              [@GP_Reason:VC_RANGE_CHECK]
                                              [@GP_Sloc:drvr.adb:190:94]
                                              (Standard__positive.range_check_
                                                 (((Standard__string.first
                                                      temp___361)
                                                     + (((Integer.length
                                                            (Standard__string.first
                                                               temp___361))
                                                           (Standard__string.last
                                                              temp___361))
                                                          + ((Integer.length
                                                                (Standard__string.first
                                                                   temp___362))
                                                               (Standard__string.last
                                                                  temp___362))))
                                                    - (1 : int))))) in
                                      if ((Standard__string.length temp___363)
                                            = (0 : int)) then
                                        (((Standard__string.of_array
                                             temp___364)
                                            (1 : int))
                                           (12 : int))
                                      else
                                        (((Standard__string.of_array
                                             ((((((Array__Int__Standard__character__Concat.concat
                                                     (Standard__string.to_array
                                                        temp___363))
                                                    (Standard__string.first
                                                       temp___363))
                                                   (Standard__string.last
                                                      temp___363))
                                                  temp___364)
                                                 (1 : int))
                                                (12 : int)))
                                            (Standard__string.first
                                               temp___363))
                                           ([#"drvr.adb" 190 0 0]
                                            [@GP_Id:15]
                                            [@GP_Shape:L_5_loop__case__call_put__concat]
                                            [@vc:annotation]
                                            [@GP_Sloc:drvr.adb:190:124]
                                            [@GP_Reason:VC_RANGE_CHECK]
                                            [@comment:            Put("The size of the Array is" & Integer'Image(Current_array_size) & " of which" & Integer'Image(Sorter.Count) & " are sorted."); New_Line;                                                                                                                            ^ drvr.adb:190:124:VC_RANGE_CHECK]
                                            (Standard__positive.range_check_
                                               (((Standard__string.first
                                                    temp___363)
                                                   + (((Integer.length
                                                          (Standard__string.first
                                                             temp___363))
                                                         (Standard__string.last
                                                            temp___363))
                                                        + ((Integer.length
                                                              (1 : int))
                                                             (12 : int))))
                                                  - (1 : int)))))))));
                                ([@GP_Sloc:drvr.adb:190:143]
                                 [#"drvr.adb" 190 0 0] ());
                                ([@GP_Sloc:drvr.adb:190:143]
                                 [#"drvr.adb" 190 0 0]
                                 (([#"drvr.adb" 190 0 0]
                                   (val _f : unit in
                                    _f));
                                  (Ada___ada__text_io__new_line__2___axiom.new_line
                                     (1 : int))));
                                ([@GP_Sloc:drvr.adb:191:18]
                                 [#"drvr.adb" 191 0 0] ());
                                ([@GP_Sloc:drvr.adb:191:27]
                                 [#"drvr.adb" 191 0 0] ());
                                ([@GP_Sloc:drvr.adb:191:13]
                                 [#"drvr.adb" 191 0 0] ());
                                ([@GP_Sloc:drvr.adb:191:13]
                                 [#"drvr.adb" 191 0 0]
                                 (let temp___compl_366 =
                                    let temp___365 =
                                      Drvr__a.a.Array__Int__Standard__integer.map__content in
                                    ((Sorter__array_type.of_array temp___365)
                                       Drvr__TTaSP1.first)
                                      Drvr__TTaSP1.last in
                                  [#"drvr.adb" 191 0 0]
                                  (let a =
                                     { Array__Int__Standard__integer.map__content =
                                         (Sorter__array_type.to_array
                                            temp___compl_366) } in
                                   ([#"drvr.adb" 191 0 0]
                                    (val _f : unit in
                                     _f));
                                   ((((Sorter__sort___axiom.sort a)
                                        (Standard__integer__rep.of_rep
                                           (Sorter__array_type.first
                                              temp___compl_366)))
                                       (Standard__integer__rep.of_rep
                                          (Sorter__array_type.last
                                             temp___compl_366)))
                                      (Sorter__count.count.int__content));
                                   ([#"drvr.adb" 191 0 0]
                                    (Drvr__a.a.Array__Int__Standard__integer.map__content <-
                                       (let temp___367 =
                                          ((Sorter__array_type.of_array
                                              (a.Array__Int__Standard__integer.map__content))
                                             (Sorter__array_type.first
                                                temp___compl_366))
                                            (Sorter__array_type.last
                                               temp___compl_366) in
                                        let temp___368 =
                                          ((Array__Int__Standard__integer.slide
                                              (Sorter__array_type.to_array
                                                 temp___367))
                                             (Sorter__array_type.first
                                                temp___367))
                                            Drvr__TTaSP1.first in
                                        temp___368)))))))
                             else
                               (if (([#"drvr.adb" 192 0 0]
                                     [#"drvr.adb" 192 0 0]
                                     (([@branch_id=1212] Main.spark__branch).bool__content <-
                                        ((Drvr__choice.choice.int__content)
                                           = (3 : int))));
                                    (([@branch_id=1212] Main.spark__branch).bool__content)) then
                                  (([@GP_Sloc:drvr.adb:193:13]
                                    [#"drvr.adb" 193 0 0] ());
                                   ([@GP_Sloc:drvr.adb:193:13]
                                    [#"drvr.adb" 193 0 0]
                                    (([#"drvr.adb" 193 0 0]
                                      (val _f : unit in
                                       _f));
                                     (Ada___ada__text_io__put__4___axiom.put
                                        (let temp___370 =
                                           Temp___String_Literal_369.temp___String_Literal_369
                                             () in
                                         ((Standard__string.of_array
                                             temp___370)
                                            (1 : int))
                                           (35 : int)))));
                                   ([@GP_Sloc:drvr.adb:194:33]
                                    [#"drvr.adb" 194 0 0] ());
                                   ([@GP_Sloc:drvr.adb:194:59]
                                    [#"drvr.adb" 194 0 0] ());
                                   ([@GP_Sloc:drvr.adb:194:13]
                                    [#"drvr.adb" 194 0 0] ());
                                   ([@GP_Sloc:drvr.adb:194:13]
                                    [#"drvr.adb" 194 0 0]
                                    (let temp___compl_371 =
                                       Sorter__count.count.int__content in
                                     ([#"drvr.adb" 194 0 0]
                                      (val _f : unit in
                                       _f));
                                     (((Drvr__fetch_safe_input___axiom.fetch_safe_input
                                          (1 : int))
                                         (Drvr__current_array_size.current_array_size.int__content))
                                        Sorter__count.count)));
                                   ([@GP_Sloc:drvr.adb:195:13]
                                    [#"drvr.adb" 195 0 0] ());
                                   ([@GP_Sloc:drvr.adb:195:13]
                                    [#"drvr.adb" 195 0 0]
                                    (([#"drvr.adb" 195 0 0]
                                      (val _f : unit in
                                       _f));
                                     (Ada___ada__text_io__put__4___axiom.put
                                        (let temp___382 =
                                           Temp___String_Literal_372.temp___String_Literal_372
                                             () in
                                         let temp___381 =
                                           let temp___380 =
                                             (Standard_String__Img.to_string
                                                (Standard__integer.attr__ATTRIBUTE_IMAGE
                                                   (Sorter__count.count.int__content)))
                                               (12 : int) in
                                           let temp___379 =
                                             let temp___378 =
                                               Temp___String_Literal_373.temp___String_Literal_373
                                                 () in
                                             let temp___377 =
                                               let temp___376 =
                                                 (Standard_String__Img.to_string
                                                    (Standard__integer.attr__ATTRIBUTE_IMAGE
                                                       (Drvr__current_array_size.current_array_size.int__content)))
                                                   (12 : int) in
                                               let temp___375 =
                                                 Temp___String_Literal_374.temp___String_Literal_374
                                                   () in
                                               ((Standard__string.of_array
                                                   ((((((Array__Int__Standard__character__Concat.concat
                                                           temp___375)
                                                          (1 : int))
                                                         (25 : int))
                                                        (Standard__string.to_array
                                                           temp___376))
                                                       (Standard__string.first
                                                          temp___376))
                                                      (Standard__string.last
                                                         temp___376)))
                                                  (1 : int))
                                                 ([#"drvr.adb" 195 0 0]
                                                  [@GP_Id:16]
                                                  [@GP_Sloc:drvr.adb:195:45]
                                                  [@GP_Shape:L_5_loop__case__call_put__concat__concat__concat__concat]
                                                  [@comment:            Put("The size of the Array is " & Integer'Image(Current_array_size) & " of which" & Integer'Image(Sorter.Count) & " are valid."); New_Line;                                             ^ drvr.adb:195:45:VC_RANGE_CHECK]
                                                  [@vc:annotation]
                                                  [@GP_Reason:VC_RANGE_CHECK]
                                                  (Standard__positive.range_check_
                                                     (((1 : int)
                                                         + (((Integer.length
                                                                (1 : int))
                                                               (25 : int))
                                                              + ((Integer.length
                                                                    (Standard__string.first
                                                                    temp___376))
                                                                   (Standard__string.last
                                                                    temp___376))))
                                                        - (1 : int)))) in
                                             if ((Standard__string.length
                                                    temp___377)
                                                   = (0 : int)) then
                                               (((Standard__string.of_array
                                                    temp___378)
                                                   (1 : int))
                                                  (9 : int))
                                             else
                                               (((Standard__string.of_array
                                                    ((((((Array__Int__Standard__character__Concat.concat
                                                            (Standard__string.to_array
                                                               temp___377))
                                                           (Standard__string.first
                                                              temp___377))
                                                          (Standard__string.last
                                                             temp___377))
                                                         temp___378)
                                                        (1 : int))
                                                       (9 : int)))
                                                   (Standard__string.first
                                                      temp___377))
                                                  ([#"drvr.adb" 195 0 0]
                                                   [@GP_Shape:L_5_loop__case__call_put__concat__concat__concat]
                                                   [@GP_Id:17]
                                                   [@vc:annotation]
                                                   [@comment:            Put("The size of the Array is " & Integer'Image(Current_array_size) & " of which" & Integer'Image(Sorter.Count) & " are valid."); New_Line;                                                                                 ^ drvr.adb:195:81:VC_RANGE_CHECK]
                                                   [@GP_Reason:VC_RANGE_CHECK]
                                                   [@GP_Sloc:drvr.adb:195:81]
                                                   (Standard__positive.range_check_
                                                      (((Standard__string.first
                                                           temp___377)
                                                          + (((Integer.length
                                                                 (Standard__string.first
                                                                    temp___377))
                                                                (Standard__string.last
                                                                   temp___377))
                                                               + ((Integer.length
                                                                    (1 : int))
                                                                    (9 : int))))
                                                         - (1 : int))))) in
                                           if ((Standard__string.length
                                                  temp___379)
                                                 = (0 : int)) then
                                             (((Standard__string.of_array
                                                  (Standard__string.to_array
                                                     temp___380))
                                                 (Standard__string.first
                                                    temp___380))
                                                (Standard__string.last
                                                   temp___380))
                                           else
                                             (((Standard__string.of_array
                                                  ((((((Array__Int__Standard__character__Concat.concat
                                                          (Standard__string.to_array
                                                             temp___379))
                                                         (Standard__string.first
                                                            temp___379))
                                                        (Standard__string.last
                                                           temp___379))
                                                       (Standard__string.to_array
                                                          temp___380))
                                                      (Standard__string.first
                                                         temp___380))
                                                     (Standard__string.last
                                                        temp___380)))
                                                 (Standard__string.first
                                                    temp___379))
                                                ([#"drvr.adb" 195 0 0]
                                                 [@GP_Shape:L_5_loop__case__call_put__concat__concat]
                                                 [@GP_Id:18]
                                                 [@vc:annotation]
                                                 [@GP_Reason:VC_RANGE_CHECK]
                                                 [@comment:            Put("The size of the Array is " & Integer'Image(Current_array_size) & " of which" & Integer'Image(Sorter.Count) & " are valid."); New_Line;                                                                                               ^ drvr.adb:195:95:VC_RANGE_CHECK]
                                                 [@GP_Sloc:drvr.adb:195:95]
                                                 (Standard__positive.range_check_
                                                    (((Standard__string.first
                                                         temp___379)
                                                        + (((Integer.length
                                                               (Standard__string.first
                                                                  temp___379))
                                                              (Standard__string.last
                                                                 temp___379))
                                                             + ((Integer.length
                                                                   (Standard__string.first
                                                                    temp___380))
                                                                  (Standard__string.last
                                                                    temp___380))))
                                                       - (1 : int))))) in
                                         if ((Standard__string.length
                                                temp___381)
                                               = (0 : int)) then
                                           (((Standard__string.of_array
                                                temp___382)
                                               (1 : int))
                                              (11 : int))
                                         else
                                           (((Standard__string.of_array
                                                ((((((Array__Int__Standard__character__Concat.concat
                                                        (Standard__string.to_array
                                                           temp___381))
                                                       (Standard__string.first
                                                          temp___381))
                                                      (Standard__string.last
                                                         temp___381))
                                                     temp___382)
                                                    (1 : int))
                                                   (11 : int)))
                                               (Standard__string.first
                                                  temp___381))
                                              ([#"drvr.adb" 195 0 0]
                                               [@GP_Id:19]
                                               [@GP_Shape:L_5_loop__case__call_put__concat]
                                               [@vc:annotation]
                                               [@GP_Reason:VC_RANGE_CHECK]
                                               [@GP_Sloc:drvr.adb:195:125]
                                               [@comment:            Put("The size of the Array is " & Integer'Image(Current_array_size) & " of which" & Integer'Image(Sorter.Count) & " are valid."); New_Line;                                                                                                                             ^ drvr.adb:195:125:VC_RANGE_CHECK]
                                               (Standard__positive.range_check_
                                                  (((Standard__string.first
                                                       temp___381)
                                                      + (((Integer.length
                                                             (Standard__string.first
                                                                temp___381))
                                                            (Standard__string.last
                                                               temp___381))
                                                           + ((Integer.length
                                                                 (1 : int))
                                                                (11 : int))))
                                                     - (1 : int)))))))));
                                   ([@GP_Sloc:drvr.adb:195:143]
                                    [#"drvr.adb" 195 0 0] ());
                                   ([@GP_Sloc:drvr.adb:195:143]
                                    [#"drvr.adb" 195 0 0]
                                    (([#"drvr.adb" 195 0 0]
                                      (val _f : unit in
                                       _f));
                                     (Ada___ada__text_io__new_line__2___axiom.new_line
                                        (1 : int))));
                                   ([@GP_Sloc:drvr.adb:196:23]
                                    [#"drvr.adb" 196 0 0] ());
                                   ([@GP_Sloc:drvr.adb:196:32]
                                    [#"drvr.adb" 196 0 0] ());
                                   ([@GP_Sloc:drvr.adb:196:13]
                                    [#"drvr.adb" 196 0 0] ());
                                   ([@GP_Sloc:drvr.adb:196:13]
                                    [#"drvr.adb" 196 0 0]
                                    [#"drvr.adb" 196 0 0]
                                    ((let drvr__L_5__C71b__assume =
                                        Drvr__a.a.Array__Int__Standard__integer.map__content in
                                      [#"drvr.adb" 196 0 0]
                                      assume {
                                        [#"drvr.adb" 196 0 0]
                                        (drvr__L_5__C71b__assume
                                           = Drvr__L_5__C71b.c71b) });
                                     ([#"drvr.adb" 196 0 0]
                                      assume {
                                        [#"drvr.adb" 196 0 0]
                                        (((((Drvr__TaS___axiom.dynamic_invariant
                                               Drvr__L_5__C71b.c71b)
                                              True)
                                             False)
                                            True)
                                           True) })));
                                   ([@GP_Sloc:drvr.adb:196:13]
                                    [#"drvr.adb" 196 0 0]
                                    [#"drvr.adb" 196 0 0]
                                    [#"drvr.adb" 196 0 0]
                                    (begin
                                       ensures { true }
                                       let _ =
                                         let _ =
                                           Drvr__a.a.Array__Int__Standard__integer.map__content in
                                         () in
                                       ()
                                     end));
                                   ([@GP_Sloc:drvr.adb:196:13]
                                    [#"drvr.adb" 196 0 0]
                                    [#"drvr.adb" 196 0 0]
                                    ((let drvr__L_5__C72b__assume =
                                        Sorter__count.count.int__content in
                                      [#"drvr.adb" 196 0 0]
                                      assume {
                                        [#"drvr.adb" 196 0 0]
                                        (drvr__L_5__C72b__assume
                                           = Drvr__L_5__C72b.c72b) });
                                     ([#"drvr.adb" 196 0 0]
                                      assume {
                                        [#"drvr.adb" 196 0 0]
                                        (((((Standard__integer___axiom.dynamic_invariant
                                               Drvr__L_5__C72b.c72b)
                                              True)
                                             False)
                                            True)
                                           True) })));
                                   ([@GP_Sloc:drvr.adb:196:13]
                                    [#"drvr.adb" 196 0 0] ());
                                   ([@GP_Sloc:drvr.adb:96:7:inlined:drvr.adb:196:13]
                                    [#"drvr.adb" 96 0 0] ()))
                                else
                                  (if (([#"drvr.adb" 197 0 0]
                                        [#"drvr.adb" 197 0 0]
                                        (([@branch_id=1251]
                                          Main.spark__branch).bool__content <-
                                           ((Drvr__choice.choice.int__content)
                                              = (4 : int))));
                                       (([@branch_id=1251] Main.spark__branch).bool__content)) then
                                     ([@GP_Sloc:drvr.adb:198:13]
                                      [#"drvr.adb" 198 0 0]
                                      [#"drvr.adb" 198 0 0]
                                      (raise Drvr__L_5.L_5))
                                   else
                                     (([@GP_Sloc:drvr.adb:200:13]
                                       [#"drvr.adb" 200 0 0] ());
                                      ([@GP_Sloc:drvr.adb:200:13]
                                       [#"drvr.adb" 200 0 0]
                                       (([#"drvr.adb" 200 0 0]
                                         (val _f : unit in
                                          _f));
                                        (Ada___ada__text_io__put__4___axiom.put
                                           (let temp___384 =
                                              Temp___String_Literal_383.temp___String_Literal_383
                                                () in
                                            ((Standard__string.of_array
                                                temp___384)
                                               (1 : int))
                                              (53 : int)))));
                                      ([@GP_Sloc:drvr.adb:200:75]
                                       [#"drvr.adb" 200 0 0] ());
                                      ([@GP_Sloc:drvr.adb:200:75]
                                       [#"drvr.adb" 200 0 0]
                                       (([#"drvr.adb" 200 0 0]
                                         (val _f : unit in
                                          _f));
                                        (Ada___ada__text_io__new_line__2___axiom.new_line
                                           (1 : int))))))))));
                        ([@GNAT-comment:Check for the exit condition and loop statements appearing before the loop invariant of loop drvr.adb:168]
                         ());
                        (if False then (raise Drvr__L_5.L_5)
                         else ())));
                      ([@GNAT-comment:gnat_ast_to_ptree: code before the loop invariant]
                       [@GNAT-comment:Check for absence of RTE in the loop invariant and variant]
                       ());
                      ([@GNAT-comment:gnat_ast_to_ptree: code checking the variants]
                       ())
                    done))
                with Drvr__L_5.L_5 -> ()
                end))
            else ())));
         (raise Return__exc)
       with Return__exc -> ()
       end)))
end
