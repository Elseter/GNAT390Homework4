Summary of SPARK analysis
=========================

------------------------------------------------------------------------------------------
SPARK Analysis results        Total       Flow   CodePeer   Provers   Justified   Unproved
------------------------------------------------------------------------------------------
Data Dependencies                 .          .          .         .           .          .
Flow Dependencies                 .          .          .         .           .          .
Initialization                    8          5          .         .           .          3
Non-Aliasing                      .          .          .         .           .          .
Run-time Checks                   .          .          .         .           .          .
Assertions                        .          .          .         .           .          .
Functional Contracts              .          .          .         .           .          .
LSP Verification                  .          .          .         .           .          .
Termination                       .          .          .         .           .          .
Concurrency                       .          .          .         .           .          .
------------------------------------------------------------------------------------------
Total                             8    5 (63%)          .         .           .    3 (38%)


max steps used for successful proof: 0

Analyzed 2 units
in unit drvr, 6 subprograms and packages out of 6 analyzed
  Drvr at drvr.adb:84 flow analyzed (0 errors, 1 checks and 0 warnings)
  Drvr.Fetch_Safe_Input at drvr.adb:99 flow analyzed (0 errors, 1 checks and 0 warnings)
  Drvr.Fetch_Safe_Input.Is_Digit_String at drvr.adb:105 flow analyzed (0 errors, 0 checks and 0 warnings)
  Drvr.Fetch_Safe_Input.String_To_Integer at drvr.adb:116 flow analyzed (0 errors, 0 checks and 0 warnings)
  Drvr.fetch_array at drvr.adb:148 flow analyzed (0 errors, 0 checks and 0 warnings)
  Drvr.validator at drvr.adb:94 flow analyzed (0 errors, 0 checks and 1 warnings)
in unit sorter, 7 subprograms and packages out of 7 analyzed
  Sorter at sorter.ads:5 flow analyzed (0 errors, 0 checks and 0 warnings)
  Sorter.sort at sorter.ads:18 flow analyzed (0 errors, 0 checks and 0 warnings)
  Sorter.sort_1 at sorter.ads:25 flow analyzed (0 errors, 0 checks and 0 warnings)
  Sorter.sort_2 at sorter.ads:26 flow analyzed (0 errors, 0 checks and 0 warnings)
  Sorter.sort_2.merge at sorter.adb:38 flow analyzed (0 errors, 0 checks and 0 warnings)
  Sorter.sort_2.merge_sort at sorter.adb:71 flow analyzed (0 errors, 1 checks and 0 warnings)
  Sorter.sort_3 at sorter.ads:27 flow analyzed (0 errors, 0 checks and 3 warnings)
