(* Module for axiomatizing type "integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type integer  = <range -2147483648 2147483647>
  
  function   first () requires { True } ensures  { True } returns
    int = -2147483648
  
  function   last () requires { True } ensures  { True } returns
    int = 2147483647
  
  function   in_range (x : int) requires { True } ensures  { True } returns
     = ((first <= x) /\ (x <= last))
  
  clone export ada__model.Static_Discrete with axiom . type t = integer,
    function first = first, function last = last,
    predicate in_range = in_range
  
  type integer__ref  = { mutable integer__content : integer }
  
  function   integer__ref_integer__content__projection (a : integer__ref)
    requires {  } ensures  {  } returns integer = a.integer__content
  
  meta model_projection function integer__ref_integer__content__projection
  
  meta inline:no function integer__ref_integer__content__projection
  
  function   integer__havoc (x : integer__ref) requires {  } ensures  {  }
    returns unit

end

(* Module for axiomatizing type "positive", created in Gnat2Why.Types.Translate_Type *)
module Standard__positive
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type positive  = <range 1 2147483647>
  
  function   first () requires { True } ensures  { True } returns int = 1
  
  function   last () requires { True } ensures  { True } returns
    int = 2147483647
  
  function   in_range (x : int) requires { True } ensures  { True } returns
     = ((first <= x) /\ (x <= last))
  
  clone export ada__model.Static_Discrete with axiom . type t = positive,
    function first = first, function last = last,
    predicate in_range = in_range
  
  type positive__ref  = { mutable positive__content : positive }
  
  function   positive__ref_positive__content__projection (a : positive__ref)
    requires {  } ensures  {  } returns positive = a.positive__content
  
  meta model_projection function positive__ref_positive__content__projection
  
  meta inline:no function positive__ref_positive__content__projection
  
  function   positive__havoc (x : positive__ref) requires {  } ensures  {  }
    returns unit

end

(* Module for axiomatizing type "character", created in Gnat2Why.Types.Translate_Type *)
module Standard__character
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type character  
  
  function   first () requires { True } ensures  { True } returns int = 0
  
  function   last () requires { True } ensures  { True } returns int = 255
  
  function   in_range (x : int) requires { True } ensures  { True } returns
     = ((first <= x) /\ (x <= last))
  
  clone export ada__model.Static_Discrete with axiom . type t = character,
    function first = first, function last = last,
    predicate in_range = in_range
  
  type character__ref  = { mutable character__content : character }
  
  function   character__ref_character__content__projection
    (a : character__ref) requires {  } ensures  {  } returns
    character = a.character__content
  
  meta model_projection function character__ref_character__content__projection
  
  meta inline:no function character__ref_character__content__projection
  
  function   character__havoc (x : character__ref) requires {  } ensures 
    {  } returns unit

end

(* Module defining to_rep/of_rep for type "character", created in Gnat2Why.Types.Translate_Type *)
module Standard__character__rep
  
  use        Standard__character
  use import _gnatprove_standard.Main
  use import int.Int
  
  clone export ada__model.Rep_Proj_Int with axiom . type t = Standard__character.character,
    predicate in_range = Standard__character.in_range
  
  meta model_projection function to_rep
  
  meta inline:no function to_rep

end

(* Module for axiomatizing the array theory associated to type "string", created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Standard__character
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  
  function   index_I1_one () requires { True } ensures  { True } returns
    int = 1
  
  type component_type  = --pp_transparent_type_definition NOT IMPLEMENTED
  
  clone export _gnatprove_standard.Array__1 with axiom . type I1.t = int,
    predicate I1.le = <=, predicate I1.lt = <, predicate I1.gt = >,
    function I1.add = +, function I1.sub = -, function I1.one = index_I1_one,
    type component_type = component_type
  
  function   bool_eq
    (a : map a__first : int a__last : int b : map b__first : int
    b__last : int) requires { True } ensures  { True } returns
    bool = ((if (a__first <= a__last) then
            ((b__first <= b__last) /\
               ((a__last - a__first) = (b__last - b__first)))
             else (b__first > b__last)) /\
              --pp_universal_quantif NOT IMPLEMENTED)
  
  axiom bool_eq_rev : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module defining to_rep/of_rep for type "integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer__rep
  
  use        Standard__integer
  use import _gnatprove_standard.Main
  use import int.Int
  
  function   to_rep (x : Standard__integer.integer) requires { True }
    ensures  { True } returns int = (Standard__integer.integer'int x)
  
  clone export ada__model.Rep_Proj_Int with axiom . type t = Standard__integer.integer,
    predicate in_range = Standard__integer.in_range, function to_rep = to_rep
  
  meta model_projection function to_rep
  
  meta inline:no function to_rep

end

(* Module for axiomatizing type "string", created in Gnat2Why.Types.Translate_Type *)
module Standard__string
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__integer
  use        Standard__positive
  use        Standard__character
  use        Array__Int__Standard__character
  use        Standard__integer__rep
  
  type component_type  = --pp_transparent_type_definition NOT IMPLEMENTED
  
  function   index_1_id (x : int) requires { True } ensures  { True } returns
    int = x
  
  clone export ada__model.Unconstr_Array with axiom . type map = Array__Int__Standard__character.map,
    function array_bool_eq = Array__Int__Standard__character.bool_eq,
    type index_base_type = Standard__integer.integer,
    type index_rep_type = int,
    function to_rep = Standard__integer__rep.to_rep,
    function rep_to_int = index_1_id,
    predicate in_range_base = Standard__integer.in_range,
    predicate index_dynamic_property = Standard__positive.dynamic_property,
    predicate index_rep_le = <=
  
  type string__  = --pp_transparent_type_definition NOT IMPLEMENTED
  
  meta model_projection function to_array
  
  meta inline:no function to_array
  
  meta model_projection function first
  
  meta inline:no function first
  
  meta model_projection function last
  
  meta inline:no function last
  
  type string____ref  = { mutable string____content : string__ }
  
  function   string____ref_string____content__projection (a : string____ref)
    requires {  } ensures  {  } returns string__ = a.string____content
  
  meta model_projection function string____ref_string____content__projection
  
  meta inline:no function string____ref_string____content__projection
  
  function   string____havoc (x : string____ref) requires {  } ensures  {  }
    returns unit

end

(* Module defining to_string/of_string functions, created in Gnat2Why.Types.Translate_Type *)
module Standard_String__Img
  
  use import int.Int
  use        Standard__string
  use import _gnatprove_standard.Main
  use import int.Int
  
  function   to_string (x : _gnatprove_standard.Main.__image s : int)
    requires { True } ensures  { True } returns Standard__string.string__
  
  function   from_string (x : Standard__string.string__) requires { True }
    ensures  { True } returns _gnatprove_standard.Main.__image
  
  axiom to_string__first : --pp_universal_quantif NOT IMPLEMENTED
  
  axiom to_string__length : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module giving axioms for type "integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__integer
  
  function   dynamic_invariant
    (([mlw:proxy_symbol] [introduced] temp___expr_18) : int
    ([mlw:proxy_symbol] [introduced] temp___is_init_14) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_15) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_16) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_17) : bool) requires
    { True } ensures  { True } returns
     = (if
       ((([mlw:proxy_symbol] [introduced] temp___is_init_14) = True) \/
          (Standard__integer.first <= Standard__integer.last))
       then
       (Standard__integer.dynamic_property Standard__integer.first
          Standard__integer.last ([mlw:proxy_symbol]
          [introduced] temp___expr_18))
       )
  
  function   default_initial_assumption
    (([mlw:proxy_symbol] [introduced] temp___expr_19) : int
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_20) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module for axiomatizing type "natural", created in Gnat2Why.Types.Translate_Type *)
module Standard__natural
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type natural  = <range 0 2147483647>
  
  function   first () requires { True } ensures  { True } returns int = 0
  
  function   last () requires { True } ensures  { True } returns
    int = 2147483647
  
  function   in_range (x : int) requires { True } ensures  { True } returns
     = ((first <= x) /\ (x <= last))
  
  clone export ada__model.Static_Discrete with axiom . type t = natural,
    function first = first, function last = last,
    predicate in_range = in_range
  
  type natural__ref  = { mutable natural__content : natural }
  
  function   natural__ref_natural__content__projection (a : natural__ref)
    requires {  } ensures  {  } returns natural = a.natural__content
  
  meta model_projection function natural__ref_natural__content__projection
  
  meta inline:no function natural__ref_natural__content__projection
  
  function   natural__havoc (x : natural__ref) requires {  } ensures  {  }
    returns unit

end

(* Module giving axioms for type "natural", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__natural___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__natural
  
  function   dynamic_invariant
    (([mlw:proxy_symbol] [introduced] temp___expr_46) : int
    ([mlw:proxy_symbol] [introduced] temp___is_init_42) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_43) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_44) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_45) : bool) requires
    { True } ensures  { True } returns
     = (if
       ((([mlw:proxy_symbol] [introduced] temp___is_init_42) = True) \/
          (Standard__natural.first <= Standard__natural.last))
       then
       (Standard__natural.dynamic_property Standard__natural.first
          Standard__natural.last ([mlw:proxy_symbol]
          [introduced] temp___expr_46))
       )
  
  function   default_initial_assumption
    (([mlw:proxy_symbol] [introduced] temp___expr_47) : int
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_48) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module for axiomatizing concatenation for the array theory associated to type "string", created in Why.Gen.Arrays.Declare_Concatenation_Symbols *)
module Array__Int__Standard__character__Concat
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Array__Int__Standard__character
  
  function   index_Index_one () requires { True } ensures  { True } returns
    int = 1
  
  clone export _gnatprove_standard.Array__1__Concat with axiom . type component_type = Array__Int__Standard__character.component_type,
    type map = Array__Int__Standard__character.map, type Index.t = int,
    predicate Index.le = <=, predicate Index.lt = <, predicate Index.gt = >,
    function Index.add = +, function Index.sub = -,
    function Index.one = index_Index_one,
    function get = Array__Int__Standard__character.get

end

(* Module for defining the constant "min" defined at drvr.adb:99, created in Gnat2Why.Decls.Translate_Constant *)
module Drvr__fetch_safe_input__min
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  function [model_trace:13255] [name:Min] [sloc:drvr.adb:99] min () requires
    {  } ensures  {  } returns int

end

(* Module for defining the constant "max" defined at drvr.adb:99, created in Gnat2Why.Decls.Translate_Constant *)
module Drvr__fetch_safe_input__max
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  function [name:Max] [model_trace:13256] [sloc:drvr.adb:99] max () requires
    {  } ensures  {  } returns int

end

(* Module for defining a ref holding the value of variable "input" defined at drvr.adb:99, created in Gnat2Why.Decls.Translate_Variable *)
module Drvr__fetch_safe_input__input
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val input [model_projected] [name:Input]
  [model_trace:13257] [sloc:drvr.adb:99]: int

end

(* Module for defining a ref holding the value of variable "input_string" defined at drvr.adb:100, created in Gnat2Why.Decls.Translate_Variable *)
module Drvr__fetch_safe_input__input_string
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Array__Int__Standard__character
  
  val input_string [model_trace:896] [model_projected]
  [name:Input_String] [sloc:drvr.adb:100]: Array__Int__Standard__character.map

end

(* Module for defining a ref holding the value of variable "length" defined at drvr.adb:101, created in Gnat2Why.Decls.Translate_Variable *)
module Drvr__fetch_safe_input__length
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val length [model_trace:905] [model_projected]
  [name:Length] [sloc:drvr.adb:101]: int

end

(* Module for defining a ref holding the value of variable "valid" defined at drvr.adb:102, created in Gnat2Why.Decls.Translate_Variable *)
module Drvr__fetch_safe_input__valid
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val valid [model_trace:908] [name:Valid]
  [model_projected] [sloc:drvr.adb:102]: bool

end

(* Module giving axioms for type "string", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__string___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Standard__positive
  use        Standard__string
  
  function   dynamic_invariant
    (([mlw:proxy_symbol]
    [introduced] temp___expr_103) : Standard__string.string__
    ([mlw:proxy_symbol] [introduced] temp___is_init_99) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_100) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_101) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_102) : bool) requires
    { True } ensures  { True } returns
     = (if ([mlw:proxy_symbol] [introduced] temp___skip_constant_100) then
       True  else
       (Standard__string.dynamic_property Standard__positive.first
          Standard__positive.last
          (Standard__string.first ([mlw:proxy_symbol]
             [introduced] temp___expr_103))
          (Standard__string.last ([mlw:proxy_symbol]
             [introduced] temp___expr_103))))

end

(* Module for possibly declaring a logic function for "is_digit_string" defined at drvr.adb:105, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Drvr__fetch_safe_input__is_digit_string
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Standard__string
  
  function   is_digit_string (s : Standard__string.string__ len : int)
    requires { True } ensures  { True } returns bool
  
  function   is_digit_string__function_guard
    (([mlw:proxy_symbol] [introduced] temp___result_164) : bool
    s : Standard__string.string__ len : int) requires { True } ensures 
    { True } returns bool

end

(* Module for declaring a program function (and possibly an axiom) for "is_digit_string" defined at drvr.adb:105, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Drvr__fetch_safe_input__is_digit_string___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Standard__natural___axiom
  use        Standard__string
  use        Standard__string___axiom
  use        Drvr__fetch_safe_input__is_digit_string
  
  function   is_digit_string (s : Standard__string.string__ len : int)
    requires { True } ensures 
    { ((result
          = (Drvr__fetch_safe_input__is_digit_string.is_digit_string s len))
         /\
         (Drvr__fetch_safe_input__is_digit_string.is_digit_string__function_guard
            result s len) /\ True) } returns bool
  
  axiom is_digit_string__post_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for possibly declaring a logic function for "line_length" defined at a-textio.ads:243, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada___ada__text_io__line_length__2
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        _gnatprove_standard.Main
  
  function   line_length
    (Ada___ada__text_io__file_system___file_system___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__standard_in___standard_in___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__standard_out___standard_out___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__standard_err___standard_err___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__current_in___current_in___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__current_out___current_out___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__current_err___current_err___ : _gnatprove_standard.Main.__private)
    requires { True } ensures  { True } returns int
  
  function   line_length__function_guard
    (([mlw:proxy_symbol] [introduced] temp___result_161) : int
    Ada___ada__text_io__file_system___file_system___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__standard_in___standard_in___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__standard_out___standard_out___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__standard_err___standard_err___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__current_in___current_in___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__current_out___current_out___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__current_err___current_err___ : _gnatprove_standard.Main.__private)
    requires { True } ensures  { True } returns bool

end

(* Module for possibly declaring a logic function for "page_length" defined at a-textio.ads:249, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada___ada__text_io__page_length__2
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        _gnatprove_standard.Main
  
  function   page_length
    (Ada___ada__text_io__file_system___file_system___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__standard_in___standard_in___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__standard_out___standard_out___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__standard_err___standard_err___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__current_in___current_in___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__current_out___current_out___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__current_err___current_err___ : _gnatprove_standard.Main.__private)
    requires { True } ensures  { True } returns int
  
  function   page_length__function_guard
    (([mlw:proxy_symbol] [introduced] temp___result_162) : int
    Ada___ada__text_io__file_system___file_system___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__standard_in___standard_in___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__standard_out___standard_out___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__standard_err___standard_err___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__current_in___current_in___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__current_out___current_out___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__current_err___current_err___ : _gnatprove_standard.Main.__private)
    requires { True } ensures  { True } returns bool

end

(* Module declaring the external object "ada___ada__text_io__file_system," created in Gnat2Why.Decls.Translate_External_Object *)
module Ada___ada__text_io__file_system
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val file_system  : _gnatprove_standard.Main.__private

end

(* Module declaring the external object "ada___ada__text_io__standard_in," created in Gnat2Why.Decls.Translate_External_Object *)
module Ada___ada__text_io__standard_in
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val standard_in  : _gnatprove_standard.Main.__private

end

(* Module declaring the external object "ada___ada__text_io__standard_out," created in Gnat2Why.Decls.Translate_External_Object *)
module Ada___ada__text_io__standard_out
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val standard_out  : _gnatprove_standard.Main.__private

end

(* Module declaring the external object "ada___ada__text_io__standard_err," created in Gnat2Why.Decls.Translate_External_Object *)
module Ada___ada__text_io__standard_err
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val standard_err  : _gnatprove_standard.Main.__private

end

(* Module declaring the external object "ada___ada__text_io__current_in," created in Gnat2Why.Decls.Translate_External_Object *)
module Ada___ada__text_io__current_in
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val current_in  : _gnatprove_standard.Main.__private

end

(* Module declaring the external object "ada___ada__text_io__current_out," created in Gnat2Why.Decls.Translate_External_Object *)
module Ada___ada__text_io__current_out
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val current_out  : _gnatprove_standard.Main.__private

end

(* Module declaring the external object "ada___ada__text_io__current_err," created in Gnat2Why.Decls.Translate_External_Object *)
module Ada___ada__text_io__current_err
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val current_err  : _gnatprove_standard.Main.__private

end

(* Module for declaring a program function (and possibly an axiom) for "get_line" defined at a-textio.ads:479, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada___ada__text_io__get_line__2___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        _gnatprove_standard.Main
  use        _gnatprove_standard.Integer
  use        Standard__integer
  use        Standard__natural___axiom
  use        Standard__string
  use        Standard__integer__rep
  use        Standard__string___axiom
  use        Ada___ada__text_io__line_length__2
  use        Ada___ada__text_io__page_length__2
  use        Array__Int__Standard__character
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  
  function   get_line
    (item : Array__Int__Standard__character.map__ref
    item__first : Standard__integer.integer
    item__last : Standard__integer.integer last : int__ref) requires { True }
    ensures 
    { (((([GP_Pretty_Ada:3436] (--pp_tagged NOT IMPLEMENTED
                                  = (Ada___ada__text_io__line_length__2.line_length
                                       !Ada___ada__text_io__file_system.file_system
                                       !Ada___ada__text_io__standard_in.standard_in
                                       !Ada___ada__text_io__standard_out.standard_out
                                       !Ada___ada__text_io__standard_err.standard_err
                                       !Ada___ada__text_io__current_in.current_in
                                       !Ada___ada__text_io__current_out.current_out
                                       !Ada___ada__text_io__current_err.current_err)))
           /\
           ([GP_Pretty_Ada:3442] (--pp_tagged NOT IMPLEMENTED
                                    = (Ada___ada__text_io__page_length__2.page_length
                                         !Ada___ada__text_io__file_system.file_system
                                         !Ada___ada__text_io__standard_in.standard_in
                                         !Ada___ada__text_io__standard_out.standard_out
                                         !Ada___ada__text_io__standard_err.standard_err
                                         !Ada___ada__text_io__current_in.current_in
                                         !Ada___ada__text_io__current_out.current_out
                                         !Ada___ada__text_io__current_err.current_err))))
          /\
          (if
          ((_gnatprove_standard.Integer.length
              (Standard__integer__rep.to_rep item__first)
              (Standard__integer__rep.to_rep item__last)) > 0)
          then
          ([GP_Pretty_Ada:3451] ((((Standard__integer__rep.to_rep item__first)
                                     - 1) <= !last) /\
                                   (!last
                                      <= (Standard__integer__rep.to_rep
                                            item__last))))
           else
          ([GP_Pretty_Ada:3462] (!last
                                   = ((Standard__integer__rep.to_rep
                                         item__first) - 1))))) /\
         ((Standard__string___axiom.dynamic_invariant
             (Standard__string.of_array !item
                (Standard__integer__rep.to_rep item__first)
                (Standard__integer__rep.to_rep item__last)) True True True
             True) /\
            (Standard__natural___axiom.dynamic_invariant !last True True True
               True))) } returns unit

end

(* Module for axiomatizing type "T16b" defined at drvr.adb:133, created in Gnat2Why.Types.Translate_Type *)
module Drvr__fetch_safe_input__L_3__T16b
  
  use export Standard__string
  use import _gnatprove_standard.Main
  use import int.Int
  
  type t16b  = --pp_transparent_type_definition NOT IMPLEMENTED
  
  type t16b__ref  = { mutable t16b__content : t16b }
  
  function   t16b__ref_t16b__content__projection (a : t16b__ref) requires
    {  } ensures  {  } returns t16b = a.t16b__content
  
  meta model_projection function t16b__ref_t16b__content__projection
  
  meta inline:no function t16b__ref_t16b__content__projection
  
  function   t16b__havoc (x : t16b__ref) requires {  } ensures  {  } returns
    unit

end

(* Module for defining the constant "C18b" defined at drvr.adb:133, created in Gnat2Why.Decls.Translate_Constant *)
module Drvr__fetch_safe_input__L_3__C18b
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Drvr__fetch_safe_input__L_3__T16b
  
  function  [sloc:drvr.adb:133] c18b () requires {  } ensures  {  } returns
    Drvr__fetch_safe_input__L_3__T16b.t16b

end

(* Module for defining the constant "R20b" defined at drvr.adb:133, created in Gnat2Why.Decls.Translate_Constant *)
module Drvr__fetch_safe_input__L_3__R20b
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  function  [sloc:drvr.adb:133] r20b () requires {  } ensures  {  } returns
    int

end

(* Module for defining the constant "C19b" defined at drvr.adb:133, created in Gnat2Why.Decls.Translate_Constant *)
module Drvr__fetch_safe_input__L_3__C19b
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  function  [sloc:drvr.adb:133] c19b () requires {  } ensures  {  } returns
    int

end

(* Module for defining a ref holding the value of variable "result" defined at drvr.adb:117 instantiated at drvr.adb:133, created in Gnat2Why.Decls.Translate_Variable *)
module Drvr__fetch_safe_input__L_3__B22b__result
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val result__ [model_trace:13776] [model_projected]
  [name:Result] [sloc:drvr.adb:117]: int

end

(* Module for defining a ref holding the value of variable "i" defined at drvr.adb:119 instantiated at drvr.adb:133, created in Gnat2Why.Decls.Translate_Variable *)
module Drvr__fetch_safe_input__L_3__B22b__L_2__i
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val i [model_projected] [model_trace:13817]
  [name:I] [sloc:drvr.adb:119]: int

end

(* Module for declaring a program function (and possibly an axiom) for "put_line" defined at a-textio.ads:506, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada___ada__text_io__put_line__2___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        _gnatprove_standard.Main
  use        Standard__string
  use        Ada___ada__text_io__line_length__2
  use        Ada___ada__text_io__page_length__2
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  
  function   put_line (item : Standard__string.string__) requires { True }
    ensures 
    { (([GP_Pretty_Ada:3569] (--pp_tagged NOT IMPLEMENTED
                                = (Ada___ada__text_io__line_length__2.line_length
                                     !Ada___ada__text_io__file_system.file_system
                                     !Ada___ada__text_io__standard_in.standard_in
                                     !Ada___ada__text_io__standard_out.standard_out
                                     !Ada___ada__text_io__standard_err.standard_err
                                     !Ada___ada__text_io__current_in.current_in
                                     !Ada___ada__text_io__current_out.current_out
                                     !Ada___ada__text_io__current_err.current_err)))
         /\
         ([GP_Pretty_Ada:3575] (--pp_tagged NOT IMPLEMENTED
                                  = (Ada___ada__text_io__page_length__2.page_length
                                       !Ada___ada__text_io__file_system.file_system
                                       !Ada___ada__text_io__standard_in.standard_in
                                       !Ada___ada__text_io__standard_out.standard_out
                                       !Ada___ada__text_io__standard_err.standard_err
                                       !Ada___ada__text_io__current_in.current_in
                                       !Ada___ada__text_io__current_out.current_out
                                       !Ada___ada__text_io__current_err.current_err)))) }
    returns unit

end

(* Module for axiomatizing type "TTinput_stringSP1" defined at drvr.adb:100, created in Gnat2Why.Types.Translate_Type *)
module Drvr__fetch_safe_input__TTinput_stringSP1
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type tTinput_stringSP1  = <range 1 10>
  
  function   first () requires { True } ensures  { True } returns int = 1
  
  function   last () requires { True } ensures  { True } returns int = 10
  
  function   in_range (x : int) requires { True } ensures  { True } returns
     = ((first <= x) /\ (x <= last))
  
  clone export ada__model.Static_Discrete with axiom . type t = tTinput_stringSP1,
    function first = first, function last = last,
    predicate in_range = in_range
  
  type tTinput_stringSP1__ref  = { mutable tTinput_stringSP1__content : tTinput_stringSP1 }
  
  function   tTinput_stringSP1__ref_tTinput_stringSP1__content__projection
    (a : tTinput_stringSP1__ref) requires {  } ensures  {  } returns
    tTinput_stringSP1 = a.tTinput_stringSP1__content
  
  meta model_projection function tTinput_stringSP1__ref_tTinput_stringSP1__content__projection
  
  meta inline:no function tTinput_stringSP1__ref_tTinput_stringSP1__content__projection
  
  function   tTinput_stringSP1__havoc (x : tTinput_stringSP1__ref) requires
    {  } ensures  {  } returns unit

end

(* Module giving axioms for type "Tinput_stringS" defined at drvr.adb:100, created in Gnat2Why.Types.Generate_Type_Completion *)
module Drvr__fetch_safe_input__Tinput_stringS___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   dynamic_invariant
    (([mlw:proxy_symbol]
    [introduced] temp___expr_236) : Array__Int__Standard__character.map
    ([mlw:proxy_symbol] [introduced] temp___is_init_232) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_233) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_234) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_235) : bool) requires
    { True } ensures  { True } returns  = True
  
  function   default_initial_assumption
    (([mlw:proxy_symbol]
    [introduced] temp___expr_238) : Array__Int__Standard__character.map
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_239) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module for defining the loop exit exception for the loop "L_3" defined at drvr.adb:128, created in Gnat2Why.Decls.Translate_Loop_Entity *)
module Drvr__fetch_safe_input__L_3
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  --pp_exception_declaration NOT IMPLEMENTED

end

(* Module for axiomatizing type "T14b" defined at drvr.adb:132, created in Gnat2Why.Types.Translate_Type *)
module Drvr__fetch_safe_input__L_3__T14b
  
  use export Standard__string
  use import _gnatprove_standard.Main
  use import int.Int
  
  type t14b  = --pp_transparent_type_definition NOT IMPLEMENTED
  
  type t14b__ref  = { mutable t14b__content : t14b }
  
  function   t14b__ref_t14b__content__projection (a : t14b__ref) requires
    {  } ensures  {  } returns t14b = a.t14b__content
  
  meta model_projection function t14b__ref_t14b__content__projection
  
  meta inline:no function t14b__ref_t14b__content__projection
  
  function   t14b__havoc (x : t14b__ref) requires {  } ensures  {  } returns
    unit

end

(* Module for defining the loop exit exception for the loop "L_2" defined at drvr.adb:119 instantiated at drvr.adb:133, created in Gnat2Why.Decls.Translate_Loop_Entity *)
module Drvr__fetch_safe_input__L_3__B22b__L_2
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  --pp_exception_declaration NOT IMPLEMENTED

end

(* Module for axiomatizing type "T25b" defined at drvr.adb:120 instantiated at drvr.adb:133, created in Gnat2Why.Types.Translate_Type *)
module Drvr__fetch_safe_input__L_3__B22b__L_2__T25b
  
  use export Standard__string
  use import _gnatprove_standard.Main
  use import int.Int
  
  type t25b  = --pp_transparent_type_definition NOT IMPLEMENTED
  
  type t25b__ref  = { mutable t25b__content : t25b }
  
  function   t25b__ref_t25b__content__projection (a : t25b__ref) requires
    {  } ensures  {  } returns t25b = a.t25b__content
  
  meta model_projection function t25b__ref_t25b__content__projection
  
  meta inline:no function t25b__ref_t25b__content__projection
  
  function   t25b__havoc (x : t25b__ref) requires {  } ensures  {  } returns
    unit

end

(* Module for axiomatizing type "T27b" defined at drvr.adb:121 instantiated at drvr.adb:133, created in Gnat2Why.Types.Translate_Type *)
module Drvr__fetch_safe_input__L_3__B22b__L_2__T27b
  
  use export Standard__string
  use import _gnatprove_standard.Main
  use import int.Int
  
  type t27b  = --pp_transparent_type_definition NOT IMPLEMENTED
  
  type t27b__ref  = { mutable t27b__content : t27b }
  
  function   t27b__ref_t27b__content__projection (a : t27b__ref) requires
    {  } ensures  {  } returns t27b = a.t27b__content
  
  meta model_projection function t27b__ref_t27b__content__projection
  
  meta inline:no function t27b__ref_t27b__content__projection
  
  function   t27b__havoc (x : t27b__ref) requires {  } ensures  {  } returns
    unit

end

(* Module for defining a value for string literal  defined at drvr.adb:139, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_403
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_403 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_403__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at drvr.adb:139, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_404
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_404 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_404__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at drvr.adb:142, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_411
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_411 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_411__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module giving axioms for type "positive", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__positive___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__positive
  
  function   dynamic_invariant
    (([mlw:proxy_symbol] [introduced] temp___expr_53) : int
    ([mlw:proxy_symbol] [introduced] temp___is_init_49) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_50) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_51) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_52) : bool) requires
    { True } ensures  { True } returns
     = (if
       ((([mlw:proxy_symbol] [introduced] temp___is_init_49) = True) \/
          (Standard__positive.first <= Standard__positive.last))
       then
       (Standard__positive.dynamic_property Standard__positive.first
          Standard__positive.last ([mlw:proxy_symbol]
          [introduced] temp___expr_53))
       )
  
  function   default_initial_assumption
    (([mlw:proxy_symbol] [introduced] temp___expr_54) : int
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_55) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module giving axioms for type "character", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__character___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  
  function   dynamic_invariant
    (([mlw:proxy_symbol] [introduced] temp___expr_81) : int
    ([mlw:proxy_symbol] [introduced] temp___is_init_77) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_78) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_79) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_80) : bool) requires
    { True } ensures  { True } returns
     = (if
       ((([mlw:proxy_symbol] [introduced] temp___is_init_77) = True) \/
          (Standard__character.first <= Standard__character.last))
       then
       (Standard__character.dynamic_property Standard__character.first
          Standard__character.last ([mlw:proxy_symbol]
          [introduced] temp___expr_81))
       )
  
  function   default_initial_assumption
    (([mlw:proxy_symbol] [introduced] temp___expr_82) : int
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_83) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module giving an empty axiom for the entity "input_string" defined at drvr.adb:100, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Drvr__fetch_safe_input__input_string___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "length" defined at drvr.adb:101, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Drvr__fetch_safe_input__length___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "valid" defined at drvr.adb:102, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Drvr__fetch_safe_input__valid___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "L_3" defined at drvr.adb:128, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Drvr__fetch_safe_input__L_3___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module for axiomatizing type "count" defined at a-textio.ads:78, created in Gnat2Why.Types.Translate_Type *)
module Ada___ada__text_io__count
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type count  = <range 0 2147483647>
  
  function   first () requires { True } ensures  { True } returns int = 0
  
  function   last () requires { True } ensures  { True } returns
    int = 2147483647
  
  function   in_range (x : int) requires { True } ensures  { True } returns
     = ((first <= x) /\ (x <= last))
  
  clone export ada__model.Static_Discrete with axiom . type t = count,
    function first = first, function last = last,
    predicate in_range = in_range
  
  type count__ref  = { mutable count__content : count }
  
  function   count__ref_count__content__projection (a : count__ref) requires
    {  } ensures  {  } returns count = a.count__content
  
  meta model_projection function count__ref_count__content__projection
  
  meta inline:no function count__ref_count__content__projection
  
  function   count__havoc (x : count__ref) requires {  } ensures  {  }
    returns unit

end

(* Module giving axioms for type "count" defined at a-textio.ads:78, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada___ada__text_io__count___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Ada___ada__text_io__count
  
  function   dynamic_invariant
    (([mlw:proxy_symbol] [introduced] temp___expr_174) : int
    ([mlw:proxy_symbol] [introduced] temp___is_init_170) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_171) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_172) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_173) : bool) requires
    { True } ensures  { True } returns
     = (if
       ((([mlw:proxy_symbol] [introduced] temp___is_init_170) = True) \/
          (Ada___ada__text_io__count.first <= Ada___ada__text_io__count.last))
       then
       (Ada___ada__text_io__count.dynamic_property
          Ada___ada__text_io__count.first Ada___ada__text_io__count.last
          ([mlw:proxy_symbol] [introduced] temp___expr_174))
       )
  
  function   default_initial_assumption
    (([mlw:proxy_symbol] [introduced] temp___expr_175) : int
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_176) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module for declaring a program function (and possibly an axiom) for "line_length" defined at a-textio.ads:243, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada___ada__text_io__line_length__2___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        _gnatprove_standard.Main
  use        Ada___ada__text_io__line_length__2
  use        Ada___ada__text_io__count___axiom
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  
  function   line_length (__void_param : unit) requires { True } ensures 
    { ((result
          = (Ada___ada__text_io__line_length__2.line_length
               !Ada___ada__text_io__file_system.file_system
               !Ada___ada__text_io__standard_in.standard_in
               !Ada___ada__text_io__standard_out.standard_out
               !Ada___ada__text_io__standard_err.standard_err
               !Ada___ada__text_io__current_in.current_in
               !Ada___ada__text_io__current_out.current_out
               !Ada___ada__text_io__current_err.current_err)) /\ True /\
         (Ada___ada__text_io__count___axiom.dynamic_invariant result True
            False True True)) } returns int
  
  axiom line_length__post_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for declaring a program function (and possibly an axiom) for "page_length" defined at a-textio.ads:249, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada___ada__text_io__page_length__2___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        _gnatprove_standard.Main
  use        Ada___ada__text_io__page_length__2
  use        Ada___ada__text_io__count___axiom
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  
  function   page_length (__void_param : unit) requires { True } ensures 
    { ((result
          = (Ada___ada__text_io__page_length__2.page_length
               !Ada___ada__text_io__file_system.file_system
               !Ada___ada__text_io__standard_in.standard_in
               !Ada___ada__text_io__standard_out.standard_out
               !Ada___ada__text_io__standard_err.standard_err
               !Ada___ada__text_io__current_in.current_in
               !Ada___ada__text_io__current_out.current_out
               !Ada___ada__text_io__current_err.current_err)) /\ True /\
         (Ada___ada__text_io__count___axiom.dynamic_invariant result True
            False True True)) } returns int
  
  axiom page_length__post_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module giving an empty axiom for the entity "min" defined at drvr.adb:99, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Drvr__fetch_safe_input__min___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "max" defined at drvr.adb:99, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Drvr__fetch_safe_input__max___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "input" defined at drvr.adb:99, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Drvr__fetch_safe_input__input___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving axioms for type "TTinput_stringSP1" defined at drvr.adb:100, created in Gnat2Why.Types.Generate_Type_Completion *)
module Drvr__fetch_safe_input__TTinput_stringSP1___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving axioms for type "T14b" defined at drvr.adb:132, created in Gnat2Why.Types.Generate_Type_Completion *)
module Drvr__fetch_safe_input__L_3__T14b___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving axioms for type "T16b" defined at drvr.adb:133, created in Gnat2Why.Types.Generate_Type_Completion *)
module Drvr__fetch_safe_input__L_3__T16b___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "result" defined at drvr.adb:117 instantiated at drvr.adb:133, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Drvr__fetch_safe_input__L_3__B22b__result___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "L_2" defined at drvr.adb:119 instantiated at drvr.adb:133, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Drvr__fetch_safe_input__L_3__B22b__L_2___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "i" defined at drvr.adb:119 instantiated at drvr.adb:133, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Drvr__fetch_safe_input__L_3__B22b__L_2__i___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module for defining the value of constant "C18b" defined at drvr.adb:133, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Drvr__fetch_safe_input__L_3__C18b___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module for defining the value of constant "C19b" defined at drvr.adb:133, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Drvr__fetch_safe_input__L_3__C19b___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module for defining the value of constant "R20b" defined at drvr.adb:133, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Drvr__fetch_safe_input__L_3__R20b___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving axioms for type "T25b" defined at drvr.adb:120 instantiated at drvr.adb:133, created in Gnat2Why.Types.Generate_Type_Completion *)
module Drvr__fetch_safe_input__L_3__B22b__L_2__T25b___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving axioms for type "T27b" defined at drvr.adb:121 instantiated at drvr.adb:133, created in Gnat2Why.Types.Generate_Type_Completion *)
module Drvr__fetch_safe_input__L_3__B22b__L_2__T27b___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module for checking contracts and absence of run-time errors in subprogram "fetch_safe_input" defined at drvr.adb:99, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Drvr__fetch_safe_input__subprogram_def
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        _gnatprove_standard.Main
  use        _gnatprove_standard.Integer
  use        _gnatprove_standard.Boolean
  use        Standard_String__Img
  use        Standard__integer
  use        Standard__integer
  use        Standard__integer___axiom
  use        Standard__natural___axiom
  use        Standard__positive
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character__Concat
  use        Standard__string
  use        Standard__integer__rep
  use        Drvr__fetch_safe_input__min
  use        Drvr__fetch_safe_input__max
  use        Drvr__fetch_safe_input__input
  use        Array__Int__Standard__character
  use        Drvr__fetch_safe_input__input_string
  use        Drvr__fetch_safe_input__length
  use        Drvr__fetch_safe_input__valid
  use        Drvr__fetch_safe_input__is_digit_string___axiom
  use        Ada___ada__text_io__get_line__2___axiom
  use        Drvr__fetch_safe_input__L_3__T16b
  use        Drvr__fetch_safe_input__L_3__C18b
  use        Drvr__fetch_safe_input__L_3__R20b
  use        Drvr__fetch_safe_input__L_3__C19b
  use        Drvr__fetch_safe_input__L_3__B22b__result
  use        Drvr__fetch_safe_input__L_3__B22b__L_2__i
  use        Ada___ada__text_io__put_line__2___axiom
  use        Drvr__fetch_safe_input__TTinput_stringSP1
  use        Drvr__fetch_safe_input__Tinput_stringS___axiom
  use        Drvr__fetch_safe_input__L_3
  use        Drvr__fetch_safe_input__L_3__T14b
  use        Drvr__fetch_safe_input__L_3__B22b__L_2
  use        Drvr__fetch_safe_input__L_3__B22b__L_2__T25b
  use        Drvr__fetch_safe_input__L_3__B22b__L_2__T27b
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_403
  use        Array__Int__Standard__character
  use        Temp___String_Literal_404
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_411
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Standard__integer___axiom
  use        Standard__natural___axiom
  use        Standard__positive___axiom
  use        Standard__character___axiom
  use        Standard__string___axiom
  use        Standard__integer___axiom
  use        Drvr__fetch_safe_input__input_string___axiom
  use        Drvr__fetch_safe_input__length___axiom
  use        Drvr__fetch_safe_input__valid___axiom
  use        Drvr__fetch_safe_input__L_3___axiom
  use        Ada___ada__text_io__count___axiom
  use        Ada___ada__text_io__line_length__2___axiom
  use        Ada___ada__text_io__page_length__2___axiom
  use        Ada___ada__text_io__get_line__2___axiom
  use        Ada___ada__text_io__put_line__2___axiom
  use        Drvr__fetch_safe_input__min___axiom
  use        Drvr__fetch_safe_input__max___axiom
  use        Drvr__fetch_safe_input__input___axiom
  use        Drvr__fetch_safe_input__Tinput_stringS___axiom
  use        Drvr__fetch_safe_input__TTinput_stringSP1___axiom
  use        Drvr__fetch_safe_input__is_digit_string___axiom
  use        Drvr__fetch_safe_input__L_3__T14b___axiom
  use        Drvr__fetch_safe_input__L_3__T16b___axiom
  use        Drvr__fetch_safe_input__L_3__B22b__result___axiom
  use        Drvr__fetch_safe_input__L_3__B22b__L_2___axiom
  use        Drvr__fetch_safe_input__L_3__B22b__L_2__i___axiom
  use        Drvr__fetch_safe_input__L_3__C18b___axiom
  use        Drvr__fetch_safe_input__L_3__C19b___axiom
  use        Drvr__fetch_safe_input__L_3__R20b___axiom
  use        Drvr__fetch_safe_input__L_3__B22b__L_2__T25b___axiom
  use        Drvr__fetch_safe_input__L_3__B22b__L_2__T27b___axiom
  
  function [GP_Subp:drvr.adb:99] [sloc:drvr.adb:99] def (__void_param : unit)
    requires { True } ensures  {  } returns
     = (* Assume dynamic invariants of inputs of the subprogram drvr.adb:99 *);
        assume
        { (Standard__integer___axiom.dynamic_invariant
             Drvr__fetch_safe_input__min.min True False True True) };
        assume
        { (Standard__integer___axiom.dynamic_invariant
             Drvr__fetch_safe_input__max.max True False True True) };
        assume
        { (Standard__integer___axiom.dynamic_invariant
             !Drvr__fetch_safe_input__input.input False False True True) };
        (* Assume moved pointers in outputs of the subprogram drvr.adb:99 *);
        (* Check for RTE in the Pre of the subprogram drvr.adb:99 *);
        abstract ensures
        { True } begin  (let _ = True in ())  end;
        (* Assume Pre of the subprogram drvr.adb:99 *);
        (try
        ();
          ([sloc:drvr.adb:100] ());
          ([sloc:drvr.adb:100] assume
          { (Drvr__fetch_safe_input__Tinput_stringS___axiom.default_initial_assumption
               !Drvr__fetch_safe_input__input_string.input_string False) };
          assume
          { (Drvr__fetch_safe_input__Tinput_stringS___axiom.dynamic_invariant
               !Drvr__fetch_safe_input__input_string.input_string False False
               True True) });
          ([sloc:drvr.adb:101] assume
          { (Standard__natural___axiom.default_initial_assumption
               !Drvr__fetch_safe_input__length.length False) };
          assume
          { (Standard__natural___axiom.dynamic_invariant
               !Drvr__fetch_safe_input__length.length False False True True) });
          ([sloc:drvr.adb:102] ( Drvr__fetch_safe_input__valid.valid :=
          (_gnatprove_standard.Boolean.of_int 0)));
          ([sloc:drvr.adb:105] ());
          ([sloc:drvr.adb:105] ());
          ([sloc:drvr.adb:105] ());
          ([sloc:drvr.adb:116] ());
          ([sloc:drvr.adb:116] ());
          ([sloc:drvr.adb:116] ());
          ([sloc:drvr.adb:128] ());
          ();
          ([GP_Sloc:drvr.adb:128:20] ([sloc:drvr.adb:128] (* Translation of an Ada loop from drvr.adb:128 *);
                                     (if --pp_not NOT IMPLEMENTED then
                                     (try
                                     (let temp___loop_entry_416 =
                                       !Drvr__fetch_safe_input__input_string.input_string
                                       in
                                       (* While loop translating the Ada loop from drvr.adb:128 *);
                                       ([sloc:drvr.adb:128] loop
                                                              (* Check for absence of RTE in the loop invariant and variant *)
                                                              
                                                              
                                                              (* Assume implicit invariants from the loop drvr.adb:128 *);
                                                              assume
                                                              { (_gnatprove_standard.Boolean.andb
                                                                   ((((True
                                                                    /\
                                                                    (Standard__natural___axiom.dynamic_invariant
                                                                    !Drvr__fetch_safe_input__length.length
                                                                    False
                                                                    True True
                                                                    True) /\
                                                                    True /\
                                                                    True) /\
                                                                    True /\
                                                                    True /\
                                                                    True) /\
                                                                    (Standard__integer___axiom.dynamic_invariant
                                                                    !Drvr__fetch_safe_input__input.input
                                                                    False
                                                                    True True
                                                                    True) /\
                                                                    True /\
                                                                    True) /\
                                                                    (Drvr__fetch_safe_input__Tinput_stringS___axiom.dynamic_invariant
                                                                    !Drvr__fetch_safe_input__input_string.input_string
                                                                    False
                                                                    True True
                                                                    True) /\
                                                                    True /\
                                                                    True)
                                                                   --pp_not NOT IMPLEMENTED) };
                                                              (* Continuation of loop after loop invariant and variant *);
                                                              ();
                                                              ([GP_Sloc:drvr.adb:129:16] 
                                                              ([sloc:drvr.adb:129] ()));
                                                              ([GP_Sloc:drvr.adb:129:30] 
                                                              ([sloc:drvr.adb:129] ()));
                                                              ([GP_Sloc:drvr.adb:129:7] 
                                                              ([sloc:drvr.adb:129] ()));
                                                              ([GP_Sloc:drvr.adb:129:7] 
                                                              ([sloc:drvr.adb:129] (let ([mlw:proxy_symbol]
                                                              [introduced] temp___compl_388)
                                                              =
                                                              (let ([mlw:proxy_symbol]
                                                                [introduced] temp___387)
                                                                =
                                                                ( !Drvr__fetch_safe_input__input_string.input_string)
                                                                in
                                                                (Standard__string.of_array
                                                                   ([mlw:proxy_symbol]
                                                                   [introduced] temp___387)
                                                                   Drvr__fetch_safe_input__TTinput_stringSP1.first
                                                                   Drvr__fetch_safe_input__TTinput_stringSP1.last))
                                                              in
                                                              --pp_binding_ref NOT IMPLEMENTED)));
                                                              ([GP_Sloc:drvr.adb:132:51] 
                                                              ([sloc:drvr.adb:132] ()));
                                                              ([GP_Sloc:drvr.adb:132:10] 
                                                              ([sloc:drvr.adb:132] ()));
                                                              ([GP_Sloc:drvr.adb:132:7] 
                                                              ([sloc:drvr.adb:132] 
                                                              (if
                                                              ([sloc:drvr.adb:132] ([branch_id=1006]
                                                              _gnatprove_standard.Main.spark__branch
                                                              :=
                                                              (Drvr__fetch_safe_input__is_digit_string___axiom.is_digit_string
                                                                 (let ([mlw:proxy_symbol]
                                                                 [introduced] temp___414)
                                                                 =
                                                                 (let ([mlw:proxy_symbol]
                                                                   [introduced] temp___413)
                                                                   = 
                                                                   1 in
                                                                   (Drvr__fetch_safe_input__L_3__T14b.of_array
                                                                    assert
                                                                    { ([sloc:drvr.adb:132] 
                                                                    ([GP_Shape:L_3_while__if__call_is_digit_string__slice]
                                                                    [GP_Sloc:drvr.adb:132:26]
                                                                    [vc:annotation]
                                                                    [comment:      if Is_Digit_String(Input_String(1..Length), Length) then                          ^ drvr.adb:132:26:VC_RANGE_CHECK]
                                                                    [GP_Id:32]
                                                                    [GP_Reason:VC_RANGE_CHECK] (
                                                                    (([mlw:proxy_symbol]
                                                                    [introduced] temp___413)
                                                                    <= !Drvr__fetch_safe_input__length.length)
                                                                    ->
                                                                    (((Drvr__fetch_safe_input__TTinput_stringSP1.first
                                                                    <= ([mlw:proxy_symbol]
                                                                    [introduced] temp___413))
                                                                    /\
                                                                    (([mlw:proxy_symbol]
                                                                    [introduced] temp___413)
                                                                    <= Drvr__fetch_safe_input__TTinput_stringSP1.last))
                                                                    /\
                                                                    ((Drvr__fetch_safe_input__TTinput_stringSP1.first
                                                                    <= !Drvr__fetch_safe_input__length.length)
                                                                    /\
                                                                    (!Drvr__fetch_safe_input__length.length
                                                                    <= Drvr__fetch_safe_input__TTinput_stringSP1.last)))))) };
                                                                    !Drvr__fetch_safe_input__input_string.input_string
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___413)
                                                                    !Drvr__fetch_safe_input__length.length))
                                                                 in
                                                                 (let ([mlw:proxy_symbol]
                                                                 [introduced] temp___415)
                                                                 =
                                                                 ( (Drvr__fetch_safe_input__L_3__T14b.to_array
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___414)))
                                                                 in
                                                                 (Standard__string.of_array
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___415)
                                                                    (
                                                                    Drvr__fetch_safe_input__L_3__T14b.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___414))
                                                                    (
                                                                    Drvr__fetch_safe_input__L_3__T14b.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___414)))))
                                                                 !Drvr__fetch_safe_input__length.length)));
                                                              ([branch_id=1006] _gnatprove_standard.Main.spark__branch).bool__content
                                                              then
                                                              ();
                                                              ([GP_Sloc:drvr.adb:133:62] 
                                                              ([sloc:drvr.adb:133] ()));
                                                              ([GP_Sloc:drvr.adb:133:19] 
                                                              ([sloc:drvr.adb:133] ()));
                                                              ([GP_Sloc:drvr.adb:133:19] 
                                                              ([sloc:drvr.adb:133] 
                                                              ([sloc:drvr.adb:133] (let drvr__fetch_safe_input__L_3__C18b__assume
                                                              =
                                                              (let ([mlw:proxy_symbol]
                                                                [introduced] temp___392)
                                                                = 1 in
                                                                (Drvr__fetch_safe_input__L_3__T16b.of_array
                                                                   assert
                                                                   { ([sloc:drvr.adb:133] 
                                                                    ([GP_Shape:L_3_while__if__C18b_decl__slice]
                                                                    [vc:annotation]
                                                                    [GP_Reason:VC_RANGE_CHECK]
                                                                    [comment:         Input := String_To_Integer(Input_String(1..Length), Length);                   ^ drvr.adb:133:19:VC_RANGE_CHECK]
                                                                    [GP_Id:20]
                                                                    [GP_Sloc:drvr.adb:133:19] (
                                                                    (([mlw:proxy_symbol]
                                                                    [introduced] temp___392)
                                                                    <= !Drvr__fetch_safe_input__length.length)
                                                                    ->
                                                                    (((Drvr__fetch_safe_input__TTinput_stringSP1.first
                                                                    <= ([mlw:proxy_symbol]
                                                                    [introduced] temp___392))
                                                                    /\
                                                                    (([mlw:proxy_symbol]
                                                                    [introduced] temp___392)
                                                                    <= Drvr__fetch_safe_input__TTinput_stringSP1.last))
                                                                    /\
                                                                    ((Drvr__fetch_safe_input__TTinput_stringSP1.first
                                                                    <= !Drvr__fetch_safe_input__length.length)
                                                                    /\
                                                                    (!Drvr__fetch_safe_input__length.length
                                                                    <= Drvr__fetch_safe_input__TTinput_stringSP1.last)))))) };
                                                                   !Drvr__fetch_safe_input__input_string.input_string
                                                                   ([mlw:proxy_symbol]
                                                                   [introduced] temp___392)
                                                                   !Drvr__fetch_safe_input__length.length))
                                                              in assume
                                                              { (drvr__fetch_safe_input__L_3__C18b__assume
                                                                   = Drvr__fetch_safe_input__L_3__C18b.c18b) });
                                                              assume
                                                              { (if False
                                                                then 
                                                                True  else
                                                                (((Drvr__fetch_safe_input__L_3__T16b.dynamic_property
                                                                    1
                                                                    !Drvr__fetch_safe_input__length.length
                                                                    (Drvr__fetch_safe_input__L_3__T16b.first
                                                                    Drvr__fetch_safe_input__L_3__C18b.c18b)
                                                                    (Drvr__fetch_safe_input__L_3__T16b.last
                                                                    Drvr__fetch_safe_input__L_3__C18b.c18b))
                                                                    /\
                                                                    (
                                                                    (Drvr__fetch_safe_input__L_3__T16b.first
                                                                    Drvr__fetch_safe_input__L_3__C18b.c18b)
                                                                    = 1)) /\
                                                                   ((Drvr__fetch_safe_input__L_3__T16b.last
                                                                    Drvr__fetch_safe_input__L_3__C18b.c18b)
                                                                    = !Drvr__fetch_safe_input__length.length))) })));
                                                              ([GP_Sloc:drvr.adb:133:53] 
                                                              ([sloc:drvr.adb:133] 
                                                              ([sloc:drvr.adb:133] (let drvr__fetch_safe_input__L_3__R20b__assume
                                                              =
                                                              !Drvr__fetch_safe_input__length.length
                                                              in assume
                                                              { (drvr__fetch_safe_input__L_3__R20b__assume
                                                                   = Drvr__fetch_safe_input__L_3__R20b.r20b) });
                                                              assume
                                                              { (Standard__natural___axiom.dynamic_invariant
                                                                   Drvr__fetch_safe_input__L_3__R20b.r20b
                                                                   True False
                                                                   True True) })));
                                                              ([GP_Sloc:drvr.adb:133:19] 
                                                              ([sloc:drvr.adb:133] 
                                                              ([sloc:drvr.adb:133] abstract
                                                              ensures
                                                              { True } begin 
                                                               (let _ =
                                                              (let ([mlw:proxy_symbol]
                                                                [introduced] temp___394)
                                                                = 1 in
                                                                (Drvr__fetch_safe_input__L_3__T16b.of_array
                                                                   assert
                                                                   { ([sloc:drvr.adb:133] 
                                                                    ([GP_Shape:L_3_while__if__slice]
                                                                    [vc:annotation]
                                                                    [GP_Reason:VC_RANGE_CHECK]
                                                                    [comment:         Input := String_To_Integer(Input_String(1..Length), Length);                   ^ drvr.adb:133:19:VC_RANGE_CHECK]
                                                                    [GP_Id:21]
                                                                    [GP_Sloc:drvr.adb:133:19] (
                                                                    (([mlw:proxy_symbol]
                                                                    [introduced] temp___394)
                                                                    <= Drvr__fetch_safe_input__L_3__R20b.r20b)
                                                                    ->
                                                                    (((Drvr__fetch_safe_input__TTinput_stringSP1.first
                                                                    <= ([mlw:proxy_symbol]
                                                                    [introduced] temp___394))
                                                                    /\
                                                                    (([mlw:proxy_symbol]
                                                                    [introduced] temp___394)
                                                                    <= Drvr__fetch_safe_input__TTinput_stringSP1.last))
                                                                    /\
                                                                    ((Drvr__fetch_safe_input__TTinput_stringSP1.first
                                                                    <= Drvr__fetch_safe_input__L_3__R20b.r20b)
                                                                    /\
                                                                    (Drvr__fetch_safe_input__L_3__R20b.r20b
                                                                    <= Drvr__fetch_safe_input__TTinput_stringSP1.last)))))) };
                                                                   !Drvr__fetch_safe_input__input_string.input_string
                                                                   ([mlw:proxy_symbol]
                                                                   [introduced] temp___394)
                                                                   Drvr__fetch_safe_input__L_3__R20b.r20b))
                                                              in ())  end)));
                                                              ([GP_Sloc:drvr.adb:133:19] 
                                                              ([sloc:drvr.adb:133] 
                                                              ([sloc:drvr.adb:133] (let drvr__fetch_safe_input__L_3__C19b__assume
                                                              =
                                                              !Drvr__fetch_safe_input__length.length
                                                              in assume
                                                              { (drvr__fetch_safe_input__L_3__C19b__assume
                                                                   = Drvr__fetch_safe_input__L_3__C19b.c19b) });
                                                              assume
                                                              { (Standard__natural___axiom.dynamic_invariant
                                                                   Drvr__fetch_safe_input__L_3__C19b.c19b
                                                                   True False
                                                                   True True) })));
                                                              ([GP_Sloc:drvr.adb:133:19] 
                                                              ([sloc:drvr.adb:133] ();
                                                              ([sloc:drvr.adb:117] (
                                                              Drvr__fetch_safe_input__L_3__B22b__result.result__
                                                              := ( 0));
                                                              assume
                                                              { (Standard__integer___axiom.dynamic_invariant
                                                                   !Drvr__fetch_safe_input__L_3__B22b__result.result__
                                                                   True False
                                                                   True True) });
                                                              ([sloc:drvr.adb:119] ());
                                                              ();
                                                              ([GP_Sloc:drvr.adb:119:25:inlined:drvr.adb:133:19] 
                                                              ([sloc:drvr.adb:119] (let ([mlw:proxy_symbol]
                                                              [introduced] temp___395)
                                                              = 1 in
                                                              (let ([mlw:proxy_symbol]
                                                              [introduced] temp___396)
                                                              =
                                                              Drvr__fetch_safe_input__L_3__C19b.c19b
                                                              in (
                                                              Drvr__fetch_safe_input__L_3__B22b__L_2__i.i
                                                              :=
                                                              ([mlw:proxy_symbol]
                                                                [introduced] temp___395));
                                                              (* Translation of an Ada loop from drvr.adb:119 instantiated at drvr.adb:133 *);
                                                              (if
                                                              (_gnatprove_standard.Boolean.andb
                                                                 (([mlw:proxy_symbol]
                                                                    [introduced] temp___395)
                                                                    <= !Drvr__fetch_safe_input__L_3__B22b__L_2__i.i)
                                                                 (!Drvr__fetch_safe_input__L_3__B22b__L_2__i.i
                                                                    <= ([mlw:proxy_symbol]
                                                                    [introduced] temp___396)))
                                                              then
                                                              (try
                                                              (* While loop translating the Ada loop from drvr.adb:119 instantiated at drvr.adb:133 *);
                                                                ([sloc:drvr.adb:119] 
                                                                loop
                                                                  (* Check for absence of RTE in the loop invariant and variant *)
                                                                  
                                                                  
                                                                  (* Assume implicit invariants from the loop drvr.adb:119 instantiated at drvr.adb:133 *);
                                                                  assume
                                                                  { (
                                                                    _gnatprove_standard.Boolean.andb
                                                                    (True /\
                                                                    (Standard__integer___axiom.dynamic_invariant
                                                                    !Drvr__fetch_safe_input__L_3__B22b__result.result__
                                                                    True True
                                                                    True True)
                                                                    /\ True
                                                                    /\ True)
                                                                    ((1
                                                                    <= !Drvr__fetch_safe_input__L_3__B22b__L_2__i.i)
                                                                    /\
                                                                    (!Drvr__fetch_safe_input__L_3__B22b__L_2__i.i
                                                                    <= Drvr__fetch_safe_input__L_3__C19b.c19b))) };
                                                                  (* Continuation of loop after loop invariant and variant *);
                                                                  ();
                                                                  ([GP_Sloc:drvr.adb:120:10:inlined:drvr.adb:133:19] 
                                                                  ([sloc:drvr.adb:120] 
                                                                  (if
                                                                  ([sloc:drvr.adb:120] ([branch_id=13821]
                                                                  _gnatprove_standard.Main.spark__branch
                                                                  :=
                                                                  (!Drvr__fetch_safe_input__L_3__B22b__L_2__i.i
                                                                    <= 
                                                                    ([sloc:drvr.adb:120] 
                                                                    ([GP_Sloc:drvr.adb:120:19:inlined:drvr.adb:133:19]
                                                                    [vc:annotation]
                                                                    [GP_Reason:VC_RANGE_CHECK]
                                                                    [GP_Shape:L_3_while__if__B22b_declblk__L_2_while__if__cmp__typeconv__length_ref]
                                                                    [comment:         if I <= S'Length then                   ^ drvr.adb:120:19:inlined:drvr.adb:133:19:VC_RANGE_CHECK]
                                                                    [GP_Id:28] (
                                                                    Standard__integer.range_check_
                                                                    abstract
                                                                    ensures
                                                                    { True } begin 
                                                                     (let _ =
                                                                    (let ([mlw:proxy_symbol]
                                                                    [introduced] temp___400)
                                                                    = 1 in
                                                                    (Drvr__fetch_safe_input__L_3__B22b__L_2__T25b.of_array
                                                                    assert
                                                                    { ([sloc:drvr.adb:120] 
                                                                    ([vc:annotation]
                                                                    [GP_Reason:VC_RANGE_CHECK]
                                                                    [GP_Sloc:drvr.adb:120:18:inlined:drvr.adb:133:19]
                                                                    [comment:         if I <= S'Length then                  ^ drvr.adb:120:18:inlined:drvr.adb:133:19:VC_RANGE_CHECK]
                                                                    [GP_Shape:L_3_while__if__B22b_declblk__L_2_while__if__cmp__typeconv__length_ref__slice]
                                                                    [GP_Id:27] (
                                                                    (([mlw:proxy_symbol]
                                                                    [introduced] temp___400)
                                                                    <= Drvr__fetch_safe_input__L_3__R20b.r20b)
                                                                    ->
                                                                    (((Drvr__fetch_safe_input__TTinput_stringSP1.first
                                                                    <= ([mlw:proxy_symbol]
                                                                    [introduced] temp___400))
                                                                    /\
                                                                    (([mlw:proxy_symbol]
                                                                    [introduced] temp___400)
                                                                    <= Drvr__fetch_safe_input__TTinput_stringSP1.last))
                                                                    /\
                                                                    ((Drvr__fetch_safe_input__TTinput_stringSP1.first
                                                                    <= Drvr__fetch_safe_input__L_3__R20b.r20b)
                                                                    /\
                                                                    (Drvr__fetch_safe_input__L_3__R20b.r20b
                                                                    <= Drvr__fetch_safe_input__TTinput_stringSP1.last)))))) };
                                                                    !Drvr__fetch_safe_input__input_string.input_string
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___400)
                                                                    Drvr__fetch_safe_input__L_3__R20b.r20b))
                                                                    in ())  end;
                                                                    (Drvr__fetch_safe_input__L_3__B22b__L_2__T25b.length
                                                                    (let ([mlw:proxy_symbol]
                                                                    [introduced] temp___400)
                                                                    = 1 in
                                                                    (Drvr__fetch_safe_input__L_3__B22b__L_2__T25b.of_array
                                                                    assert
                                                                    { ([sloc:drvr.adb:120] 
                                                                    ([vc:annotation]
                                                                    [GP_Reason:VC_RANGE_CHECK]
                                                                    [GP_Sloc:drvr.adb:120:18:inlined:drvr.adb:133:19]
                                                                    [comment:         if I <= S'Length then                  ^ drvr.adb:120:18:inlined:drvr.adb:133:19:VC_RANGE_CHECK]
                                                                    [GP_Shape:L_3_while__if__B22b_declblk__L_2_while__if__cmp__typeconv__length_ref__slice]
                                                                    [GP_Id:27] (
                                                                    (([mlw:proxy_symbol]
                                                                    [introduced] temp___400)
                                                                    <= Drvr__fetch_safe_input__L_3__R20b.r20b)
                                                                    ->
                                                                    (((Drvr__fetch_safe_input__TTinput_stringSP1.first
                                                                    <= ([mlw:proxy_symbol]
                                                                    [introduced] temp___400))
                                                                    /\
                                                                    (([mlw:proxy_symbol]
                                                                    [introduced] temp___400)
                                                                    <= Drvr__fetch_safe_input__TTinput_stringSP1.last))
                                                                    /\
                                                                    ((Drvr__fetch_safe_input__TTinput_stringSP1.first
                                                                    <= Drvr__fetch_safe_input__L_3__R20b.r20b)
                                                                    /\
                                                                    (Drvr__fetch_safe_input__L_3__R20b.r20b
                                                                    <= Drvr__fetch_safe_input__TTinput_stringSP1.last)))))) };
                                                                    !Drvr__fetch_safe_input__input_string.input_string
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___400)
                                                                    Drvr__fetch_safe_input__L_3__R20b.r20b)))))))));
                                                                  ([branch_id=13821] _gnatprove_standard.Main.spark__branch).bool__content
                                                                  then
                                                                  ();
                                                                  ([GP_Sloc:drvr.adb:121:20:inlined:drvr.adb:133:19] 
                                                                  ([sloc:drvr.adb:121] (
                                                                  Drvr__fetch_safe_input__L_3__B22b__result.result__
                                                                  :=
                                                                  ( ([sloc:drvr.adb:121] 
                                                                    ([vc:annotation]
                                                                    [GP_Reason:VC_OVERFLOW_CHECK]
                                                                    [GP_Sloc:drvr.adb:121:57:inlined:drvr.adb:133:19]
                                                                    [comment:            Result := Result * 10 + Character'Pos(S(I)) - Character'Pos('0');                                                         ^ drvr.adb:121:57:inlined:drvr.adb:133:19:VC_OVERFLOW_CHECK]
                                                                    [GP_Shape:L_3_while__if__B22b_declblk__L_2_while__if__result_assign__sub]
                                                                    [GP_Id:26] (
                                                                    Standard__integer.range_check_
                                                                    (([sloc:drvr.adb:121] 
                                                                    ([vc:annotation]
                                                                    [GP_Reason:VC_OVERFLOW_CHECK]
                                                                    [GP_Shape:L_3_while__if__B22b_declblk__L_2_while__if__result_assign__sub__add]
                                                                    [GP_Sloc:drvr.adb:121:35:inlined:drvr.adb:133:19]
                                                                    [GP_Id:25]
                                                                    [comment:            Result := Result * 10 + Character'Pos(S(I)) - Character'Pos('0');                                   ^ drvr.adb:121:35:inlined:drvr.adb:133:19:VC_OVERFLOW_CHECK] (
                                                                    Standard__integer.range_check_
                                                                    (([sloc:drvr.adb:121] 
                                                                    ([comment:            Result := Result * 10 + Character'Pos(S(I)) - Character'Pos('0');                              ^ drvr.adb:121:30:inlined:drvr.adb:133:19:VC_OVERFLOW_CHECK]
                                                                    [GP_Shape:L_3_while__if__B22b_declblk__L_2_while__if__result_assign__sub__add__mult]
                                                                    [vc:annotation]
                                                                    [GP_Reason:VC_OVERFLOW_CHECK]
                                                                    [GP_Id:22]
                                                                    [GP_Sloc:drvr.adb:121:30:inlined:drvr.adb:133:19] (
                                                                    Standard__integer.range_check_
                                                                    (!Drvr__fetch_safe_input__L_3__B22b__result.result__
                                                                    * 10))))
                                                                    + (Standard__character__rep.to_rep
                                                                    (let ([mlw:proxy_symbol]
                                                                    [introduced] temp___399)
                                                                    =
                                                                    (let ([mlw:proxy_symbol]
                                                                    [introduced] temp___398)
                                                                    = 1 in
                                                                    (Drvr__fetch_safe_input__L_3__B22b__L_2__T27b.of_array
                                                                    assert
                                                                    { ([sloc:drvr.adb:121] 
                                                                    ([comment:            Result := Result * 10 + Character'Pos(S(I)) - Character'Pos('0');                                                   ^ drvr.adb:121:51:inlined:drvr.adb:133:19:VC_RANGE_CHECK]
                                                                    [vc:annotation]
                                                                    [GP_Shape:L_3_while__if__B22b_declblk__L_2_while__if__result_assign__sub__add__typeconv__pos_ref__ixdcomp__slice]
                                                                    [GP_Reason:VC_RANGE_CHECK]
                                                                    [GP_Id:23]
                                                                    [GP_Sloc:drvr.adb:121:51:inlined:drvr.adb:133:19] (
                                                                    (([mlw:proxy_symbol]
                                                                    [introduced] temp___398)
                                                                    <= Drvr__fetch_safe_input__L_3__R20b.r20b)
                                                                    ->
                                                                    (((Drvr__fetch_safe_input__TTinput_stringSP1.first
                                                                    <= ([mlw:proxy_symbol]
                                                                    [introduced] temp___398))
                                                                    /\
                                                                    (([mlw:proxy_symbol]
                                                                    [introduced] temp___398)
                                                                    <= Drvr__fetch_safe_input__TTinput_stringSP1.last))
                                                                    /\
                                                                    ((Drvr__fetch_safe_input__TTinput_stringSP1.first
                                                                    <= Drvr__fetch_safe_input__L_3__R20b.r20b)
                                                                    /\
                                                                    (Drvr__fetch_safe_input__L_3__R20b.r20b
                                                                    <= Drvr__fetch_safe_input__TTinput_stringSP1.last)))))) };
                                                                    !Drvr__fetch_safe_input__input_string.input_string
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___398)
                                                                    Drvr__fetch_safe_input__L_3__R20b.r20b))
                                                                    in
                                                                    (Array__Int__Standard__character.get
                                                                    (Drvr__fetch_safe_input__L_3__B22b__L_2__T27b.to_array
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___399))
                                                                    assert
                                                                    { ([sloc:drvr.adb:121] 
                                                                    ([GP_Shape:L_3_while__if__B22b_declblk__L_2_while__if__result_assign__sub__add__typeconv__pos_ref__ixdcomp]
                                                                    [vc:annotation]
                                                                    [GP_Sloc:drvr.adb:121:53:inlined:drvr.adb:133:19]
                                                                    [GP_Reason:VC_INDEX_CHECK]
                                                                    [GP_Id:24]
                                                                    [comment:            Result := Result * 10 + Character'Pos(S(I)) - Character'Pos('0');                                                     ^ drvr.adb:121:53:inlined:drvr.adb:133:19:VC_INDEX_CHECK] (
                                                                    ((Drvr__fetch_safe_input__L_3__B22b__L_2__T27b.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___399))
                                                                    <= !Drvr__fetch_safe_input__L_3__B22b__L_2__i.i)
                                                                    /\
                                                                    (!Drvr__fetch_safe_input__L_3__B22b__L_2__i.i
                                                                    <= (
                                                                    Drvr__fetch_safe_input__L_3__B22b__L_2__T27b.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___399)))))) };
                                                                    !Drvr__fetch_safe_input__L_3__B22b__L_2__i.i)))))))
                                                                    - 48))))))))
                                                                   else 
                                                                  ())));
                                                                  (* Check for the exit condition and loop statements appearing before the loop invariant of loop drvr.adb:119 instantiated at drvr.adb:133 *);
                                                                  (if
                                                                  (!Drvr__fetch_safe_input__L_3__B22b__L_2__i.i
                                                                    = ([mlw:proxy_symbol]
                                                                    [introduced] temp___396))
                                                                  then
                                                                  raise Drvr__fetch_safe_input__L_3__B22b__L_2.L_2
                                                                  );
                                                                  ([sloc:drvr.adb:119] (
                                                                  Drvr__fetch_safe_input__L_3__B22b__L_2__i.i
                                                                  :=
                                                                  (!Drvr__fetch_safe_input__L_3__B22b__L_2__i.i
                                                                    + 1)))
                                                                   end loop) with
                                                              | Drvr__fetch_safe_input__L_3__B22b__L_2.L_2 
                                                              -> ()) )))));
                                                              ([GP_Sloc:drvr.adb:133:19] 
                                                              ([sloc:drvr.adb:124] (
                                                              Drvr__fetch_safe_input__input.input
                                                              :=
                                                              !Drvr__fetch_safe_input__L_3__B22b__result.result__)))));
                                                              ([GP_Sloc:drvr.adb:136:10] 
                                                              ([sloc:drvr.adb:136] 
                                                              (if
                                                              ([sloc:drvr.adb:136] ([branch_id=1025]
                                                              _gnatprove_standard.Main.spark__branch
                                                              :=
                                                              (_gnatprove_standard.Boolean.andb
                                                                 (!Drvr__fetch_safe_input__input.input
                                                                    >= Drvr__fetch_safe_input__min.min)
                                                                 (!Drvr__fetch_safe_input__input.input
                                                                    <= Drvr__fetch_safe_input__max.max))));
                                                              ([branch_id=1025] _gnatprove_standard.Main.spark__branch).bool__content
                                                              then
                                                              ();
                                                              ([GP_Sloc:drvr.adb:137:13] 
                                                              ([sloc:drvr.adb:137] ()));
                                                              ([GP_Sloc:drvr.adb:137:19] 
                                                              ([sloc:drvr.adb:137] (
                                                              Drvr__fetch_safe_input__valid.valid
                                                              :=
                                                              (_gnatprove_standard.Boolean.of_int
                                                                 1))))
                                                               else
                                                              ();
                                                              ([GP_Sloc:drvr.adb:139:13] 
                                                              ([sloc:drvr.adb:139] ()));
                                                              ([GP_Sloc:drvr.adb:139:13] 
                                                              ([sloc:drvr.adb:139] (
                                                               any
                                                                --pp_effects NOT IMPLEMENTED
                                                                pre {
                                                                }
                                                              post {} return
                                                              unit);
                                                              (Ada___ada__text_io__put_line__2___axiom.put_line
                                                                 (let ([mlw:proxy_symbol]
                                                                 [introduced] temp___410)
                                                                 =
                                                                 (Standard_String__Img.to_string
                                                                    (
                                                                    Standard__integer.attr__ATTRIBUTE_IMAGE
                                                                    Drvr__fetch_safe_input__max.max)
                                                                    12) in
                                                                 (let ([mlw:proxy_symbol]
                                                                 [introduced] temp___409)
                                                                 =
                                                                 (let ([mlw:proxy_symbol]
                                                                   [introduced] temp___408)
                                                                   =
                                                                   (Temp___String_Literal_403.temp___String_Literal_403
                                                                    ()) in
                                                                   (let ([mlw:proxy_symbol]
                                                                   [introduced] temp___407)
                                                                   =
                                                                   (let ([mlw:proxy_symbol]
                                                                    [introduced] temp___406)
                                                                    =
                                                                    (Standard_String__Img.to_string
                                                                    (Standard__integer.attr__ATTRIBUTE_IMAGE
                                                                    Drvr__fetch_safe_input__min.min)
                                                                    12) in
                                                                    (let ([mlw:proxy_symbol]
                                                                    [introduced] temp___405)
                                                                    =
                                                                    (Temp___String_Literal_404.temp___String_Literal_404
                                                                    ()) in
                                                                    (Standard__string.of_array
                                                                    (Array__Int__Standard__character__Concat.concat
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___405)
                                                                    1 44
                                                                    (Standard__string.to_array
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___406))
                                                                    (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___406))
                                                                    (Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___406)))
                                                                    1
                                                                    ([sloc:drvr.adb:139] 
                                                                    ([vc:annotation]
                                                                    [GP_Reason:VC_RANGE_CHECK]
                                                                    [GP_Shape:L_3_while__if__if__call_put_line__concat__concat__concat]
                                                                    [comment:            Put_Line("Invalid entry. Please enter a value between " & Integer'Image(Min) & " and " & Integer'Image(Max));                                                                     ^ drvr.adb:139:69:VC_RANGE_CHECK]
                                                                    [GP_Id:29]
                                                                    [GP_Sloc:drvr.adb:139:69] (
                                                                    Standard__positive.range_check_
                                                                    ((1
                                                                    + ((_gnatprove_standard.Integer.length
                                                                    1 44)
                                                                    + (_gnatprove_standard.Integer.length
                                                                    (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___406))
                                                                    (Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___406)))))
                                                                    - 1)))))))
                                                                   in
                                                                   (if
                                                                   ((Standard__string.length
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___407))
                                                                    = 0)
                                                                   then
                                                                   (Standard__string.of_array
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___408)
                                                                    1 5)
                                                                    else
                                                                   (Standard__string.of_array
                                                                    (Array__Int__Standard__character__Concat.concat
                                                                    (Standard__string.to_array
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___407))
                                                                    (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___407))
                                                                    (Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___407))
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___408)
                                                                    1 5)
                                                                    (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___407))
                                                                    ([sloc:drvr.adb:139] 
                                                                    ([vc:annotation]
                                                                    [comment:            Put_Line("Invalid entry. Please enter a value between " & Integer'Image(Min) & " and " & Integer'Image(Max));                                                                                          ^ drvr.adb:139:90:VC_RANGE_CHECK]
                                                                    [GP_Id:30]
                                                                    [GP_Shape:L_3_while__if__if__call_put_line__concat__concat]
                                                                    [GP_Reason:VC_RANGE_CHECK]
                                                                    [GP_Sloc:drvr.adb:139:90] (
                                                                    Standard__positive.range_check_
                                                                    (((Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___407))
                                                                    + ((_gnatprove_standard.Integer.length
                                                                    (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___407))
                                                                    (Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___407)))
                                                                    + (_gnatprove_standard.Integer.length
                                                                    1 5)))
                                                                    - 1))))))))
                                                                 in
                                                                 (if
                                                                 ((Standard__string.length
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___409))
                                                                    = 0)
                                                                 then
                                                                 (Standard__string.of_array
                                                                    (
                                                                    Standard__string.to_array
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___410))
                                                                    (
                                                                    Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___410))
                                                                    (
                                                                    Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___410)))
                                                                  else
                                                                 (Standard__string.of_array
                                                                    (
                                                                    Array__Int__Standard__character__Concat.concat
                                                                    (Standard__string.to_array
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___409))
                                                                    (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___409))
                                                                    (Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___409))
                                                                    (Standard__string.to_array
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___410))
                                                                    (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___410))
                                                                    (Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___410)))
                                                                    (
                                                                    Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___409))
                                                                    ([sloc:drvr.adb:139] 
                                                                    ([GP_Sloc:drvr.adb:139:100]
                                                                    [GP_Shape:L_3_while__if__if__call_put_line__concat]
                                                                    [vc:annotation]
                                                                    [comment:            Put_Line("Invalid entry. Please enter a value between " & Integer'Image(Min) & " and " & Integer'Image(Max));                                                                                                    ^ drvr.adb:139:100:VC_RANGE_CHECK]
                                                                    [GP_Id:31]
                                                                    [GP_Reason:VC_RANGE_CHECK] (
                                                                    Standard__positive.range_check_
                                                                    (((Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___409))
                                                                    + ((_gnatprove_standard.Integer.length
                                                                    (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___409))
                                                                    (Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___409)))
                                                                    + (_gnatprove_standard.Integer.length
                                                                    (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___410))
                                                                    (Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___410)))))
                                                                    - 1)))))))));
                                                              ())))))  else
                                                              ();
                                                              ([GP_Sloc:drvr.adb:142:10] 
                                                              ([sloc:drvr.adb:142] ()));
                                                              ([GP_Sloc:drvr.adb:142:10] 
                                                              ([sloc:drvr.adb:142] (
                                                               any
                                                                --pp_effects NOT IMPLEMENTED
                                                                pre {
                                                                }
                                                              post {} return
                                                              unit);
                                                              (Ada___ada__text_io__put_line__2___axiom.put_line
                                                                 (let ([mlw:proxy_symbol]
                                                                 [introduced] temp___412)
                                                                 =
                                                                 ( (Temp___String_Literal_411.temp___String_Literal_411
                                                                    ())) in
                                                                 (Standard__string.of_array
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___412)
                                                                    1 45)));
                                                              ())))));
                                       (* Check for the exit condition and loop statements appearing before the loop invariant of loop drvr.adb:128 *);
                                       (if --pp_not NOT IMPLEMENTED then
                                       raise Drvr__fetch_safe_input__L_3.L_3 )
                                        end loop)) with
                                     | Drvr__fetch_safe_input__L_3.L_3  -> ())
          )));
    raise Return__exc with | Return__exc  -> ());
  abstract ensures { True } begin  (let _ = True in ())  end

end
